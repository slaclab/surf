
# Get Environment Variables
set SOURCE_FILE $::env(SOURCE_FILE)
set XDC_FILES   $::env(XDC_FILES)
set PRJ_PART    $::env(PRJ_PART)
set PROJECT     $::env(PROJECT)
set PROJ_DIR    $::env(PROJ_DIR)
set OUT_DIR     $::env(OUT_DIR)
set TOP_DIR     $::env(TOP_DIR)
set VIVADO_DIR  $::env(VIVADO_DIR)

# Setup Args
set SYNTH_ARGS ""
set OPT_ARGS   ""
set PLACE_ARGS ""
set ROUTE_ARGS ""

# Create a project
#create_project ${PROJECT}_project -force ${OUT_DIR} -part ${PRJ_PART}

# Run source file commands
source ${SOURCE_FILE}

# Read XDC FILES
read_xdc ${XDC_FILES}

# Pre-synthesis Target Script
source ${VIVADO_DIR}/pre_synthesis.tcl

# Synthesize
synth_design -top ${PROJECT} -part ${PRJ_PART} {*}${SYNTH_ARGS}

# Checkpoint
write_checkpoint -force ${PROJECT}_post_synth.dcp

# Post-synthesis Target Script
source ${VIVADO_DIR}/post_synthesis.tcl

# Optimize
if { ${OPT_ARGS} == "" } {
   opt_design
} else {
   opt_design ${OPT_ARGS}
}

# Place
place_design {*}${PLACE_ARGS}

# Checkpoint
write_checkpoint -force ${PROJECT}_post_place.dcp
report_utilization -file ${PROJECT}_post_place_util.txt

# Route
route_design {*}${ROUTE_ARGS}

# Reports are not generated by default
report_timing_summary -file ${PROJECT}_post_route_timing.txt
report_power -file ${PROJECT}_post_route_power.txt

# Save the database after post route
write_checkpoint -force ${PROJECT}_post_route.dcp

# Check for DRC
report_drc -file ${PROJECT}_post_route_drc.txt

# Post-palce & Route Target Script
source ${VIVADO_DIR}/post_route.tcl

# Write Bitstream
write_bitstream -force ${PROJECT}.bit 

