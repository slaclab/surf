library ieee;
use ieee.std_logic_1164.all;

use work.StdRtlPkg.all;

package AxiI2cQsfpPkg is
   
   type AxiI2cQsfpInType is record
      modPrstL : sl;  -- Module Present
      intL     : sl; -- Interrupt
   end record;
   type AxiI2cQsfpInArray is array (natural range <>) of AxiI2cQsfpInType;
   type AxiI2cQsfpInVectorArray is array (integer range<>, integer range<>)of AxiI2cQsfpInType;
   constant AXI_SFP_IN_INIT_C : AxiI2cQsfpInType := (
      '1',
      '1');   

   type AxiI2cQsfpInOutType is record
      scl     : sl;  -- 2-wire serial interface clock (SCL) 
      sda     : sl;  -- 2-wire serial interface data (SDA) 
   end record;
   type AxiI2cQsfpInOutArray is array (natural range <>) of AxiI2cQsfpInOutType;
   type AxiI2cQsfpInOutVectorArray is array (integer range<>, integer range<>)of AxiI2cQsfpInOutType;
   constant AXI_SFP_IN_OUT_INIT_C : AxiI2cQsfpInOutType := (
      'Z',
      'Z');       

   type AxiI2cQsfpOutType is record
      modSelL  : sl;  -- Module Select
      rstL   : sl;  -- Module Reset
      lpMode   : sl;  -- Low Power Mode
   end record;
   type AxiI2cQsfpOutArray is array (natural range <>) of AxiI2cQsfpOutType;
   type AxiI2cQsfpOutVectorArray is array (integer range<>, integer range<>)of AxiI2cQsfpOutType;
   constant AXI_SFP_OUT_INIT_C : AxiI2cQsfpOutType := (
      '1',
      '1',
      '1');

   type AxiI2cQsfpStatusType is record
      modPrstL : sl;
      intL     : sl; 
   end record;
   constant AXI_SFP_STATUS_INIT_C : AxiI2cQsfpStatusType := (
      '1',
      '1'); 

   type AxiI2cQsfpConfigType is record
      modSelL : sl; 
      rstL    : sl;  
      lpMode  : sl;
   end record;
   constant AXI_SFP_CONFIG_INIT_C : AxiI2cQsfpConfigType := (
      '1',
      '1',
      '1'); 

end package;
