/*
 * -------------------------------------------------------------------
 * This Verilog file has been automatically generated from a core originally written
 * in Bluespec SystemVerilog (BSV). The original source code can be found at:
 *
 * Repository: https://github.com/datenlord/blue-rdma
 * Author: DatenLord (https://datenlord.github.io/)
 *
 * Modifications have been made to the original core before compiling the Verilog.
 * For any questions or further information regarding the modifications, please
 * feel free to contact me.
 *
 * Modifications by: Filippo Marini
 * Email: filippo.marini@pd.infn.it
 * -------------------------------------------------------------------
 */
//
// Generated by Bluespec Compiler, version 2023.01 (build 52adafa)
//
// On Wed Sep 11 15:19:43 CEST 2024
//
// Ports:
// Name                         I/O  size props
// RDY_srvPortQP_request_put      O     1 reg
// srvPortQP_response_get         O   274 reg
// RDY_srvPortQP_response_get     O     1 reg
// RDY_workReqIn_put              O     1 reg
// dmaReadClt4SQ_request_get      O   170 reg
// RDY_dmaReadClt4SQ_request_get  O     1 reg
// RDY_dmaReadClt4SQ_response_put  O     1 reg
// RDY_respPktPipeIn_pktMetaData_put  O     1 reg
// RDY_respPktPipeIn_payload_put  O     1 reg
// statusSQ_comm_isCreate         O     1
// RDY_statusSQ_comm_isCreate     O     1 const
// statusSQ_comm_isERR            O     1
// RDY_statusSQ_comm_isERR        O     1 const
// statusSQ_comm_isInit           O     1
// RDY_statusSQ_comm_isInit       O     1 const
// statusSQ_comm_isReset          O     1
// RDY_statusSQ_comm_isReset      O     1 const
// statusSQ_comm_isRTR            O     1
// RDY_statusSQ_comm_isRTR        O     1 const
// statusSQ_comm_isRTS            O     1
// RDY_statusSQ_comm_isRTS        O     1 const
// statusSQ_comm_isSQD            O     1
// RDY_statusSQ_comm_isSQD        O     1 const
// statusSQ_comm_isNonErr         O     1
// RDY_statusSQ_comm_isNonErr     O     1 const
// statusSQ_comm_isUnknown        O     1
// RDY_statusSQ_comm_isUnknown    O     1 const
// statusSQ_comm_isRTR2RTS        O     1
// RDY_statusSQ_comm_isRTR2RTS    O     1 const
// statusSQ_comm_isStableRTS      O     1
// RDY_statusSQ_comm_isStableRTS  O     1 const
// statusSQ_comm_getAccessFlags   O     8 reg
// RDY_statusSQ_comm_getAccessFlags  O     1
// statusSQ_comm_getMaxRnrCnt     O     3 reg
// RDY_statusSQ_comm_getMaxRnrCnt  O     1
// statusSQ_comm_getMaxRetryCnt   O     3 reg
// RDY_statusSQ_comm_getMaxRetryCnt  O     1
// statusSQ_comm_getMinRnrTimer   O     5 reg
// RDY_statusSQ_comm_getMinRnrTimer  O     1
// statusSQ_comm_getMaxTimeOut    O     5 reg
// RDY_statusSQ_comm_getMaxTimeOut  O     1
// statusSQ_comm_getPendingWorkReqNum  O     8 reg
// RDY_statusSQ_comm_getPendingWorkReqNum  O     1
// statusSQ_comm_getPendingRecvReqNum  O     8 reg
// RDY_statusSQ_comm_getPendingRecvReqNum  O     1
// statusSQ_comm_getPendingReadAtomicReqNum  O     8 reg
// RDY_statusSQ_comm_getPendingReadAtomicReqNum  O     1
// statusSQ_comm_getPendingDestReadAtomicReqNum  O     8 reg
// RDY_statusSQ_comm_getPendingDestReadAtomicReqNum  O     1
// statusSQ_comm_getSigAll        O     1 reg
// RDY_statusSQ_comm_getSigAll    O     1
// statusSQ_comm_getSQPN          O    24 reg
// RDY_statusSQ_comm_getSQPN      O     1
// statusSQ_comm_getDQPN          O    24 reg
// RDY_statusSQ_comm_getDQPN      O     1
// statusSQ_comm_getPKEY          O    16 reg
// RDY_statusSQ_comm_getPKEY      O     1
// statusSQ_comm_getQKEY          O    32 reg
// RDY_statusSQ_comm_getQKEY      O     1
// statusSQ_comm_getPMTU          O     3 reg
// RDY_statusSQ_comm_getPMTU      O     1
// statusSQ_getTypeQP             O     4 reg
// RDY_statusSQ_getTypeQP         O     1 const
// statusSQ_isSQ                  O     1 const
// RDY_statusSQ_isSQ              O     1 const
// rdmaReqPipeOut_first           O   290 reg
// RDY_rdmaReqPipeOut_first       O     1 reg
// RDY_rdmaReqPipeOut_deq         O     1 reg
// rdmaReqPipeOut_notEmpty        O     1 reg
// RDY_rdmaReqPipeOut_notEmpty    O     1 const
// workCompPipeOutSQ_first        O   222 reg
// RDY_workCompPipeOutSQ_first    O     1 reg
// RDY_workCompPipeOutSQ_deq      O     1 reg
// workCompPipeOutSQ_notEmpty     O     1 reg
// RDY_workCompPipeOutSQ_notEmpty  O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// srvPortQP_request_put          I   301 reg
// workReqIn_put                  I   601 reg
// dmaReadClt4SQ_response_put     I   383 reg
// respPktPipeIn_pktMetaData_put  I   649 reg
// respPktPipeIn_payload_put      I   290 reg
// EN_srvPortQP_request_put       I     1
// EN_workReqIn_put               I     1
// EN_dmaReadClt4SQ_response_put  I     1
// EN_respPktPipeIn_pktMetaData_put  I     1
// EN_respPktPipeIn_payload_put   I     1
// EN_rdmaReqPipeOut_deq          I     1
// EN_workCompPipeOutSQ_deq       I     1
// EN_srvPortQP_response_get      I     1
// EN_dmaReadClt4SQ_request_get   I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkQP(CLK,
	    RST_N,

	    srvPortQP_request_put,
	    EN_srvPortQP_request_put,
	    RDY_srvPortQP_request_put,

	    EN_srvPortQP_response_get,
	    srvPortQP_response_get,
	    RDY_srvPortQP_response_get,

	    workReqIn_put,
	    EN_workReqIn_put,
	    RDY_workReqIn_put,

	    EN_dmaReadClt4SQ_request_get,
	    dmaReadClt4SQ_request_get,
	    RDY_dmaReadClt4SQ_request_get,

	    dmaReadClt4SQ_response_put,
	    EN_dmaReadClt4SQ_response_put,
	    RDY_dmaReadClt4SQ_response_put,

	    respPktPipeIn_pktMetaData_put,
	    EN_respPktPipeIn_pktMetaData_put,
	    RDY_respPktPipeIn_pktMetaData_put,

	    respPktPipeIn_payload_put,
	    EN_respPktPipeIn_payload_put,
	    RDY_respPktPipeIn_payload_put,

	    statusSQ_comm_isCreate,
	    RDY_statusSQ_comm_isCreate,

	    statusSQ_comm_isERR,
	    RDY_statusSQ_comm_isERR,

	    statusSQ_comm_isInit,
	    RDY_statusSQ_comm_isInit,

	    statusSQ_comm_isReset,
	    RDY_statusSQ_comm_isReset,

	    statusSQ_comm_isRTR,
	    RDY_statusSQ_comm_isRTR,

	    statusSQ_comm_isRTS,
	    RDY_statusSQ_comm_isRTS,

	    statusSQ_comm_isSQD,
	    RDY_statusSQ_comm_isSQD,

	    statusSQ_comm_isNonErr,
	    RDY_statusSQ_comm_isNonErr,

	    statusSQ_comm_isUnknown,
	    RDY_statusSQ_comm_isUnknown,

	    statusSQ_comm_isRTR2RTS,
	    RDY_statusSQ_comm_isRTR2RTS,

	    statusSQ_comm_isStableRTS,
	    RDY_statusSQ_comm_isStableRTS,

	    statusSQ_comm_getAccessFlags,
	    RDY_statusSQ_comm_getAccessFlags,

	    statusSQ_comm_getMaxRnrCnt,
	    RDY_statusSQ_comm_getMaxRnrCnt,

	    statusSQ_comm_getMaxRetryCnt,
	    RDY_statusSQ_comm_getMaxRetryCnt,

	    statusSQ_comm_getMinRnrTimer,
	    RDY_statusSQ_comm_getMinRnrTimer,

	    statusSQ_comm_getMaxTimeOut,
	    RDY_statusSQ_comm_getMaxTimeOut,

	    statusSQ_comm_getPendingWorkReqNum,
	    RDY_statusSQ_comm_getPendingWorkReqNum,

	    statusSQ_comm_getPendingRecvReqNum,
	    RDY_statusSQ_comm_getPendingRecvReqNum,

	    statusSQ_comm_getPendingReadAtomicReqNum,
	    RDY_statusSQ_comm_getPendingReadAtomicReqNum,

	    statusSQ_comm_getPendingDestReadAtomicReqNum,
	    RDY_statusSQ_comm_getPendingDestReadAtomicReqNum,

	    statusSQ_comm_getSigAll,
	    RDY_statusSQ_comm_getSigAll,

	    statusSQ_comm_getSQPN,
	    RDY_statusSQ_comm_getSQPN,

	    statusSQ_comm_getDQPN,
	    RDY_statusSQ_comm_getDQPN,

	    statusSQ_comm_getPKEY,
	    RDY_statusSQ_comm_getPKEY,

	    statusSQ_comm_getQKEY,
	    RDY_statusSQ_comm_getQKEY,

	    statusSQ_comm_getPMTU,
	    RDY_statusSQ_comm_getPMTU,

	    statusSQ_getTypeQP,
	    RDY_statusSQ_getTypeQP,

	    statusSQ_isSQ,
	    RDY_statusSQ_isSQ,

	    rdmaReqPipeOut_first,
	    RDY_rdmaReqPipeOut_first,

	    EN_rdmaReqPipeOut_deq,
	    RDY_rdmaReqPipeOut_deq,

	    rdmaReqPipeOut_notEmpty,
	    RDY_rdmaReqPipeOut_notEmpty,

	    workCompPipeOutSQ_first,
	    RDY_workCompPipeOutSQ_first,

	    EN_workCompPipeOutSQ_deq,
	    RDY_workCompPipeOutSQ_deq,

	    workCompPipeOutSQ_notEmpty,
	    RDY_workCompPipeOutSQ_notEmpty);
  input  CLK;
  input  RST_N;

  // action method srvPortQP_request_put
  input  [300 : 0] srvPortQP_request_put;
  input  EN_srvPortQP_request_put;
  output RDY_srvPortQP_request_put;

  // actionvalue method srvPortQP_response_get
  input  EN_srvPortQP_response_get;
  output [273 : 0] srvPortQP_response_get;
  output RDY_srvPortQP_response_get;

  // action method workReqIn_put
  input  [600 : 0] workReqIn_put;
  input  EN_workReqIn_put;
  output RDY_workReqIn_put;

  // actionvalue method dmaReadClt4SQ_request_get
  input  EN_dmaReadClt4SQ_request_get;
  output [169 : 0] dmaReadClt4SQ_request_get;
  output RDY_dmaReadClt4SQ_request_get;

  // action method dmaReadClt4SQ_response_put
  input  [382 : 0] dmaReadClt4SQ_response_put;
  input  EN_dmaReadClt4SQ_response_put;
  output RDY_dmaReadClt4SQ_response_put;

  // action method respPktPipeIn_pktMetaData_put
  input  [648 : 0] respPktPipeIn_pktMetaData_put;
  input  EN_respPktPipeIn_pktMetaData_put;
  output RDY_respPktPipeIn_pktMetaData_put;

  // action method respPktPipeIn_payload_put
  input  [289 : 0] respPktPipeIn_payload_put;
  input  EN_respPktPipeIn_payload_put;
  output RDY_respPktPipeIn_payload_put;

  // value method statusSQ_comm_isCreate
  output statusSQ_comm_isCreate;
  output RDY_statusSQ_comm_isCreate;

  // value method statusSQ_comm_isERR
  output statusSQ_comm_isERR;
  output RDY_statusSQ_comm_isERR;

  // value method statusSQ_comm_isInit
  output statusSQ_comm_isInit;
  output RDY_statusSQ_comm_isInit;

  // value method statusSQ_comm_isReset
  output statusSQ_comm_isReset;
  output RDY_statusSQ_comm_isReset;

  // value method statusSQ_comm_isRTR
  output statusSQ_comm_isRTR;
  output RDY_statusSQ_comm_isRTR;

  // value method statusSQ_comm_isRTS
  output statusSQ_comm_isRTS;
  output RDY_statusSQ_comm_isRTS;

  // value method statusSQ_comm_isSQD
  output statusSQ_comm_isSQD;
  output RDY_statusSQ_comm_isSQD;

  // value method statusSQ_comm_isNonErr
  output statusSQ_comm_isNonErr;
  output RDY_statusSQ_comm_isNonErr;

  // value method statusSQ_comm_isUnknown
  output statusSQ_comm_isUnknown;
  output RDY_statusSQ_comm_isUnknown;

  // value method statusSQ_comm_isRTR2RTS
  output statusSQ_comm_isRTR2RTS;
  output RDY_statusSQ_comm_isRTR2RTS;

  // value method statusSQ_comm_isStableRTS
  output statusSQ_comm_isStableRTS;
  output RDY_statusSQ_comm_isStableRTS;

  // value method statusSQ_comm_getAccessFlags
  output [7 : 0] statusSQ_comm_getAccessFlags;
  output RDY_statusSQ_comm_getAccessFlags;

  // value method statusSQ_comm_getMaxRnrCnt
  output [2 : 0] statusSQ_comm_getMaxRnrCnt;
  output RDY_statusSQ_comm_getMaxRnrCnt;

  // value method statusSQ_comm_getMaxRetryCnt
  output [2 : 0] statusSQ_comm_getMaxRetryCnt;
  output RDY_statusSQ_comm_getMaxRetryCnt;

  // value method statusSQ_comm_getMinRnrTimer
  output [4 : 0] statusSQ_comm_getMinRnrTimer;
  output RDY_statusSQ_comm_getMinRnrTimer;

  // value method statusSQ_comm_getMaxTimeOut
  output [4 : 0] statusSQ_comm_getMaxTimeOut;
  output RDY_statusSQ_comm_getMaxTimeOut;

  // value method statusSQ_comm_getPendingWorkReqNum
  output [7 : 0] statusSQ_comm_getPendingWorkReqNum;
  output RDY_statusSQ_comm_getPendingWorkReqNum;

  // value method statusSQ_comm_getPendingRecvReqNum
  output [7 : 0] statusSQ_comm_getPendingRecvReqNum;
  output RDY_statusSQ_comm_getPendingRecvReqNum;

  // value method statusSQ_comm_getPendingReadAtomicReqNum
  output [7 : 0] statusSQ_comm_getPendingReadAtomicReqNum;
  output RDY_statusSQ_comm_getPendingReadAtomicReqNum;

  // value method statusSQ_comm_getPendingDestReadAtomicReqNum
  output [7 : 0] statusSQ_comm_getPendingDestReadAtomicReqNum;
  output RDY_statusSQ_comm_getPendingDestReadAtomicReqNum;

  // value method statusSQ_comm_getSigAll
  output statusSQ_comm_getSigAll;
  output RDY_statusSQ_comm_getSigAll;

  // value method statusSQ_comm_getSQPN
  output [23 : 0] statusSQ_comm_getSQPN;
  output RDY_statusSQ_comm_getSQPN;

  // value method statusSQ_comm_getDQPN
  output [23 : 0] statusSQ_comm_getDQPN;
  output RDY_statusSQ_comm_getDQPN;

  // value method statusSQ_comm_getPKEY
  output [15 : 0] statusSQ_comm_getPKEY;
  output RDY_statusSQ_comm_getPKEY;

  // value method statusSQ_comm_getQKEY
  output [31 : 0] statusSQ_comm_getQKEY;
  output RDY_statusSQ_comm_getQKEY;

  // value method statusSQ_comm_getPMTU
  output [2 : 0] statusSQ_comm_getPMTU;
  output RDY_statusSQ_comm_getPMTU;

  // value method statusSQ_getTypeQP
  output [3 : 0] statusSQ_getTypeQP;
  output RDY_statusSQ_getTypeQP;

  // value method statusSQ_isSQ
  output statusSQ_isSQ;
  output RDY_statusSQ_isSQ;

  // value method rdmaReqPipeOut_first
  output [289 : 0] rdmaReqPipeOut_first;
  output RDY_rdmaReqPipeOut_first;

  // action method rdmaReqPipeOut_deq
  input  EN_rdmaReqPipeOut_deq;
  output RDY_rdmaReqPipeOut_deq;

  // value method rdmaReqPipeOut_notEmpty
  output rdmaReqPipeOut_notEmpty;
  output RDY_rdmaReqPipeOut_notEmpty;

  // value method workCompPipeOutSQ_first
  output [221 : 0] workCompPipeOutSQ_first;
  output RDY_workCompPipeOutSQ_first;

  // action method workCompPipeOutSQ_deq
  input  EN_workCompPipeOutSQ_deq;
  output RDY_workCompPipeOutSQ_deq;

  // value method workCompPipeOutSQ_notEmpty
  output workCompPipeOutSQ_notEmpty;
  output RDY_workCompPipeOutSQ_notEmpty;

  // signals for module outputs
  wire [289 : 0] rdmaReqPipeOut_first;
  wire [273 : 0] srvPortQP_response_get;
  wire [221 : 0] workCompPipeOutSQ_first;
  wire [169 : 0] dmaReadClt4SQ_request_get;
  wire [31 : 0] statusSQ_comm_getQKEY;
  wire [23 : 0] statusSQ_comm_getDQPN, statusSQ_comm_getSQPN;
  wire [15 : 0] statusSQ_comm_getPKEY;
  wire [7 : 0] statusSQ_comm_getAccessFlags,
	       statusSQ_comm_getPendingDestReadAtomicReqNum,
	       statusSQ_comm_getPendingReadAtomicReqNum,
	       statusSQ_comm_getPendingRecvReqNum,
	       statusSQ_comm_getPendingWorkReqNum;
  wire [4 : 0] statusSQ_comm_getMaxTimeOut, statusSQ_comm_getMinRnrTimer;
  wire [3 : 0] statusSQ_getTypeQP;
  wire [2 : 0] statusSQ_comm_getMaxRetryCnt,
	       statusSQ_comm_getMaxRnrCnt,
	       statusSQ_comm_getPMTU;
  wire RDY_dmaReadClt4SQ_request_get,
       RDY_dmaReadClt4SQ_response_put,
       RDY_rdmaReqPipeOut_deq,
       RDY_rdmaReqPipeOut_first,
       RDY_rdmaReqPipeOut_notEmpty,
       RDY_respPktPipeIn_payload_put,
       RDY_respPktPipeIn_pktMetaData_put,
       RDY_srvPortQP_request_put,
       RDY_srvPortQP_response_get,
       RDY_statusSQ_comm_getAccessFlags,
       RDY_statusSQ_comm_getDQPN,
       RDY_statusSQ_comm_getMaxRetryCnt,
       RDY_statusSQ_comm_getMaxRnrCnt,
       RDY_statusSQ_comm_getMaxTimeOut,
       RDY_statusSQ_comm_getMinRnrTimer,
       RDY_statusSQ_comm_getPKEY,
       RDY_statusSQ_comm_getPMTU,
       RDY_statusSQ_comm_getPendingDestReadAtomicReqNum,
       RDY_statusSQ_comm_getPendingReadAtomicReqNum,
       RDY_statusSQ_comm_getPendingRecvReqNum,
       RDY_statusSQ_comm_getPendingWorkReqNum,
       RDY_statusSQ_comm_getQKEY,
       RDY_statusSQ_comm_getSQPN,
       RDY_statusSQ_comm_getSigAll,
       RDY_statusSQ_comm_isCreate,
       RDY_statusSQ_comm_isERR,
       RDY_statusSQ_comm_isInit,
       RDY_statusSQ_comm_isNonErr,
       RDY_statusSQ_comm_isRTR,
       RDY_statusSQ_comm_isRTR2RTS,
       RDY_statusSQ_comm_isRTS,
       RDY_statusSQ_comm_isReset,
       RDY_statusSQ_comm_isSQD,
       RDY_statusSQ_comm_isStableRTS,
       RDY_statusSQ_comm_isUnknown,
       RDY_statusSQ_getTypeQP,
       RDY_statusSQ_isSQ,
       RDY_workCompPipeOutSQ_deq,
       RDY_workCompPipeOutSQ_first,
       RDY_workCompPipeOutSQ_notEmpty,
       RDY_workReqIn_put,
       rdmaReqPipeOut_notEmpty,
       statusSQ_comm_getSigAll,
       statusSQ_comm_isCreate,
       statusSQ_comm_isERR,
       statusSQ_comm_isInit,
       statusSQ_comm_isNonErr,
       statusSQ_comm_isRTR,
       statusSQ_comm_isRTR2RTS,
       statusSQ_comm_isRTS,
       statusSQ_comm_isReset,
       statusSQ_comm_isSQD,
       statusSQ_comm_isStableRTS,
       statusSQ_comm_isUnknown,
       statusSQ_isSQ,
       workCompPipeOutSQ_notEmpty;

  // inlined wires
  reg [4 : 0] cntrl_nextStateReg_port0__write_1;
  wire [679 : 0] sq_pendingWorkReqBuf_pushReg_port0__read,
		 sq_pendingWorkReqBuf_pushReg_port0__write_1,
		 sq_pendingWorkReqBuf_pushReg_port1__read,
		 sq_pendingWorkReqBuf_pushReg_port1__write_1,
		 sq_pendingWorkReqBuf_pushReg_port2__read,
		 sq_pendingWorkReqBuf_pushReg_port2__write_1,
		 sq_pendingWorkReqBuf_pushReg_port3__read,
		 sq_pendingWorkReqBuf_pushReg_port3__write_1,
		 sq_pendingWorkReqBuf_pushReg_port4__read,
		 sq_pendingWorkReqBuf_pushReg_port4__write_1;
  wire [289 : 0] payloadGenerator4SQ_payloadBufQ_wDataIn_wget,
		 payloadGenerator4SQ_payloadBufQ_wDataOut_wget;
  wire [23 : 0] cntrl_epsnReg_port0__read,
		cntrl_epsnReg_port0__write_1,
		cntrl_epsnReg_port1__read,
		cntrl_epsnReg_port1__write_1,
		cntrl_epsnReg_port2__read,
		cntrl_epsnReg_port2__write_1,
		cntrl_epsnReg_port3__read,
		cntrl_epsnReg_port3__write_1,
		cntrl_epsnReg_port4__read,
		cntrl_epsnReg_port4__write_1;
  wire [8 : 0] sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port0__read,
	       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port0__write_1,
	       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port1__read,
	       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port1__write_1,
	       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port2__read,
	       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port2__write_1,
	       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port3__read,
	       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port3__write_1,
	       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port4__read,
	       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port4__write_1;
  wire [4 : 0] cntrl_nextStateReg_port0__read,
	       cntrl_nextStateReg_port1__read,
	       cntrl_nextStateReg_port1__write_1,
	       cntrl_nextStateReg_port2__read,
	       cntrl_nextStateReg_port2__write_1,
	       cntrl_nextStateReg_port3__read,
	       cntrl_nextStateReg_port3__write_1,
	       cntrl_nextStateReg_port4__read,
	       cntrl_nextStateReg_port4__write_1,
	       cntrl_preReqOpCodeReg_port0__read,
	       cntrl_preReqOpCodeReg_port0__write_1,
	       cntrl_preReqOpCodeReg_port1__read,
	       cntrl_preReqOpCodeReg_port1__write_1,
	       cntrl_preReqOpCodeReg_port2__read,
	       cntrl_preReqOpCodeReg_port2__write_1,
	       cntrl_preReqOpCodeReg_port3__read,
	       cntrl_preReqOpCodeReg_port3__write_1,
	       cntrl_preReqOpCodeReg_port4__read,
	       cntrl_preReqOpCodeReg_port4__write_1;
  wire [1 : 0] sq_retryHandler_retryCntrlStateReg_port0__read,
	       sq_retryHandler_retryCntrlStateReg_port0__write_1,
	       sq_retryHandler_retryCntrlStateReg_port1__read,
	       sq_retryHandler_retryCntrlStateReg_port1__write_1,
	       sq_retryHandler_retryCntrlStateReg_port2__read,
	       sq_retryHandler_retryCntrlStateReg_port2__write_1,
	       sq_retryHandler_retryCntrlStateReg_port3__read,
	       sq_retryHandler_retryCntrlStateReg_port3__write_1,
	       sq_retryHandler_retryCntrlStateReg_port4__read,
	       sq_retryHandler_retryCntrlStateReg_port4__write_1;
  wire _deq_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPktNumQ_wget,
       _deq_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPktNumQ_whas,
       _deq_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_wget,
       _deq_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_whas,
       _deq_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqCheckQ_wget,
       _deq_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqCheckQ_whas,
       _deq_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqCountQ_wget,
       _deq_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqCountQ_whas,
       _deq_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_workReqPayloadGenQ_wget,
       _deq_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_workReqPayloadGenQ_whas,
       _deq_RL_sq_reqGenSQ_genReqHeader_EN_payloadGenerator4SQ_payloadGenRespQ_wget,
       _deq_RL_sq_reqGenSQ_genReqHeader_EN_payloadGenerator4SQ_payloadGenRespQ_whas,
       _deq_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_pendingReqHeaderQ_wget,
       _deq_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_pendingReqHeaderQ_whas,
       _deq_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPayloadGenQ_wget,
       _deq_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPayloadGenQ_whas,
       _deq_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_wget,
       _deq_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_whas,
       _deq_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_reqHeaderPrepareQ_wget,
       _deq_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_reqHeaderPrepareQ_whas,
       _deq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderGenQ_wget,
       _deq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderGenQ_whas,
       _deq_RL_sq_reqGenSQ_recvWorkReq_EN_sq_pendingWorkReqPipeOut_pipeMuxOutQ_wget,
       _deq_RL_sq_reqGenSQ_recvWorkReq_EN_sq_pendingWorkReqPipeOut_pipeMuxOutQ_whas,
       _deq_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingSpaceCalcQ_wget,
       _deq_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingSpaceCalcQ_whas,
       _deq_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingAddrCalcQ_wget,
       _deq_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingAddrCalcQ_whas,
       _deq_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingLenCalcQ_wget,
       _deq_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingLenCalcQ_whas,
       _deq_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermCheckQ_wget,
       _deq_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermCheckQ_whas,
       _deq_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingLenCheckQ_wget,
       _deq_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingLenCheckQ_whas,
       _deq_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingRetryCheckQ_wget,
       _deq_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingRetryCheckQ_whas,
       _deq_RL_sq_respHandleSQ_checkRetryErr_EN_sq_retryHandler_retryRespQ_wget,
       _deq_RL_sq_respHandleSQ_checkRetryErr_EN_sq_retryHandler_retryRespQ_whas,
       _deq_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_retryHandler_timeOutNotificationQ_wget,
       _deq_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_retryHandler_timeOutNotificationQ_whas,
       _deq_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_respPktPipe_metaDataQ_wget,
       _deq_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_respPktPipe_metaDataQ_whas,
       _deq_RL_sq_respHandleSQ_discardGhostResp_EN_respPktPipe_metaDataQ_wget,
       _deq_RL_sq_respHandleSQ_discardGhostResp_EN_respPktPipe_metaDataQ_whas,
       _deq_RL_sq_respHandleSQ_errFlushIncomingResp_EN_respPktPipe_metaDataQ_wget,
       _deq_RL_sq_respHandleSQ_errFlushIncomingResp_EN_respPktPipe_metaDataQ_whas,
       _deq_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_pendingWorkCompQ_wget,
       _deq_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_pendingWorkCompQ_whas,
       _deq_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingRespQ_wget,
       _deq_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingRespQ_whas,
       _deq_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingDmaReqQ_wget,
       _deq_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingDmaReqQ_whas,
       _deq_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermQueryQ_wget,
       _deq_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermQueryQ_whas,
       _deq_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_incomingRespQ_wget,
       _deq_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_incomingRespQ_whas,
       _deq_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_respPktPipe_metaDataQ_wget,
       _deq_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_respPktPipe_metaDataQ_whas,
       _deq_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_wget,
       _deq_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_whas,
       _deq_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_genWorkCompQ_wget,
       _deq_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_genWorkCompQ_whas,
       _deq_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_dmaWaitingQ_wget,
       _deq_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_dmaWaitingQ_whas,
       _deq_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_reqGenSQ_workCompGenReqOutQ_wget,
       _deq_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_reqGenSQ_workCompGenReqOutQ_whas,
       _deq_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_wget,
       _deq_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_whas,
       _deq_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_dmaWaitingQ_wget,
       _deq_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_dmaWaitingQ_whas,
       _enq_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_wget,
       _enq_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_whas,
       _enq_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqCheckQ_wget,
       _enq_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqCheckQ_whas,
       _enq_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_reqCountQ_wget,
       _enq_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_reqCountQ_whas,
       _enq_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_wget,
       _enq_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_whas,
       _enq_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqHeaderPrepareQ_wget,
       _enq_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqHeaderPrepareQ_whas,
       _enq_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_pendingWorkReqOutQ_wget,
       _enq_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_pendingWorkReqOutQ_whas,
       _enq_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_reqHeaderGenQ_wget,
       _enq_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_reqHeaderGenQ_whas,
       _enq_RL_sq_reqGenSQ_issuePayloadGenReq_EN_payloadGenerator4SQ_payloadGenReqQ_wget,
       _enq_RL_sq_reqGenSQ_issuePayloadGenReq_EN_payloadGenerator4SQ_payloadGenReqQ_whas,
       _enq_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPktNumQ_wget,
       _enq_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPktNumQ_whas,
       _enq_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_pendingWorkReqOutQ_wget,
       _enq_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_pendingWorkReqOutQ_whas,
       _enq_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_pendingReqHeaderQ_wget,
       _enq_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_pendingReqHeaderQ_whas,
       _enq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_psnReqOutQ_wget,
       _enq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_psnReqOutQ_whas,
       _enq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderOutQ_wget,
       _enq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderOutQ_whas,
       _enq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_workCompGenReqOutQ_wget,
       _enq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_workCompGenReqOutQ_whas,
       _enq_RL_sq_reqGenSQ_recvWorkReq_EN_sq_reqGenSQ_workReqPayloadGenQ_wget,
       _enq_RL_sq_reqGenSQ_recvWorkReq_EN_sq_reqGenSQ_workReqPayloadGenQ_whas,
       _enq_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingLenCheckQ_wget,
       _enq_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingLenCheckQ_whas,
       _enq_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingLenCalcQ_wget,
       _enq_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingLenCalcQ_whas,
       _enq_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingSpaceCalcQ_wget,
       _enq_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingSpaceCalcQ_whas,
       _enq_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingAddrCalcQ_wget,
       _enq_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingAddrCalcQ_whas,
       _enq_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingDmaReqQ_wget,
       _enq_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingDmaReqQ_whas,
       _enq_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingPermCheckQ_wget,
       _enq_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingPermCheckQ_whas,
       _enq_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_incomingRespQ_wget,
       _enq_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_incomingRespQ_whas,
       _enq_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_incomingRespQ_wget,
       _enq_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_incomingRespQ_whas,
       _enq_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_respHandleSQ_incomingRespQ_wget,
       _enq_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_respHandleSQ_incomingRespQ_whas,
       _enq_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_incomingRespQ_wget,
       _enq_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_incomingRespQ_whas,
       _enq_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_wget,
       _enq_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_whas,
       _enq_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingPermQueryQ_wget,
       _enq_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingPermQueryQ_whas,
       _enq_RL_sq_respHandleSQ_handleRespByType_EN_sq_retryHandler_retryReqQ_wget,
       _enq_RL_sq_respHandleSQ_handleRespByType_EN_sq_retryHandler_retryReqQ_whas,
       _enq_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingWorkCompQ_wget,
       _enq_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingWorkCompQ_whas,
       _enq_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingRetryCheckQ_wget,
       _enq_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingRetryCheckQ_whas,
       _enq_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_pendingRespQ_wget,
       _enq_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_pendingRespQ_whas,
       _enq_RL_sq_respHandleSQ_recvRespHeader_EN_sq_retryHandler_resetReqQ_wget,
       _enq_RL_sq_respHandleSQ_recvRespHeader_EN_sq_retryHandler_resetReqQ_whas,
       _enq_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_incomingRespQ_wget,
       _enq_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_incomingRespQ_whas,
       _enq_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_dmaWaitingQ_wget,
       _enq_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_dmaWaitingQ_whas,
       _enq_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_workCompOutQ4SQ_wget,
       _enq_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_workCompOutQ4SQ_whas,
       _enq_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_genWorkCompQ_wget,
       _enq_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_genWorkCompQ_whas,
       _enq_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_wget,
       _enq_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_whas,
       _enq_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_genWorkCompQ_wget,
       _enq_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_genWorkCompQ_whas,
       _first_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPktNumQ_wget,
       _first_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPktNumQ_whas,
       _first_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_wget,
       _first_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_whas,
       _first_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqCheckQ_wget,
       _first_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqCheckQ_whas,
       _first_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqCountQ_wget,
       _first_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqCountQ_whas,
       _first_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_workReqPayloadGenQ_wget,
       _first_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_workReqPayloadGenQ_whas,
       _first_RL_sq_reqGenSQ_genReqHeader_EN_payloadGenerator4SQ_payloadGenRespQ_wget,
       _first_RL_sq_reqGenSQ_genReqHeader_EN_payloadGenerator4SQ_payloadGenRespQ_whas,
       _first_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_pendingReqHeaderQ_wget,
       _first_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_pendingReqHeaderQ_whas,
       _first_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPayloadGenQ_wget,
       _first_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPayloadGenQ_whas,
       _first_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_wget,
       _first_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_whas,
       _first_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_reqHeaderPrepareQ_wget,
       _first_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_reqHeaderPrepareQ_whas,
       _first_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderGenQ_wget,
       _first_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderGenQ_whas,
       _first_RL_sq_reqGenSQ_recvWorkReq_EN_sq_pendingWorkReqPipeOut_pipeMuxOutQ_wget,
       _first_RL_sq_reqGenSQ_recvWorkReq_EN_sq_pendingWorkReqPipeOut_pipeMuxOutQ_whas,
       _first_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingSpaceCalcQ_wget,
       _first_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingSpaceCalcQ_whas,
       _first_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingAddrCalcQ_wget,
       _first_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingAddrCalcQ_whas,
       _first_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingLenCalcQ_wget,
       _first_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingLenCalcQ_whas,
       _first_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermCheckQ_wget,
       _first_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermCheckQ_whas,
       _first_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingLenCheckQ_wget,
       _first_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingLenCheckQ_whas,
       _first_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingRetryCheckQ_wget,
       _first_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingRetryCheckQ_whas,
       _first_RL_sq_respHandleSQ_checkRetryErr_EN_sq_retryHandler_retryRespQ_wget,
       _first_RL_sq_respHandleSQ_checkRetryErr_EN_sq_retryHandler_retryRespQ_whas,
       _first_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_retryHandler_timeOutNotificationQ_wget,
       _first_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_retryHandler_timeOutNotificationQ_whas,
       _first_RL_sq_respHandleSQ_discardGhostResp_EN_respPktPipe_metaDataQ_wget,
       _first_RL_sq_respHandleSQ_discardGhostResp_EN_respPktPipe_metaDataQ_whas,
       _first_RL_sq_respHandleSQ_errFlushIncomingResp_EN_respPktPipe_metaDataQ_wget,
       _first_RL_sq_respHandleSQ_errFlushIncomingResp_EN_respPktPipe_metaDataQ_whas,
       _first_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_pendingWorkCompQ_wget,
       _first_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_pendingWorkCompQ_whas,
       _first_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingRespQ_wget,
       _first_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingRespQ_whas,
       _first_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingDmaReqQ_wget,
       _first_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingDmaReqQ_whas,
       _first_RL_sq_respHandleSQ_preBuildRespInfo_EN_respPktPipe_metaDataQ_wget,
       _first_RL_sq_respHandleSQ_preBuildRespInfo_EN_respPktPipe_metaDataQ_whas,
       _first_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermQueryQ_wget,
       _first_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermQueryQ_whas,
       _first_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_incomingRespQ_wget,
       _first_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_incomingRespQ_whas,
       _first_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_respPktPipe_metaDataQ_wget,
       _first_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_respPktPipe_metaDataQ_whas,
       _first_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_wget,
       _first_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_whas,
       _first_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_genWorkCompQ_wget,
       _first_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_genWorkCompQ_whas,
       _first_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_dmaWaitingQ_wget,
       _first_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_dmaWaitingQ_whas,
       _first_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_reqGenSQ_workCompGenReqOutQ_wget,
       _first_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_reqGenSQ_workCompGenReqOutQ_whas,
       _first_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_wget,
       _first_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_whas,
       _first_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_dmaWaitingQ_wget,
       _first_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_dmaWaitingQ_whas,
       _i_notEmpty_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPktNumQ_wget,
       _i_notEmpty_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPktNumQ_whas,
       _i_notEmpty_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_wget,
       _i_notEmpty_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_whas,
       _i_notEmpty_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqCheckQ_wget,
       _i_notEmpty_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqCheckQ_whas,
       _i_notEmpty_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqCountQ_wget,
       _i_notEmpty_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqCountQ_whas,
       _i_notEmpty_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_workReqPayloadGenQ_wget,
       _i_notEmpty_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_workReqPayloadGenQ_whas,
       _i_notEmpty_RL_sq_reqGenSQ_genReqHeader_EN_payloadGenerator4SQ_payloadGenRespQ_wget,
       _i_notEmpty_RL_sq_reqGenSQ_genReqHeader_EN_payloadGenerator4SQ_payloadGenRespQ_whas,
       _i_notEmpty_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_pendingReqHeaderQ_wget,
       _i_notEmpty_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_pendingReqHeaderQ_whas,
       _i_notEmpty_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPayloadGenQ_wget,
       _i_notEmpty_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPayloadGenQ_whas,
       _i_notEmpty_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_wget,
       _i_notEmpty_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_whas,
       _i_notEmpty_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_reqHeaderPrepareQ_wget,
       _i_notEmpty_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_reqHeaderPrepareQ_whas,
       _i_notEmpty_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderGenQ_wget,
       _i_notEmpty_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderGenQ_whas,
       _i_notEmpty_RL_sq_reqGenSQ_recvWorkReq_EN_sq_pendingWorkReqPipeOut_pipeMuxOutQ_wget,
       _i_notEmpty_RL_sq_reqGenSQ_recvWorkReq_EN_sq_pendingWorkReqPipeOut_pipeMuxOutQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingSpaceCalcQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingSpaceCalcQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingAddrCalcQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingAddrCalcQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingLenCalcQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingLenCalcQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermCheckQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermCheckQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingLenCheckQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingLenCheckQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingRetryCheckQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingRetryCheckQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_checkRetryErr_EN_sq_retryHandler_retryRespQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_checkRetryErr_EN_sq_retryHandler_retryRespQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_retryHandler_timeOutNotificationQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_retryHandler_timeOutNotificationQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_respPktPipe_metaDataQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_respPktPipe_metaDataQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_discardGhostResp_EN_respPktPipe_metaDataQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_discardGhostResp_EN_respPktPipe_metaDataQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_errFlushIncomingResp_EN_respPktPipe_metaDataQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_errFlushIncomingResp_EN_respPktPipe_metaDataQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_pendingWorkCompQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_pendingWorkCompQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingRespQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingRespQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingDmaReqQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingDmaReqQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_preBuildRespInfo_EN_respPktPipe_metaDataQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_preBuildRespInfo_EN_respPktPipe_metaDataQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermQueryQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermQueryQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_incomingRespQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_incomingRespQ_whas,
       _i_notEmpty_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_respPktPipe_metaDataQ_wget,
       _i_notEmpty_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_respPktPipe_metaDataQ_whas,
       _i_notEmpty_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_wget,
       _i_notEmpty_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_whas,
       _i_notEmpty_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_genWorkCompQ_wget,
       _i_notEmpty_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_genWorkCompQ_whas,
       _i_notEmpty_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_dmaWaitingQ_wget,
       _i_notEmpty_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_dmaWaitingQ_whas,
       _i_notEmpty_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_reqGenSQ_workCompGenReqOutQ_wget,
       _i_notEmpty_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_reqGenSQ_workCompGenReqOutQ_whas,
       _i_notEmpty_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_wget,
       _i_notEmpty_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_whas,
       _i_notEmpty_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_dmaWaitingQ_wget,
       _i_notEmpty_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_dmaWaitingQ_whas,
       _i_notFull_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_wget,
       _i_notFull_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_whas,
       _i_notFull_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqCheckQ_wget,
       _i_notFull_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqCheckQ_whas,
       _i_notFull_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_reqCountQ_wget,
       _i_notFull_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_reqCountQ_whas,
       _i_notFull_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_wget,
       _i_notFull_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_whas,
       _i_notFull_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqHeaderPrepareQ_wget,
       _i_notFull_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqHeaderPrepareQ_whas,
       _i_notFull_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_pendingWorkReqOutQ_wget,
       _i_notFull_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_pendingWorkReqOutQ_whas,
       _i_notFull_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_reqHeaderGenQ_wget,
       _i_notFull_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_reqHeaderGenQ_whas,
       _i_notFull_RL_sq_reqGenSQ_issuePayloadGenReq_EN_payloadGenerator4SQ_payloadGenReqQ_wget,
       _i_notFull_RL_sq_reqGenSQ_issuePayloadGenReq_EN_payloadGenerator4SQ_payloadGenReqQ_whas,
       _i_notFull_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPktNumQ_wget,
       _i_notFull_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPktNumQ_whas,
       _i_notFull_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_pendingWorkReqOutQ_wget,
       _i_notFull_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_pendingWorkReqOutQ_whas,
       _i_notFull_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_pendingReqHeaderQ_wget,
       _i_notFull_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_pendingReqHeaderQ_whas,
       _i_notFull_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_psnReqOutQ_wget,
       _i_notFull_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_psnReqOutQ_whas,
       _i_notFull_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderOutQ_wget,
       _i_notFull_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderOutQ_whas,
       _i_notFull_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_workCompGenReqOutQ_wget,
       _i_notFull_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_workCompGenReqOutQ_whas,
       _i_notFull_RL_sq_reqGenSQ_recvWorkReq_EN_sq_reqGenSQ_workReqPayloadGenQ_wget,
       _i_notFull_RL_sq_reqGenSQ_recvWorkReq_EN_sq_reqGenSQ_workReqPayloadGenQ_whas,
       _i_notFull_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingLenCheckQ_wget,
       _i_notFull_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingLenCheckQ_whas,
       _i_notFull_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingLenCalcQ_wget,
       _i_notFull_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingLenCalcQ_whas,
       _i_notFull_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingSpaceCalcQ_wget,
       _i_notFull_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingSpaceCalcQ_whas,
       _i_notFull_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingAddrCalcQ_wget,
       _i_notFull_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingAddrCalcQ_whas,
       _i_notFull_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingDmaReqQ_wget,
       _i_notFull_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingDmaReqQ_whas,
       _i_notFull_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingPermCheckQ_wget,
       _i_notFull_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingPermCheckQ_whas,
       _i_notFull_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_incomingRespQ_wget,
       _i_notFull_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_incomingRespQ_whas,
       _i_notFull_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_incomingRespQ_wget,
       _i_notFull_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_incomingRespQ_whas,
       _i_notFull_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_respHandleSQ_incomingRespQ_wget,
       _i_notFull_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_respHandleSQ_incomingRespQ_whas,
       _i_notFull_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_incomingRespQ_wget,
       _i_notFull_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_incomingRespQ_whas,
       _i_notFull_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_wget,
       _i_notFull_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_whas,
       _i_notFull_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingPermQueryQ_wget,
       _i_notFull_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingPermQueryQ_whas,
       _i_notFull_RL_sq_respHandleSQ_handleRespByType_EN_sq_retryHandler_retryReqQ_wget,
       _i_notFull_RL_sq_respHandleSQ_handleRespByType_EN_sq_retryHandler_retryReqQ_whas,
       _i_notFull_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingWorkCompQ_wget,
       _i_notFull_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingWorkCompQ_whas,
       _i_notFull_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingRetryCheckQ_wget,
       _i_notFull_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingRetryCheckQ_whas,
       _i_notFull_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_pendingRespQ_wget,
       _i_notFull_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_pendingRespQ_whas,
       _i_notFull_RL_sq_respHandleSQ_recvRespHeader_EN_sq_retryHandler_resetReqQ_wget,
       _i_notFull_RL_sq_respHandleSQ_recvRespHeader_EN_sq_retryHandler_resetReqQ_whas,
       _i_notFull_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_incomingRespQ_wget,
       _i_notFull_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_incomingRespQ_whas,
       _i_notFull_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_dmaWaitingQ_wget,
       _i_notFull_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_dmaWaitingQ_whas,
       _i_notFull_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_workCompOutQ4SQ_wget,
       _i_notFull_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_workCompOutQ4SQ_whas,
       _i_notFull_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_genWorkCompQ_wget,
       _i_notFull_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_genWorkCompQ_whas,
       _i_notFull_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_wget,
       _i_notFull_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_whas,
       _i_notFull_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_genWorkCompQ_wget,
       _i_notFull_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_genWorkCompQ_whas,
       _notEmpty_RL_sq_respHandleSQ_discardGhostResp_EN_respPktPipe_metaDataQ_wget,
       _notEmpty_RL_sq_respHandleSQ_discardGhostResp_EN_respPktPipe_metaDataQ_whas,
       _notEmpty_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_respPktPipe_metaDataQ_wget,
       _notEmpty_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_respPktPipe_metaDataQ_whas,
       _notEmpty_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_reqGenSQ_workCompGenReqOutQ_wget,
       _notEmpty_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_reqGenSQ_workCompGenReqOutQ_whas,
       _notEmpty_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_wget,
       _notEmpty_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_whas,
       _port0__read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_hasTimeOutErrReg_wget,
       _port0__read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_hasTimeOutErrReg_whas,
       _port0__write_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_respHandleSQ_hasTimeOutErrReg_wget,
       _port0__write_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_respHandleSQ_hasTimeOutErrReg_whas,
       _port0__write_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_popReg_wget,
       _port0__write_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_popReg_whas,
       _port0__write_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_popReg_wget,
       _port0__write_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_popReg_whas,
       _port0__write_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_hasTimeOutErrReg_wget,
       _port0__write_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_hasTimeOutErrReg_whas,
       _port0__write_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_hasInternalErrReg_wget,
       _port0__write_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_hasInternalErrReg_whas,
       _port1__read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_preScanRestartReg_wget,
       _port1__read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_preScanRestartReg_whas,
       _port1__read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_scanStartReg_wget,
       _port1__read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_scanStartReg_whas,
       _port1__read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_preScanRestartReg_wget,
       _port1__read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_preScanRestartReg_whas,
       _port1__read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_scanStartReg_wget,
       _port1__read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_scanStartReg_whas,
       _read_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_cntrl_preStateReg_wget,
       _read_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_cntrl_preStateReg_whas,
       _read_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_cntrl_stateReg_wget,
       _read_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_cntrl_stateReg_whas,
       _read_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_isNormalStateReg_wget,
       _read_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_isNormalStateReg_whas,
       _read_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_cntrl_npsnReg_wget,
       _read_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_cntrl_npsnReg_whas,
       _read_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_cntrl_preStateReg_wget,
       _read_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_cntrl_preStateReg_whas,
       _read_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_cntrl_stateReg_wget,
       _read_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_cntrl_stateReg_whas,
       _read_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_isNormalStateReg_wget,
       _read_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_isNormalStateReg_whas,
       _read_RL_sq_reqGenSQ_checkPendingWorkReq_EN_cntrl_preStateReg_wget,
       _read_RL_sq_reqGenSQ_checkPendingWorkReq_EN_cntrl_preStateReg_whas,
       _read_RL_sq_reqGenSQ_checkPendingWorkReq_EN_cntrl_sqTypeReg_wget,
       _read_RL_sq_reqGenSQ_checkPendingWorkReq_EN_cntrl_sqTypeReg_whas,
       _read_RL_sq_reqGenSQ_checkPendingWorkReq_EN_cntrl_stateReg_wget,
       _read_RL_sq_reqGenSQ_checkPendingWorkReq_EN_cntrl_stateReg_whas,
       _read_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_isNormalStateReg_wget,
       _read_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_isNormalStateReg_whas,
       _read_RL_sq_reqGenSQ_countReqPkt_EN_cntrl_preStateReg_wget,
       _read_RL_sq_reqGenSQ_countReqPkt_EN_cntrl_preStateReg_whas,
       _read_RL_sq_reqGenSQ_countReqPkt_EN_cntrl_sqTypeReg_wget,
       _read_RL_sq_reqGenSQ_countReqPkt_EN_cntrl_sqTypeReg_whas,
       _read_RL_sq_reqGenSQ_countReqPkt_EN_cntrl_stateReg_wget,
       _read_RL_sq_reqGenSQ_countReqPkt_EN_cntrl_stateReg_whas,
       _read_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_curPsnReg_wget,
       _read_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_curPsnReg_whas,
       _read_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_isFirstOrOnlyReqPktReg_wget,
       _read_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_isFirstOrOnlyReqPktReg_whas,
       _read_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_isNormalStateReg_wget,
       _read_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_isNormalStateReg_whas,
       _read_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_remainingPktNumReg_wget,
       _read_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_remainingPktNumReg_whas,
       _read_RL_sq_reqGenSQ_errFlushWR_EN_cntrl_stateReg_wget,
       _read_RL_sq_reqGenSQ_errFlushWR_EN_cntrl_stateReg_whas,
       _read_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_isNormalStateReg_wget,
       _read_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_isNormalStateReg_whas,
       _read_RL_sq_reqGenSQ_genReqHeader_EN_cntrl_preStateReg_wget,
       _read_RL_sq_reqGenSQ_genReqHeader_EN_cntrl_preStateReg_whas,
       _read_RL_sq_reqGenSQ_genReqHeader_EN_cntrl_stateReg_wget,
       _read_RL_sq_reqGenSQ_genReqHeader_EN_cntrl_stateReg_whas,
       _read_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_isNormalStateReg_wget,
       _read_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_isNormalStateReg_whas,
       _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_cntrl_pmtuReg_wget,
       _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_cntrl_pmtuReg_whas,
       _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_cntrl_preStateReg_wget,
       _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_cntrl_preStateReg_whas,
       _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_cntrl_sqpnReg_wget,
       _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_cntrl_sqpnReg_whas,
       _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_cntrl_stateReg_wget,
       _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_cntrl_stateReg_whas,
       _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_isNormalStateReg_wget,
       _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_isNormalStateReg_whas,
       _read_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_cntrl_preStateReg_wget,
       _read_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_cntrl_preStateReg_whas,
       _read_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_cntrl_stateReg_wget,
       _read_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_cntrl_stateReg_whas,
       _read_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_isNormalStateReg_wget,
       _read_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_isNormalStateReg_whas,
       _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_dqpnReg_wget,
       _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_dqpnReg_whas,
       _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_pkeyReg_wget,
       _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_pkeyReg_whas,
       _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_preStateReg_wget,
       _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_preStateReg_whas,
       _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_sqSigAllReg_wget,
       _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_sqSigAllReg_whas,
       _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_sqTypeReg_wget,
       _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_sqTypeReg_whas,
       _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_sqpnReg_wget,
       _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_sqpnReg_whas,
       _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_stateReg_wget,
       _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_stateReg_whas,
       _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_isNormalStateReg_wget,
       _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_isNormalStateReg_whas,
       _read_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_cntrl_preStateReg_wget,
       _read_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_cntrl_preStateReg_whas,
       _read_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_cntrl_stateReg_wget,
       _read_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_cntrl_stateReg_whas,
       _read_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_isNormalStateReg_wget,
       _read_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_isNormalStateReg_whas,
       _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_pmtuReg_wget,
       _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_pmtuReg_whas,
       _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_preStateReg_wget,
       _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_preStateReg_whas,
       _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_sqTypeReg_wget,
       _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_sqTypeReg_whas,
       _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_sqpnReg_wget,
       _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_sqpnReg_whas,
       _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_stateReg_wget,
       _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_stateReg_whas,
       _read_RL_sq_reqGenSQ_recvWorkReq_EN_sq_pendingWorkReqBuf_emptyReg_wget,
       _read_RL_sq_reqGenSQ_recvWorkReq_EN_sq_pendingWorkReqBuf_emptyReg_whas,
       _read_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_calcReadRespAddr_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_calcReadRespAddr_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_nextReadRespWriteAddrReg_wget,
       _read_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_nextReadRespWriteAddrReg_whas,
       _read_RL_sq_respHandleSQ_calcReadRespLen_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_calcReadRespLen_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_remainingReadRespLenReg_wget,
       _read_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_remainingReadRespLenReg_whas,
       _read_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_checkReadRespLen_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_checkReadRespLen_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_checkRetryErr_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_checkRetryErr_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_checkTimeOutErr_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_checkTimeOutErr_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_respHandleSQ_errOccurredReg_wget,
       _read_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_respHandleSQ_errOccurredReg_whas,
       _read_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_respHandleSQ_recvErrRespReg_wget,
       _read_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_respHandleSQ_recvErrRespReg_whas,
       _read_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_respHandleSQ_retryFlushReg_wget,
       _read_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_respHandleSQ_retryFlushReg_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_dataVec_0_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_dataVec_0_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_dataVec_1_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_dataVec_1_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_dataVec_2_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_dataVec_2_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_dataVec_3_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_dataVec_3_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_deqPtrReg_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_deqPtrReg_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_emptyReg_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_emptyReg_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_scanStateReg_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_scanStateReg_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_errOccurredReg_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_errOccurredReg_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageDeqPendingWorkReqReg_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageDeqPendingWorkReqReg_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageDeqPktMetaDataReg_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageDeqPktMetaDataReg_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStagePktMetaDataReg_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStagePktMetaDataReg_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageReqPktInfoReg_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageReqPktInfoReg_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageRespTypeReg_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageRespTypeReg_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageStateReg_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageStateReg_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageWorkCompReqTypeReg_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageWorkCompReqTypeReg_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageWorkReqAckTypeReg_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageWorkReqAckTypeReg_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_recvErrRespReg_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_recvErrRespReg_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_recvRetryRespReg_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_recvRetryRespReg_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_retryFlushReg_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_retryFlushReg_whas,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_retryResetReqReg_wget,
       _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_retryResetReqReg_whas,
       _read_RL_sq_respHandleSQ_discardGhostResp_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_discardGhostResp_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_discardGhostResp_EN_sq_pendingWorkReqBuf_emptyReg_wget,
       _read_RL_sq_respHandleSQ_discardGhostResp_EN_sq_pendingWorkReqBuf_emptyReg_whas,
       _read_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_errOccurredReg_wget,
       _read_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_errOccurredReg_whas,
       _read_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_recvErrRespReg_wget,
       _read_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_recvErrRespReg_whas,
       _read_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_retryFlushReg_wget,
       _read_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_retryFlushReg_whas,
       _read_RL_sq_respHandleSQ_errFlushIncomingResp_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_errFlushIncomingResp_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_pendingWorkReqBuf_emptyReg_wget,
       _read_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_pendingWorkReqBuf_emptyReg_whas,
       _read_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_respHandleSQ_errOccurredReg_wget,
       _read_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_respHandleSQ_errOccurredReg_whas,
       _read_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_respHandleSQ_recvErrRespReg_wget,
       _read_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_respHandleSQ_recvErrRespReg_whas,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_dataVec_0_wget,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_dataVec_0_whas,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_dataVec_1_wget,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_dataVec_1_whas,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_dataVec_2_wget,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_dataVec_2_whas,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_dataVec_3_wget,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_dataVec_3_whas,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_deqPtrReg_wget,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_deqPtrReg_whas,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_emptyReg_wget,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_emptyReg_whas,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_scanStateReg_wget,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_scanStateReg_whas,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_errOccurredReg_wget,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_errOccurredReg_whas,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_recvErrRespReg_wget,
       _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_recvErrRespReg_whas,
       _read_RL_sq_respHandleSQ_genWorkCompSQ_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_genWorkCompSQ_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_handleRespByType_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_handleRespByType_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_errOccurredReg_wget,
       _read_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_errOccurredReg_whas,
       _read_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_preRdmaOpCodeReg_wget,
       _read_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_preRdmaOpCodeReg_whas,
       _read_RL_sq_respHandleSQ_issueDmaReq_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_issueDmaReq_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_cntrl_npsnReg_wget,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_cntrl_npsnReg_whas,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_dataVec_0_wget,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_dataVec_0_whas,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_dataVec_1_wget,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_dataVec_1_whas,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_dataVec_2_wget,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_dataVec_2_whas,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_dataVec_3_wget,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_dataVec_3_whas,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_deqPtrReg_wget,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_deqPtrReg_whas,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_emptyReg_wget,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_emptyReg_whas,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_errOccurredReg_wget,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_errOccurredReg_whas,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageStateReg_wget,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageStateReg_whas,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_recvErrRespReg_wget,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_recvErrRespReg_whas,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_retryFlushReg_wget,
       _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_retryFlushReg_whas,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_pendingWorkReqBuf_emptyReg_wget,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_pendingWorkReqBuf_emptyReg_whas,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_errOccurredReg_wget,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_errOccurredReg_whas,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStagePktMetaDataReg_wget,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStagePktMetaDataReg_whas,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageRespAndWorkReqRelationReg_wget,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageRespAndWorkReqRelationReg_whas,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageRespTypeReg_wget,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageRespTypeReg_whas,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageStateReg_wget,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageStateReg_whas,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_recvErrRespReg_wget,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_recvErrRespReg_whas,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_retryFlushReg_wget,
       _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_retryFlushReg_whas,
       _read_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_recvRespHeader_EN_cntrl_preStateReg_wget,
       _read_RL_sq_respHandleSQ_recvRespHeader_EN_cntrl_preStateReg_whas,
       _read_RL_sq_respHandleSQ_recvRespHeader_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_recvRespHeader_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_errOccurredReg_wget,
       _read_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_errOccurredReg_whas,
       _read_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvErrRespReg_wget,
       _read_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvErrRespReg_whas,
       _read_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_retryFlushReg_wget,
       _read_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_retryFlushReg_whas,
       _read_RL_sq_respHandleSQ_retryFlushDone_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_retryFlushDone_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_pendingWorkReqBuf_emptyReg_wget,
       _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_pendingWorkReqBuf_emptyReg_whas,
       _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_errOccurredReg_wget,
       _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_errOccurredReg_whas,
       _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_recvErrRespReg_wget,
       _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_recvErrRespReg_whas,
       _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_retryFlushReg_wget,
       _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_retryFlushReg_whas,
       _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_retryHandler_retryHandleStateReg_wget,
       _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_retryHandler_retryHandleStateReg_whas,
       _read_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_cntrl_stateReg_wget,
       _read_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_cntrl_stateReg_whas,
       _read_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_errOccurredReg_wget,
       _read_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_errOccurredReg_whas,
       _read_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_recvErrRespReg_wget,
       _read_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_recvErrRespReg_whas,
       _read_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_retryFlushReg_wget,
       _read_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_retryFlushReg_whas,
       _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_pkeyReg_wget,
       _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_pkeyReg_whas,
       _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_preStateReg_wget,
       _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_preStateReg_whas,
       _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_sqSigAllReg_wget,
       _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_sqSigAllReg_whas,
       _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_sqpnReg_wget,
       _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_sqpnReg_whas,
       _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_stateReg_wget,
       _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_stateReg_whas,
       _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_workCompGenStateReg_wget,
       _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_workCompGenStateReg_whas,
       _read_RL_sq_workCompGenSQ_genWorkCompSQ_EN_cntrl_preStateReg_wget,
       _read_RL_sq_workCompGenSQ_genWorkCompSQ_EN_cntrl_preStateReg_whas,
       _read_RL_sq_workCompGenSQ_genWorkCompSQ_EN_cntrl_stateReg_wget,
       _read_RL_sq_workCompGenSQ_genWorkCompSQ_EN_cntrl_stateReg_whas,
       _read_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_workCompGenStateReg_wget,
       _read_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_workCompGenStateReg_whas,
       _read_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_cntrl_stateReg_wget,
       _read_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_cntrl_stateReg_whas,
       _read_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_workCompGenStateReg_wget,
       _read_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_workCompGenStateReg_whas,
       _read_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_cntrl_preStateReg_wget,
       _read_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_cntrl_preStateReg_whas,
       _read_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_cntrl_stateReg_wget,
       _read_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_cntrl_stateReg_whas,
       _read_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_workCompGenSQ_workCompGenStateReg_wget,
       _read_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_workCompGenSQ_workCompGenStateReg_whas,
       _read_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_cntrl_preStateReg_wget,
       _read_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_cntrl_preStateReg_whas,
       _read_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_cntrl_stateReg_wget,
       _read_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_cntrl_stateReg_whas,
       _read_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_workCompGenStateReg_wget,
       _read_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_workCompGenStateReg_whas,
       _write_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_cntrl_npsnReg_wget,
       _write_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_cntrl_npsnReg_whas,
       _write_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_curPsnReg_wget,
       _write_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_curPsnReg_whas,
       _write_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_isFirstOrOnlyReqPktReg_wget,
       _write_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_isFirstOrOnlyReqPktReg_whas,
       _write_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_remainingPktNumReg_wget,
       _write_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_remainingPktNumReg_whas,
       _write_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_isNormalStateReg_wget,
       _write_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_isNormalStateReg_whas,
       _write_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageStateReg_wget,
       _write_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageStateReg_whas,
       _write_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_preRdmaOpCodeReg_wget,
       _write_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_preRdmaOpCodeReg_whas,
       _write_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_recvErrRespReg_wget,
       _write_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_recvErrRespReg_whas,
       _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStagePktMetaDataReg_wget,
       _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStagePktMetaDataReg_whas,
       _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageReqPktInfoReg_wget,
       _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageReqPktInfoReg_whas,
       _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageRespAndWorkReqRelationReg_wget,
       _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageRespAndWorkReqRelationReg_whas,
       _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageRespTypeReg_wget,
       _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageRespTypeReg_whas,
       _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageStateReg_wget,
       _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageStateReg_whas,
       _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageDeqPendingWorkReqReg_wget,
       _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageDeqPendingWorkReqReg_whas,
       _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageDeqPktMetaDataReg_wget,
       _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageDeqPktMetaDataReg_whas,
       _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageStateReg_wget,
       _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageStateReg_whas,
       _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageWorkCompReqTypeReg_wget,
       _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageWorkCompReqTypeReg_whas,
       _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageWorkReqAckTypeReg_wget,
       _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageWorkReqAckTypeReg_whas,
       _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_retryResetReqReg_wget,
       _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_retryResetReqReg_whas,
       _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvErrRespReg_wget,
       _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvErrRespReg_whas,
       _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvRetryRespReg_wget,
       _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvRetryRespReg_whas,
       _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_retryFlushReg_wget,
       _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_retryFlushReg_whas,
       _write_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_recvRetryRespReg_wget,
       _write_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_recvRetryRespReg_whas,
       _write_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_retryFlushReg_wget,
       _write_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_retryFlushReg_whas,
       _write_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_preStageStateReg_wget,
       _write_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_preStageStateReg_whas,
       _write_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg_wget,
       _write_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg_whas,
       _write_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_wget,
       _write_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_whas,
       _write_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_workCompGenStateReg_wget,
       _write_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_workCompGenStateReg_whas,
       cntrl_epsnReg_EN_port0__write,
       cntrl_epsnReg_EN_port1__write,
       cntrl_epsnReg_EN_port2__write,
       cntrl_epsnReg_EN_port3__write,
       cntrl_epsnReg_EN_port4__write,
       cntrl_nextStateReg_EN_port0__write,
       cntrl_nextStateReg_EN_port1__write,
       cntrl_nextStateReg_EN_port2__write,
       cntrl_nextStateReg_EN_port3__write,
       cntrl_nextStateReg_EN_port4__write,
       cntrl_preReqOpCodeReg_EN_port0__write,
       cntrl_preReqOpCodeReg_EN_port1__write,
       cntrl_preReqOpCodeReg_EN_port2__write,
       cntrl_preReqOpCodeReg_EN_port3__write,
       cntrl_preReqOpCodeReg_EN_port4__write,
       cntrl_qpDestroyReg_EN_port0__write,
       cntrl_qpDestroyReg_EN_port1__write,
       cntrl_qpDestroyReg_EN_port2__write,
       cntrl_qpDestroyReg_EN_port3__write,
       cntrl_qpDestroyReg_EN_port4__write,
       cntrl_qpDestroyReg_port0__read,
       cntrl_qpDestroyReg_port0__write_1,
       cntrl_qpDestroyReg_port1__read,
       cntrl_qpDestroyReg_port1__write_1,
       cntrl_qpDestroyReg_port2__read,
       cntrl_qpDestroyReg_port2__write_1,
       cntrl_qpDestroyReg_port3__read,
       cntrl_qpDestroyReg_port3__write_1,
       cntrl_qpDestroyReg_port4__read,
       cntrl_qpDestroyReg_port4__write_1,
       cntrl_setStateErrReg_EN_port0__write,
       cntrl_setStateErrReg_EN_port1__write,
       cntrl_setStateErrReg_EN_port2__write,
       cntrl_setStateErrReg_EN_port3__write,
       cntrl_setStateErrReg_EN_port4__write,
       cntrl_setStateErrReg_port0__read,
       cntrl_setStateErrReg_port0__write_1,
       cntrl_setStateErrReg_port1__read,
       cntrl_setStateErrReg_port1__write_1,
       cntrl_setStateErrReg_port2__read,
       cntrl_setStateErrReg_port2__write_1,
       cntrl_setStateErrReg_port3__read,
       cntrl_setStateErrReg_port3__write_1,
       cntrl_setStateErrReg_port4__read,
       cntrl_setStateErrReg_port4__write_1,
       dmaReadCntrl4SQ_cancelReg_EN_port0__write,
       dmaReadCntrl4SQ_cancelReg_EN_port1__write,
       dmaReadCntrl4SQ_cancelReg_EN_port2__write,
       dmaReadCntrl4SQ_cancelReg_EN_port3__write,
       dmaReadCntrl4SQ_cancelReg_EN_port4__write,
       dmaReadCntrl4SQ_cancelReg_port0__read,
       dmaReadCntrl4SQ_cancelReg_port0__write_1,
       dmaReadCntrl4SQ_cancelReg_port1__read,
       dmaReadCntrl4SQ_cancelReg_port1__write_1,
       dmaReadCntrl4SQ_cancelReg_port2__read,
       dmaReadCntrl4SQ_cancelReg_port2__write_1,
       dmaReadCntrl4SQ_cancelReg_port3__read,
       dmaReadCntrl4SQ_cancelReg_port3__write_1,
       dmaReadCntrl4SQ_cancelReg_port4__read,
       dmaReadCntrl4SQ_cancelReg_port4__write_1,
       dmaReadCntrl4SQ_gracefulStopReg_EN_port0__write,
       dmaReadCntrl4SQ_gracefulStopReg_EN_port1__write,
       dmaReadCntrl4SQ_gracefulStopReg_EN_port2__write,
       dmaReadCntrl4SQ_gracefulStopReg_EN_port3__write,
       dmaReadCntrl4SQ_gracefulStopReg_EN_port4__write,
       dmaReadCntrl4SQ_gracefulStopReg_port0__read,
       dmaReadCntrl4SQ_gracefulStopReg_port0__write_1,
       dmaReadCntrl4SQ_gracefulStopReg_port1__read,
       dmaReadCntrl4SQ_gracefulStopReg_port1__write_1,
       dmaReadCntrl4SQ_gracefulStopReg_port2__read,
       dmaReadCntrl4SQ_gracefulStopReg_port2__write_1,
       dmaReadCntrl4SQ_gracefulStopReg_port3__read,
       dmaReadCntrl4SQ_gracefulStopReg_port3__write_1,
       dmaReadCntrl4SQ_gracefulStopReg_port4__read,
       dmaReadCntrl4SQ_gracefulStopReg_port4__write_1,
       payloadGenerator4SQ_payloadBufQ_pwClear_whas,
       payloadGenerator4SQ_payloadBufQ_pwDequeue_whas,
       payloadGenerator4SQ_payloadBufQ_pwEnqueue_whas,
       payloadGenerator4SQ_payloadBufQ_wDataIn_whas,
       payloadGenerator4SQ_payloadBufQ_wDataOut_whas,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_EN_port0__write,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_EN_port1__write,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_EN_port2__write,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_EN_port3__write,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_EN_port4__write,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port0__read,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port0__write_1,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port1__read,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port1__write_1,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port2__read,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port2__write_1,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port3__read,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port3__write_1,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port4__read,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port4__write_1,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_EN_port0__write,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_EN_port1__write,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_EN_port2__write,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_EN_port3__write,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_EN_port4__write,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port0__read,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port0__write_1,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port1__read,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port1__write_1,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port2__read,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port2__write_1,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port3__read,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port3__write_1,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port4__read,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port4__write_1,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_EN_port0__write,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_EN_port1__write,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_EN_port2__write,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_EN_port3__write,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_EN_port4__write,
       sq_pendingWorkReqBuf_clearReg_EN_port0__write,
       sq_pendingWorkReqBuf_clearReg_EN_port1__write,
       sq_pendingWorkReqBuf_clearReg_EN_port2__write,
       sq_pendingWorkReqBuf_clearReg_EN_port3__write,
       sq_pendingWorkReqBuf_clearReg_EN_port4__write,
       sq_pendingWorkReqBuf_clearReg_port0__read,
       sq_pendingWorkReqBuf_clearReg_port0__write_1,
       sq_pendingWorkReqBuf_clearReg_port1__read,
       sq_pendingWorkReqBuf_clearReg_port1__write_1,
       sq_pendingWorkReqBuf_clearReg_port2__read,
       sq_pendingWorkReqBuf_clearReg_port2__write_1,
       sq_pendingWorkReqBuf_clearReg_port3__read,
       sq_pendingWorkReqBuf_clearReg_port3__write_1,
       sq_pendingWorkReqBuf_clearReg_port4__read,
       sq_pendingWorkReqBuf_clearReg_port4__write_1,
       sq_pendingWorkReqBuf_popReg_EN_port0__write,
       sq_pendingWorkReqBuf_popReg_EN_port1__write,
       sq_pendingWorkReqBuf_popReg_EN_port2__write,
       sq_pendingWorkReqBuf_popReg_EN_port3__write,
       sq_pendingWorkReqBuf_popReg_EN_port4__write,
       sq_pendingWorkReqBuf_popReg_port0__read,
       sq_pendingWorkReqBuf_popReg_port0__write_1,
       sq_pendingWorkReqBuf_popReg_port1__read,
       sq_pendingWorkReqBuf_popReg_port1__write_1,
       sq_pendingWorkReqBuf_popReg_port2__read,
       sq_pendingWorkReqBuf_popReg_port2__write_1,
       sq_pendingWorkReqBuf_popReg_port3__read,
       sq_pendingWorkReqBuf_popReg_port3__write_1,
       sq_pendingWorkReqBuf_popReg_port4__read,
       sq_pendingWorkReqBuf_popReg_port4__write_1,
       sq_pendingWorkReqBuf_preScanRestartReg_EN_port0__write,
       sq_pendingWorkReqBuf_preScanRestartReg_EN_port1__write,
       sq_pendingWorkReqBuf_preScanRestartReg_EN_port2__write,
       sq_pendingWorkReqBuf_preScanRestartReg_EN_port3__write,
       sq_pendingWorkReqBuf_preScanRestartReg_EN_port4__write,
       sq_pendingWorkReqBuf_preScanRestartReg_port0__read,
       sq_pendingWorkReqBuf_preScanRestartReg_port0__write_1,
       sq_pendingWorkReqBuf_preScanRestartReg_port1__read,
       sq_pendingWorkReqBuf_preScanRestartReg_port1__write_1,
       sq_pendingWorkReqBuf_preScanRestartReg_port2__read,
       sq_pendingWorkReqBuf_preScanRestartReg_port2__write_1,
       sq_pendingWorkReqBuf_preScanRestartReg_port3__read,
       sq_pendingWorkReqBuf_preScanRestartReg_port3__write_1,
       sq_pendingWorkReqBuf_preScanRestartReg_port4__read,
       sq_pendingWorkReqBuf_preScanRestartReg_port4__write_1,
       sq_pendingWorkReqBuf_preScanStartReg_EN_port0__write,
       sq_pendingWorkReqBuf_preScanStartReg_EN_port1__write,
       sq_pendingWorkReqBuf_preScanStartReg_EN_port2__write,
       sq_pendingWorkReqBuf_preScanStartReg_EN_port3__write,
       sq_pendingWorkReqBuf_preScanStartReg_EN_port4__write,
       sq_pendingWorkReqBuf_preScanStartReg_port0__read,
       sq_pendingWorkReqBuf_preScanStartReg_port0__write_1,
       sq_pendingWorkReqBuf_preScanStartReg_port1__read,
       sq_pendingWorkReqBuf_preScanStartReg_port1__write_1,
       sq_pendingWorkReqBuf_preScanStartReg_port2__read,
       sq_pendingWorkReqBuf_preScanStartReg_port2__write_1,
       sq_pendingWorkReqBuf_preScanStartReg_port3__read,
       sq_pendingWorkReqBuf_preScanStartReg_port3__write_1,
       sq_pendingWorkReqBuf_preScanStartReg_port4__read,
       sq_pendingWorkReqBuf_preScanStartReg_port4__write_1,
       sq_pendingWorkReqBuf_pushReg_EN_port0__write,
       sq_pendingWorkReqBuf_pushReg_EN_port1__write,
       sq_pendingWorkReqBuf_pushReg_EN_port2__write,
       sq_pendingWorkReqBuf_pushReg_EN_port3__write,
       sq_pendingWorkReqBuf_pushReg_EN_port4__write,
       sq_pendingWorkReqBuf_scanDoneReg_EN_port0__write,
       sq_pendingWorkReqBuf_scanDoneReg_EN_port1__write,
       sq_pendingWorkReqBuf_scanDoneReg_EN_port2__write,
       sq_pendingWorkReqBuf_scanDoneReg_EN_port3__write,
       sq_pendingWorkReqBuf_scanDoneReg_EN_port4__write,
       sq_pendingWorkReqBuf_scanDoneReg_port0__read,
       sq_pendingWorkReqBuf_scanDoneReg_port0__write_1,
       sq_pendingWorkReqBuf_scanDoneReg_port1__read,
       sq_pendingWorkReqBuf_scanDoneReg_port1__write_1,
       sq_pendingWorkReqBuf_scanDoneReg_port2__read,
       sq_pendingWorkReqBuf_scanDoneReg_port2__write_1,
       sq_pendingWorkReqBuf_scanDoneReg_port3__read,
       sq_pendingWorkReqBuf_scanDoneReg_port3__write_1,
       sq_pendingWorkReqBuf_scanDoneReg_port4__read,
       sq_pendingWorkReqBuf_scanDoneReg_port4__write_1,
       sq_pendingWorkReqBuf_scanStartReg_EN_port0__write,
       sq_pendingWorkReqBuf_scanStartReg_EN_port1__write,
       sq_pendingWorkReqBuf_scanStartReg_EN_port2__write,
       sq_pendingWorkReqBuf_scanStartReg_EN_port3__write,
       sq_pendingWorkReqBuf_scanStartReg_EN_port4__write,
       sq_pendingWorkReqBuf_scanStartReg_port0__read,
       sq_pendingWorkReqBuf_scanStartReg_port0__write_1,
       sq_pendingWorkReqBuf_scanStartReg_port1__read,
       sq_pendingWorkReqBuf_scanStartReg_port1__write_1,
       sq_pendingWorkReqBuf_scanStartReg_port2__read,
       sq_pendingWorkReqBuf_scanStartReg_port2__write_1,
       sq_pendingWorkReqBuf_scanStartReg_port3__read,
       sq_pendingWorkReqBuf_scanStartReg_port3__write_1,
       sq_pendingWorkReqBuf_scanStartReg_port4__read,
       sq_pendingWorkReqBuf_scanStartReg_port4__write_1,
       sq_pendingWorkReqBuf_scanStopReg_EN_port0__write,
       sq_pendingWorkReqBuf_scanStopReg_EN_port1__write,
       sq_pendingWorkReqBuf_scanStopReg_EN_port2__write,
       sq_pendingWorkReqBuf_scanStopReg_EN_port3__write,
       sq_pendingWorkReqBuf_scanStopReg_EN_port4__write,
       sq_pendingWorkReqBuf_scanStopReg_port0__read,
       sq_pendingWorkReqBuf_scanStopReg_port0__write_1,
       sq_pendingWorkReqBuf_scanStopReg_port1__read,
       sq_pendingWorkReqBuf_scanStopReg_port1__write_1,
       sq_pendingWorkReqBuf_scanStopReg_port2__read,
       sq_pendingWorkReqBuf_scanStopReg_port2__write_1,
       sq_pendingWorkReqBuf_scanStopReg_port3__read,
       sq_pendingWorkReqBuf_scanStopReg_port3__write_1,
       sq_pendingWorkReqBuf_scanStopReg_port4__read,
       sq_pendingWorkReqBuf_scanStopReg_port4__write_1,
       sq_respHandleSQ_hasInternalErrReg_EN_port0__write,
       sq_respHandleSQ_hasInternalErrReg_EN_port1__write,
       sq_respHandleSQ_hasInternalErrReg_EN_port2__write,
       sq_respHandleSQ_hasInternalErrReg_EN_port3__write,
       sq_respHandleSQ_hasInternalErrReg_EN_port4__write,
       sq_respHandleSQ_hasInternalErrReg_port0__read,
       sq_respHandleSQ_hasInternalErrReg_port0__write_1,
       sq_respHandleSQ_hasInternalErrReg_port1__read,
       sq_respHandleSQ_hasInternalErrReg_port1__write_1,
       sq_respHandleSQ_hasInternalErrReg_port2__read,
       sq_respHandleSQ_hasInternalErrReg_port2__write_1,
       sq_respHandleSQ_hasInternalErrReg_port3__read,
       sq_respHandleSQ_hasInternalErrReg_port3__write_1,
       sq_respHandleSQ_hasInternalErrReg_port4__read,
       sq_respHandleSQ_hasInternalErrReg_port4__write_1,
       sq_respHandleSQ_hasTimeOutErrReg_EN_port0__write,
       sq_respHandleSQ_hasTimeOutErrReg_EN_port1__write,
       sq_respHandleSQ_hasTimeOutErrReg_EN_port2__write,
       sq_respHandleSQ_hasTimeOutErrReg_EN_port3__write,
       sq_respHandleSQ_hasTimeOutErrReg_EN_port4__write,
       sq_respHandleSQ_hasTimeOutErrReg_port0__read,
       sq_respHandleSQ_hasTimeOutErrReg_port0__write_1,
       sq_respHandleSQ_hasTimeOutErrReg_port1__read,
       sq_respHandleSQ_hasTimeOutErrReg_port1__write_1,
       sq_respHandleSQ_hasTimeOutErrReg_port2__read,
       sq_respHandleSQ_hasTimeOutErrReg_port2__write_1,
       sq_respHandleSQ_hasTimeOutErrReg_port3__read,
       sq_respHandleSQ_hasTimeOutErrReg_port3__write_1,
       sq_respHandleSQ_hasTimeOutErrReg_port4__read,
       sq_respHandleSQ_hasTimeOutErrReg_port4__write_1,
       sq_retryHandler_retryCntrlStateReg_EN_port0__write,
       sq_retryHandler_retryCntrlStateReg_EN_port1__write,
       sq_retryHandler_retryCntrlStateReg_EN_port2__write,
       sq_retryHandler_retryCntrlStateReg_EN_port3__write,
       sq_retryHandler_retryCntrlStateReg_EN_port4__write;

  // register cntrl_dqpnReg
  reg [23 : 0] cntrl_dqpnReg;
  wire [23 : 0] cntrl_dqpnReg_D_IN;
  wire cntrl_dqpnReg_EN;

  // register cntrl_epsnReg
  reg [23 : 0] cntrl_epsnReg;
  wire [23 : 0] cntrl_epsnReg_D_IN;
  wire cntrl_epsnReg_EN;

  // register cntrl_errFlushDoneReg
  reg cntrl_errFlushDoneReg;
  wire cntrl_errFlushDoneReg_D_IN, cntrl_errFlushDoneReg_EN;

  // register cntrl_maxRetryCntReg
  reg [2 : 0] cntrl_maxRetryCntReg;
  wire [2 : 0] cntrl_maxRetryCntReg_D_IN;
  wire cntrl_maxRetryCntReg_EN;

  // register cntrl_maxRnrCntReg
  reg [2 : 0] cntrl_maxRnrCntReg;
  wire [2 : 0] cntrl_maxRnrCntReg_D_IN;
  wire cntrl_maxRnrCntReg_EN;

  // register cntrl_maxTimeOutReg
  reg [4 : 0] cntrl_maxTimeOutReg;
  wire [4 : 0] cntrl_maxTimeOutReg_D_IN;
  wire cntrl_maxTimeOutReg_EN;

  // register cntrl_minRnrTimerReg
  reg [4 : 0] cntrl_minRnrTimerReg;
  wire [4 : 0] cntrl_minRnrTimerReg_D_IN;
  wire cntrl_minRnrTimerReg_EN;

  // register cntrl_nextStateReg
  reg [4 : 0] cntrl_nextStateReg;
  wire [4 : 0] cntrl_nextStateReg_D_IN;
  wire cntrl_nextStateReg_EN;

  // register cntrl_npsnReg
  reg [23 : 0] cntrl_npsnReg;
  wire [23 : 0] cntrl_npsnReg_D_IN;
  wire cntrl_npsnReg_EN;

  // register cntrl_pendingDestReadAtomicReqNumReg
  reg [7 : 0] cntrl_pendingDestReadAtomicReqNumReg;
  wire [7 : 0] cntrl_pendingDestReadAtomicReqNumReg_D_IN;
  wire cntrl_pendingDestReadAtomicReqNumReg_EN;

  // register cntrl_pendingReadAtomicReqNumReg
  reg [7 : 0] cntrl_pendingReadAtomicReqNumReg;
  wire [7 : 0] cntrl_pendingReadAtomicReqNumReg_D_IN;
  wire cntrl_pendingReadAtomicReqNumReg_EN;

  // register cntrl_pendingRecvReqNumReg
  reg [7 : 0] cntrl_pendingRecvReqNumReg;
  wire [7 : 0] cntrl_pendingRecvReqNumReg_D_IN;
  wire cntrl_pendingRecvReqNumReg_EN;

  // register cntrl_pendingWorkReqNumReg
  reg [7 : 0] cntrl_pendingWorkReqNumReg;
  wire [7 : 0] cntrl_pendingWorkReqNumReg_D_IN;
  wire cntrl_pendingWorkReqNumReg_EN;

  // register cntrl_pkeyReg
  reg [15 : 0] cntrl_pkeyReg;
  wire [15 : 0] cntrl_pkeyReg_D_IN;
  wire cntrl_pkeyReg_EN;

  // register cntrl_pmtuReg
  reg [2 : 0] cntrl_pmtuReg;
  wire [2 : 0] cntrl_pmtuReg_D_IN;
  wire cntrl_pmtuReg_EN;

  // register cntrl_preReqOpCodeReg
  reg [4 : 0] cntrl_preReqOpCodeReg;
  wire [4 : 0] cntrl_preReqOpCodeReg_D_IN;
  wire cntrl_preReqOpCodeReg_EN;

  // register cntrl_preStateReg
  reg [3 : 0] cntrl_preStateReg;
  wire [3 : 0] cntrl_preStateReg_D_IN;
  wire cntrl_preStateReg_EN;

  // register cntrl_qkeyReg
  reg [31 : 0] cntrl_qkeyReg;
  wire [31 : 0] cntrl_qkeyReg_D_IN;
  wire cntrl_qkeyReg_EN;

  // register cntrl_qpAccessFlagsReg
  reg [7 : 0] cntrl_qpAccessFlagsReg;
  wire [7 : 0] cntrl_qpAccessFlagsReg_D_IN;
  wire cntrl_qpAccessFlagsReg_EN;

  // register cntrl_qpDestroyReg
  reg cntrl_qpDestroyReg;
  wire cntrl_qpDestroyReg_D_IN, cntrl_qpDestroyReg_EN;

  // register cntrl_setStateErrReg
  reg cntrl_setStateErrReg;
  wire cntrl_setStateErrReg_D_IN, cntrl_setStateErrReg_EN;

  // register cntrl_sqSigAllReg
  reg cntrl_sqSigAllReg;
  wire cntrl_sqSigAllReg_D_IN, cntrl_sqSigAllReg_EN;

  // register cntrl_sqTypeReg
  reg [3 : 0] cntrl_sqTypeReg;
  wire [3 : 0] cntrl_sqTypeReg_D_IN;
  wire cntrl_sqTypeReg_EN;

  // register cntrl_sqpnReg
  reg [23 : 0] cntrl_sqpnReg;
  wire [23 : 0] cntrl_sqpnReg_D_IN;
  wire cntrl_sqpnReg_EN;

  // register cntrl_stateReg
  reg [3 : 0] cntrl_stateReg;
  wire [3 : 0] cntrl_stateReg_D_IN;
  wire cntrl_stateReg_EN;

  // register dmaReadCntrl4SQ_addrChunkSrv_busyReg
  reg dmaReadCntrl4SQ_addrChunkSrv_busyReg;
  reg dmaReadCntrl4SQ_addrChunkSrv_busyReg_D_IN;
  wire dmaReadCntrl4SQ_addrChunkSrv_busyReg_EN;

  // register dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg
  reg [63 : 0] dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg;
  wire [63 : 0] dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg_D_IN;
  wire dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg_EN;

  // register dmaReadCntrl4SQ_addrChunkSrv_fullPktLenReg
  reg [12 : 0] dmaReadCntrl4SQ_addrChunkSrv_fullPktLenReg;
  reg [12 : 0] dmaReadCntrl4SQ_addrChunkSrv_fullPktLenReg_D_IN;
  wire dmaReadCntrl4SQ_addrChunkSrv_fullPktLenReg_EN;

  // register dmaReadCntrl4SQ_addrChunkSrv_isFirstReg
  reg dmaReadCntrl4SQ_addrChunkSrv_isFirstReg;
  wire dmaReadCntrl4SQ_addrChunkSrv_isFirstReg_D_IN,
       dmaReadCntrl4SQ_addrChunkSrv_isFirstReg_EN;

  // register dmaReadCntrl4SQ_addrChunkSrv_isZeroResidueReg
  reg dmaReadCntrl4SQ_addrChunkSrv_isZeroResidueReg;
  wire dmaReadCntrl4SQ_addrChunkSrv_isZeroResidueReg_D_IN,
       dmaReadCntrl4SQ_addrChunkSrv_isZeroResidueReg_EN;

  // register dmaReadCntrl4SQ_addrChunkSrv_pktNumReg
  reg [24 : 0] dmaReadCntrl4SQ_addrChunkSrv_pktNumReg;
  wire [24 : 0] dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_D_IN;
  wire dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_EN;

  // register dmaReadCntrl4SQ_addrChunkSrv_pmtuReg
  reg [2 : 0] dmaReadCntrl4SQ_addrChunkSrv_pmtuReg;
  wire [2 : 0] dmaReadCntrl4SQ_addrChunkSrv_pmtuReg_D_IN;
  wire dmaReadCntrl4SQ_addrChunkSrv_pmtuReg_EN;

  // register dmaReadCntrl4SQ_addrChunkSrv_residueReg
  reg [11 : 0] dmaReadCntrl4SQ_addrChunkSrv_residueReg;
  wire [11 : 0] dmaReadCntrl4SQ_addrChunkSrv_residueReg_D_IN;
  wire dmaReadCntrl4SQ_addrChunkSrv_residueReg_EN;

  // register dmaReadCntrl4SQ_cancelReg
  reg dmaReadCntrl4SQ_cancelReg;
  wire dmaReadCntrl4SQ_cancelReg_D_IN, dmaReadCntrl4SQ_cancelReg_EN;

  // register dmaReadCntrl4SQ_gracefulStopReg
  reg dmaReadCntrl4SQ_gracefulStopReg;
  wire dmaReadCntrl4SQ_gracefulStopReg_D_IN,
       dmaReadCntrl4SQ_gracefulStopReg_EN;

  // register payloadGenerator4SQ_isNormalStateReg
  reg payloadGenerator4SQ_isNormalStateReg;
  wire payloadGenerator4SQ_isNormalStateReg_D_IN,
       payloadGenerator4SQ_isNormalStateReg_EN;

  // register payloadGenerator4SQ_payloadBufQ_rCache
  reg [300 : 0] payloadGenerator4SQ_payloadBufQ_rCache;
  wire [300 : 0] payloadGenerator4SQ_payloadBufQ_rCache_D_IN;
  wire payloadGenerator4SQ_payloadBufQ_rCache_EN;

  // register payloadGenerator4SQ_payloadBufQ_rRdPtr
  reg [9 : 0] payloadGenerator4SQ_payloadBufQ_rRdPtr;
  wire [9 : 0] payloadGenerator4SQ_payloadBufQ_rRdPtr_D_IN;
  wire payloadGenerator4SQ_payloadBufQ_rRdPtr_EN;

  // register payloadGenerator4SQ_payloadBufQ_rWrPtr
  reg [9 : 0] payloadGenerator4SQ_payloadBufQ_rWrPtr;
  wire [9 : 0] payloadGenerator4SQ_payloadBufQ_rWrPtr_D_IN;
  wire payloadGenerator4SQ_payloadBufQ_rWrPtr_EN;

  // register rqDmaReadCancelReg
  reg rqDmaReadCancelReg;
  wire rqDmaReadCancelReg_D_IN, rqDmaReadCancelReg_EN;

  // register rqDmaWriteCancelReg
  reg rqDmaWriteCancelReg;
  wire rqDmaWriteCancelReg_D_IN, rqDmaWriteCancelReg_EN;

  // register sqDmaReadCancelReg
  reg sqDmaReadCancelReg;
  wire sqDmaReadCancelReg_D_IN, sqDmaReadCancelReg_EN;

  // register sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg
  reg [7 : 0] sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg;
  wire [7 : 0] sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg_D_IN;
  wire sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg_EN;

  // register sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg
  reg sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg;
  wire sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_D_IN,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_EN;

  // register sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg
  reg sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg;
  wire sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_D_IN,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_EN;

  // register sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg
  reg [8 : 0] sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg;
  wire [8 : 0] sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_D_IN;
  wire sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_EN;

  // register sq_pendingWorkReqBuf_clearReg
  reg sq_pendingWorkReqBuf_clearReg;
  wire sq_pendingWorkReqBuf_clearReg_D_IN, sq_pendingWorkReqBuf_clearReg_EN;

  // register sq_pendingWorkReqBuf_dataVec_0
  reg [678 : 0] sq_pendingWorkReqBuf_dataVec_0;
  wire [678 : 0] sq_pendingWorkReqBuf_dataVec_0_D_IN;
  wire sq_pendingWorkReqBuf_dataVec_0_EN;

  // register sq_pendingWorkReqBuf_dataVec_1
  reg [678 : 0] sq_pendingWorkReqBuf_dataVec_1;
  wire [678 : 0] sq_pendingWorkReqBuf_dataVec_1_D_IN;
  wire sq_pendingWorkReqBuf_dataVec_1_EN;

  // register sq_pendingWorkReqBuf_dataVec_2
  reg [678 : 0] sq_pendingWorkReqBuf_dataVec_2;
  wire [678 : 0] sq_pendingWorkReqBuf_dataVec_2_D_IN;
  wire sq_pendingWorkReqBuf_dataVec_2_EN;

  // register sq_pendingWorkReqBuf_dataVec_3
  reg [678 : 0] sq_pendingWorkReqBuf_dataVec_3;
  wire [678 : 0] sq_pendingWorkReqBuf_dataVec_3_D_IN;
  wire sq_pendingWorkReqBuf_dataVec_3_EN;

  // register sq_pendingWorkReqBuf_deqPtrReg
  reg [1 : 0] sq_pendingWorkReqBuf_deqPtrReg;
  wire [1 : 0] sq_pendingWorkReqBuf_deqPtrReg_D_IN;
  wire sq_pendingWorkReqBuf_deqPtrReg_EN;

  // register sq_pendingWorkReqBuf_emptyReg
  reg sq_pendingWorkReqBuf_emptyReg;
  wire sq_pendingWorkReqBuf_emptyReg_D_IN, sq_pendingWorkReqBuf_emptyReg_EN;

  // register sq_pendingWorkReqBuf_enqPtrReg
  reg [1 : 0] sq_pendingWorkReqBuf_enqPtrReg;
  wire [1 : 0] sq_pendingWorkReqBuf_enqPtrReg_D_IN;
  wire sq_pendingWorkReqBuf_enqPtrReg_EN;

  // register sq_pendingWorkReqBuf_fullReg
  reg sq_pendingWorkReqBuf_fullReg;
  wire sq_pendingWorkReqBuf_fullReg_D_IN, sq_pendingWorkReqBuf_fullReg_EN;

  // register sq_pendingWorkReqBuf_headReg
  reg [679 : 0] sq_pendingWorkReqBuf_headReg;
  wire [679 : 0] sq_pendingWorkReqBuf_headReg_D_IN;
  wire sq_pendingWorkReqBuf_headReg_EN;

  // register sq_pendingWorkReqBuf_popReg
  reg sq_pendingWorkReqBuf_popReg;
  wire sq_pendingWorkReqBuf_popReg_D_IN, sq_pendingWorkReqBuf_popReg_EN;

  // register sq_pendingWorkReqBuf_preScanRestartReg
  reg sq_pendingWorkReqBuf_preScanRestartReg;
  wire sq_pendingWorkReqBuf_preScanRestartReg_D_IN,
       sq_pendingWorkReqBuf_preScanRestartReg_EN;

  // register sq_pendingWorkReqBuf_preScanStartReg
  reg sq_pendingWorkReqBuf_preScanStartReg;
  wire sq_pendingWorkReqBuf_preScanStartReg_D_IN,
       sq_pendingWorkReqBuf_preScanStartReg_EN;

  // register sq_pendingWorkReqBuf_pushReg
  reg [679 : 0] sq_pendingWorkReqBuf_pushReg;
  wire [679 : 0] sq_pendingWorkReqBuf_pushReg_D_IN;
  wire sq_pendingWorkReqBuf_pushReg_EN;

  // register sq_pendingWorkReqBuf_scanAlmostDoneReg
  reg sq_pendingWorkReqBuf_scanAlmostDoneReg;
  wire sq_pendingWorkReqBuf_scanAlmostDoneReg_D_IN,
       sq_pendingWorkReqBuf_scanAlmostDoneReg_EN;

  // register sq_pendingWorkReqBuf_scanDoneReg
  reg sq_pendingWorkReqBuf_scanDoneReg;
  wire sq_pendingWorkReqBuf_scanDoneReg_D_IN,
       sq_pendingWorkReqBuf_scanDoneReg_EN;

  // register sq_pendingWorkReqBuf_scanPtrReg
  reg [1 : 0] sq_pendingWorkReqBuf_scanPtrReg;
  wire [1 : 0] sq_pendingWorkReqBuf_scanPtrReg_D_IN;
  wire sq_pendingWorkReqBuf_scanPtrReg_EN;

  // register sq_pendingWorkReqBuf_scanStartReg
  reg sq_pendingWorkReqBuf_scanStartReg;
  wire sq_pendingWorkReqBuf_scanStartReg_D_IN,
       sq_pendingWorkReqBuf_scanStartReg_EN;

  // register sq_pendingWorkReqBuf_scanStateReg
  reg [1 : 0] sq_pendingWorkReqBuf_scanStateReg;
  reg [1 : 0] sq_pendingWorkReqBuf_scanStateReg_D_IN;
  wire sq_pendingWorkReqBuf_scanStateReg_EN;

  // register sq_pendingWorkReqBuf_scanStopReg
  reg sq_pendingWorkReqBuf_scanStopReg;
  wire sq_pendingWorkReqBuf_scanStopReg_D_IN,
       sq_pendingWorkReqBuf_scanStopReg_EN;

  // register sq_reqGenSQ_curPsnReg
  reg [23 : 0] sq_reqGenSQ_curPsnReg;
  wire [23 : 0] sq_reqGenSQ_curPsnReg_D_IN;
  wire sq_reqGenSQ_curPsnReg_EN;

  // register sq_reqGenSQ_isFirstOrOnlyReqPktReg
  reg sq_reqGenSQ_isFirstOrOnlyReqPktReg;
  wire sq_reqGenSQ_isFirstOrOnlyReqPktReg_D_IN,
       sq_reqGenSQ_isFirstOrOnlyReqPktReg_EN;

  // register sq_reqGenSQ_isNormalStateReg
  reg sq_reqGenSQ_isNormalStateReg;
  wire sq_reqGenSQ_isNormalStateReg_D_IN, sq_reqGenSQ_isNormalStateReg_EN;

  // register sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg
  reg sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg;
  wire sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg_D_IN,
       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg_EN;

  // register sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg
  reg [592 : 0] sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg;
  wire [592 : 0] sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg_D_IN;
  wire sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg_EN;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg
  reg [1 : 0] sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg;
  wire [1 : 0] sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg_D_IN;
  wire sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg_EN;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerHasPayloadReg
  reg sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerHasPayloadReg;
  wire sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerHasPayloadReg_D_IN,
       sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerHasPayloadReg_EN;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidBitNumReg
  reg [8 : 0] sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidBitNumReg;
  wire [8 : 0] sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidBitNumReg_D_IN;
  wire sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidBitNumReg_EN;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidByteNumReg
  reg [5 : 0] sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidByteNumReg;
  wire [5 : 0] sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidByteNumReg_D_IN;
  wire sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidByteNumReg_EN;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidBitNumReg
  reg [8 : 0] sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidBitNumReg;
  wire [8 : 0] sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidBitNumReg_D_IN;
  wire sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidBitNumReg_EN;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidByteNumReg
  reg [5 : 0] sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidByteNumReg;
  wire [5 : 0] sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidByteNumReg_D_IN;
  wire sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidByteNumReg_EN;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_isFirstReg
  reg sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_isFirstReg;
  wire sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_isFirstReg_D_IN,
       sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_isFirstReg_EN;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg
  reg [289 : 0] sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg;
  wire [289 : 0] sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg_D_IN;
  wire sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg_EN;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg
  reg [1 : 0] sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg;
  reg [1 : 0] sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_D_IN;
  wire sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_EN;

  // register sq_reqGenSQ_remainingPktNumReg
  reg [24 : 0] sq_reqGenSQ_remainingPktNumReg;
  wire [24 : 0] sq_reqGenSQ_remainingPktNumReg_D_IN;
  wire sq_reqGenSQ_remainingPktNumReg_EN;

  // register sq_respHandleSQ_errOccurredReg
  reg sq_respHandleSQ_errOccurredReg;
  wire sq_respHandleSQ_errOccurredReg_D_IN, sq_respHandleSQ_errOccurredReg_EN;

  // register sq_respHandleSQ_hasInternalErrReg
  reg sq_respHandleSQ_hasInternalErrReg;
  wire sq_respHandleSQ_hasInternalErrReg_D_IN,
       sq_respHandleSQ_hasInternalErrReg_EN;

  // register sq_respHandleSQ_hasTimeOutErrReg
  reg sq_respHandleSQ_hasTimeOutErrReg;
  wire sq_respHandleSQ_hasTimeOutErrReg_D_IN,
       sq_respHandleSQ_hasTimeOutErrReg_EN;

  // register sq_respHandleSQ_nextReadRespWriteAddrReg
  reg [63 : 0] sq_respHandleSQ_nextReadRespWriteAddrReg;
  wire [63 : 0] sq_respHandleSQ_nextReadRespWriteAddrReg_D_IN;
  wire sq_respHandleSQ_nextReadRespWriteAddrReg_EN;

  // register sq_respHandleSQ_preRdmaOpCodeReg
  reg [4 : 0] sq_respHandleSQ_preRdmaOpCodeReg;
  wire [4 : 0] sq_respHandleSQ_preRdmaOpCodeReg_D_IN;
  wire sq_respHandleSQ_preRdmaOpCodeReg_EN;

  // register sq_respHandleSQ_preStageDeqPendingWorkReqReg
  reg sq_respHandleSQ_preStageDeqPendingWorkReqReg;
  wire sq_respHandleSQ_preStageDeqPendingWorkReqReg_D_IN,
       sq_respHandleSQ_preStageDeqPendingWorkReqReg_EN;

  // register sq_respHandleSQ_preStageDeqPktMetaDataReg
  reg sq_respHandleSQ_preStageDeqPktMetaDataReg;
  wire sq_respHandleSQ_preStageDeqPktMetaDataReg_D_IN,
       sq_respHandleSQ_preStageDeqPktMetaDataReg_EN;

  // register sq_respHandleSQ_preStagePktMetaDataReg
  reg [648 : 0] sq_respHandleSQ_preStagePktMetaDataReg;
  wire [648 : 0] sq_respHandleSQ_preStagePktMetaDataReg_D_IN;
  wire sq_respHandleSQ_preStagePktMetaDataReg_EN;

  // register sq_respHandleSQ_preStageReqPktInfoReg
  reg [134 : 0] sq_respHandleSQ_preStageReqPktInfoReg;
  wire [134 : 0] sq_respHandleSQ_preStageReqPktInfoReg_D_IN;
  wire sq_respHandleSQ_preStageReqPktInfoReg_EN;

  // register sq_respHandleSQ_preStageRespAndWorkReqRelationReg
  reg [4 : 0] sq_respHandleSQ_preStageRespAndWorkReqRelationReg;
  wire [4 : 0] sq_respHandleSQ_preStageRespAndWorkReqRelationReg_D_IN;
  wire sq_respHandleSQ_preStageRespAndWorkReqRelationReg_EN;

  // register sq_respHandleSQ_preStageRespTypeReg
  reg [1 : 0] sq_respHandleSQ_preStageRespTypeReg;
  reg [1 : 0] sq_respHandleSQ_preStageRespTypeReg_D_IN;
  wire sq_respHandleSQ_preStageRespTypeReg_EN;

  // register sq_respHandleSQ_preStageStateReg
  reg [1 : 0] sq_respHandleSQ_preStageStateReg;
  reg [1 : 0] sq_respHandleSQ_preStageStateReg_D_IN;
  wire sq_respHandleSQ_preStageStateReg_EN;

  // register sq_respHandleSQ_preStageWorkCompReqTypeReg
  reg [1 : 0] sq_respHandleSQ_preStageWorkCompReqTypeReg;
  wire [1 : 0] sq_respHandleSQ_preStageWorkCompReqTypeReg_D_IN;
  wire sq_respHandleSQ_preStageWorkCompReqTypeReg_EN;

  // register sq_respHandleSQ_preStageWorkReqAckTypeReg
  reg [3 : 0] sq_respHandleSQ_preStageWorkReqAckTypeReg;
  wire [3 : 0] sq_respHandleSQ_preStageWorkReqAckTypeReg_D_IN;
  wire sq_respHandleSQ_preStageWorkReqAckTypeReg_EN;

  // register sq_respHandleSQ_recvErrRespReg
  reg sq_respHandleSQ_recvErrRespReg;
  wire sq_respHandleSQ_recvErrRespReg_D_IN, sq_respHandleSQ_recvErrRespReg_EN;

  // register sq_respHandleSQ_recvRetryRespReg
  reg sq_respHandleSQ_recvRetryRespReg;
  wire sq_respHandleSQ_recvRetryRespReg_D_IN,
       sq_respHandleSQ_recvRetryRespReg_EN;

  // register sq_respHandleSQ_remainingReadRespLenReg
  reg [31 : 0] sq_respHandleSQ_remainingReadRespLenReg;
  wire [31 : 0] sq_respHandleSQ_remainingReadRespLenReg_D_IN;
  wire sq_respHandleSQ_remainingReadRespLenReg_EN;

  // register sq_respHandleSQ_retryFlushReg
  reg sq_respHandleSQ_retryFlushReg;
  wire sq_respHandleSQ_retryFlushReg_D_IN, sq_respHandleSQ_retryFlushReg_EN;

  // register sq_respHandleSQ_retryResetReqReg
  reg sq_respHandleSQ_retryResetReqReg;
  wire sq_respHandleSQ_retryResetReqReg_D_IN,
       sq_respHandleSQ_retryResetReqReg_EN;

  // register sq_retryHandler_disableRetryCntReg
  reg sq_retryHandler_disableRetryCntReg;
  wire sq_retryHandler_disableRetryCntReg_D_IN,
       sq_retryHandler_disableRetryCntReg_EN;

  // register sq_retryHandler_disableTimeOutReg
  reg sq_retryHandler_disableTimeOutReg;
  wire sq_retryHandler_disableTimeOutReg_D_IN,
       sq_retryHandler_disableTimeOutReg_EN;

  // register sq_retryHandler_isRnrWaitCntZeroReg
  reg sq_retryHandler_isRnrWaitCntZeroReg;
  wire sq_retryHandler_isRnrWaitCntZeroReg_D_IN,
       sq_retryHandler_isRnrWaitCntZeroReg_EN;

  // register sq_retryHandler_isTimeOutCntHighPartZeroReg
  reg sq_retryHandler_isTimeOutCntHighPartZeroReg;
  wire sq_retryHandler_isTimeOutCntHighPartZeroReg_D_IN,
       sq_retryHandler_isTimeOutCntHighPartZeroReg_EN;

  // register sq_retryHandler_isTimeOutCntLowPartZeroReg
  reg sq_retryHandler_isTimeOutCntLowPartZeroReg;
  wire sq_retryHandler_isTimeOutCntLowPartZeroReg_D_IN,
       sq_retryHandler_isTimeOutCntLowPartZeroReg_EN;

  // register sq_retryHandler_pauseRetryHandleReg
  reg sq_retryHandler_pauseRetryHandleReg;
  wire sq_retryHandler_pauseRetryHandleReg_D_IN,
       sq_retryHandler_pauseRetryHandleReg_EN;

  // register sq_retryHandler_psnDiffReg
  reg [23 : 0] sq_retryHandler_psnDiffReg;
  wire [23 : 0] sq_retryHandler_psnDiffReg_D_IN;
  wire sq_retryHandler_psnDiffReg_EN;

  // register sq_retryHandler_retryCntReg
  reg [2 : 0] sq_retryHandler_retryCntReg;
  wire [2 : 0] sq_retryHandler_retryCntReg_D_IN;
  wire sq_retryHandler_retryCntReg_EN;

  // register sq_retryHandler_retryCntrlStateReg
  reg [1 : 0] sq_retryHandler_retryCntrlStateReg;
  wire [1 : 0] sq_retryHandler_retryCntrlStateReg_D_IN;
  wire sq_retryHandler_retryCntrlStateReg_EN;

  // register sq_retryHandler_retryHandleStateReg
  reg [2 : 0] sq_retryHandler_retryHandleStateReg;
  reg [2 : 0] sq_retryHandler_retryHandleStateReg_D_IN;
  wire sq_retryHandler_retryHandleStateReg_EN;

  // register sq_retryHandler_retryReasonReg
  reg [2 : 0] sq_retryHandler_retryReasonReg;
  wire [2 : 0] sq_retryHandler_retryReasonReg_D_IN;
  wire sq_retryHandler_retryReasonReg_EN;

  // register sq_retryHandler_retryRnrTimerReg
  reg [4 : 0] sq_retryHandler_retryRnrTimerReg;
  wire [4 : 0] sq_retryHandler_retryRnrTimerReg_D_IN;
  wire sq_retryHandler_retryRnrTimerReg_EN;

  // register sq_retryHandler_retryStartPsnReg
  reg [23 : 0] sq_retryHandler_retryStartPsnReg;
  wire [23 : 0] sq_retryHandler_retryStartPsnReg_D_IN;
  wire sq_retryHandler_retryStartPsnReg_EN;

  // register sq_retryHandler_retryWorkReqIdReg
  reg [63 : 0] sq_retryHandler_retryWorkReqIdReg;
  wire [63 : 0] sq_retryHandler_retryWorkReqIdReg_D_IN;
  wire sq_retryHandler_retryWorkReqIdReg_EN;

  // register sq_retryHandler_rnrCntReg
  reg [2 : 0] sq_retryHandler_rnrCntReg;
  wire [2 : 0] sq_retryHandler_rnrCntReg_D_IN;
  wire sq_retryHandler_rnrCntReg_EN;

  // register sq_retryHandler_rnrWaitCntReg
  reg [26 : 0] sq_retryHandler_rnrWaitCntReg;
  wire [26 : 0] sq_retryHandler_rnrWaitCntReg_D_IN;
  wire sq_retryHandler_rnrWaitCntReg_EN;

  // register sq_retryHandler_timeOutCntReg
  reg [41 : 0] sq_retryHandler_timeOutCntReg;
  wire [41 : 0] sq_retryHandler_timeOutCntReg_D_IN;
  wire sq_retryHandler_timeOutCntReg_EN;

  // register sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg
  reg [63 : 0] sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg;
  wire [63 : 0] sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg_D_IN;
  wire sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg_EN;

  // register sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg
  reg sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg;
  wire sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_D_IN,
       sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_EN;

  // register sq_workCompGenSQ_workCompGenStateReg
  reg [1 : 0] sq_workCompGenSQ_workCompGenStateReg;
  reg [1 : 0] sq_workCompGenSQ_workCompGenStateReg_D_IN;
  wire sq_workCompGenSQ_workCompGenStateReg_EN;

  // ports of submodule cntrl_reqQ
  wire [300 : 0] cntrl_reqQ_D_IN, cntrl_reqQ_D_OUT;
  wire cntrl_reqQ_CLR,
       cntrl_reqQ_DEQ,
       cntrl_reqQ_EMPTY_N,
       cntrl_reqQ_ENQ,
       cntrl_reqQ_FULL_N;

  // ports of submodule cntrl_respQ
  reg [273 : 0] cntrl_respQ_D_IN;
  wire [273 : 0] cntrl_respQ_D_OUT;
  wire cntrl_respQ_CLR,
       cntrl_respQ_DEQ,
       cntrl_respQ_EMPTY_N,
       cntrl_respQ_ENQ,
       cntrl_respQ_FULL_N;

  // ports of submodule cntrl_restoreQ
  wire [28 : 0] cntrl_restoreQ_D_IN, cntrl_restoreQ_D_OUT;
  wire cntrl_restoreQ_CLR,
       cntrl_restoreQ_DEQ,
       cntrl_restoreQ_EMPTY_N,
       cntrl_restoreQ_ENQ;

  // ports of submodule dmaReadCntrl4SQ_addrChunkSrv_reqQ
  wire [98 : 0] dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_IN,
		dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT;
  wire dmaReadCntrl4SQ_addrChunkSrv_reqQ_CLR,
       dmaReadCntrl4SQ_addrChunkSrv_reqQ_DEQ,
       dmaReadCntrl4SQ_addrChunkSrv_reqQ_EMPTY_N,
       dmaReadCntrl4SQ_addrChunkSrv_reqQ_ENQ,
       dmaReadCntrl4SQ_addrChunkSrv_reqQ_FULL_N;

  // ports of submodule dmaReadCntrl4SQ_addrChunkSrv_respQ
  wire [78 : 0] dmaReadCntrl4SQ_addrChunkSrv_respQ_D_IN,
		dmaReadCntrl4SQ_addrChunkSrv_respQ_D_OUT;
  wire dmaReadCntrl4SQ_addrChunkSrv_respQ_CLR,
       dmaReadCntrl4SQ_addrChunkSrv_respQ_DEQ,
       dmaReadCntrl4SQ_addrChunkSrv_respQ_EMPTY_N,
       dmaReadCntrl4SQ_addrChunkSrv_respQ_ENQ,
       dmaReadCntrl4SQ_addrChunkSrv_respQ_FULL_N;

  // ports of submodule dmaReadCntrl4SQ_pendingDmaCntrlReqQ
  wire [191 : 0] dmaReadCntrl4SQ_pendingDmaCntrlReqQ_D_IN,
		 dmaReadCntrl4SQ_pendingDmaCntrlReqQ_D_OUT;
  wire dmaReadCntrl4SQ_pendingDmaCntrlReqQ_CLR,
       dmaReadCntrl4SQ_pendingDmaCntrlReqQ_DEQ,
       dmaReadCntrl4SQ_pendingDmaCntrlReqQ_EMPTY_N,
       dmaReadCntrl4SQ_pendingDmaCntrlReqQ_ENQ,
       dmaReadCntrl4SQ_pendingDmaCntrlReqQ_FULL_N;

  // ports of submodule dmaReadCntrl4SQ_pendingDmaReadReqQ
  wire [171 : 0] dmaReadCntrl4SQ_pendingDmaReadReqQ_D_IN,
		 dmaReadCntrl4SQ_pendingDmaReadReqQ_D_OUT;
  wire dmaReadCntrl4SQ_pendingDmaReadReqQ_CLR,
       dmaReadCntrl4SQ_pendingDmaReadReqQ_DEQ,
       dmaReadCntrl4SQ_pendingDmaReadReqQ_EMPTY_N,
       dmaReadCntrl4SQ_pendingDmaReadReqQ_ENQ,
       dmaReadCntrl4SQ_pendingDmaReadReqQ_FULL_N;

  // ports of submodule dmaReadCntrl4SQ_reqQ
  wire [191 : 0] dmaReadCntrl4SQ_reqQ_D_IN, dmaReadCntrl4SQ_reqQ_D_OUT;
  wire dmaReadCntrl4SQ_reqQ_CLR,
       dmaReadCntrl4SQ_reqQ_DEQ,
       dmaReadCntrl4SQ_reqQ_EMPTY_N,
       dmaReadCntrl4SQ_reqQ_ENQ,
       dmaReadCntrl4SQ_reqQ_FULL_N;

  // ports of submodule dmaReadCntrl4SQ_respQ
  wire [384 : 0] dmaReadCntrl4SQ_respQ_D_IN, dmaReadCntrl4SQ_respQ_D_OUT;
  wire dmaReadCntrl4SQ_respQ_CLR,
       dmaReadCntrl4SQ_respQ_DEQ,
       dmaReadCntrl4SQ_respQ_EMPTY_N,
       dmaReadCntrl4SQ_respQ_ENQ,
       dmaReadCntrl4SQ_respQ_FULL_N;

  // ports of submodule dmaReadProxy4SQ_reqQ
  wire [169 : 0] dmaReadProxy4SQ_reqQ_D_IN, dmaReadProxy4SQ_reqQ_D_OUT;
  wire dmaReadProxy4SQ_reqQ_CLR,
       dmaReadProxy4SQ_reqQ_DEQ,
       dmaReadProxy4SQ_reqQ_EMPTY_N,
       dmaReadProxy4SQ_reqQ_ENQ,
       dmaReadProxy4SQ_reqQ_FULL_N;

  // ports of submodule dmaReadProxy4SQ_respQ
  wire [382 : 0] dmaReadProxy4SQ_respQ_D_IN, dmaReadProxy4SQ_respQ_D_OUT;
  wire dmaReadProxy4SQ_respQ_CLR,
       dmaReadProxy4SQ_respQ_DEQ,
       dmaReadProxy4SQ_respQ_EMPTY_N,
       dmaReadProxy4SQ_respQ_ENQ,
       dmaReadProxy4SQ_respQ_FULL_N;

  // ports of submodule payloadGenerator4SQ_bramQ2PipeOut_postBramQ
  wire [289 : 0] payloadGenerator4SQ_bramQ2PipeOut_postBramQ_D_IN,
		 payloadGenerator4SQ_bramQ2PipeOut_postBramQ_D_OUT;
  wire payloadGenerator4SQ_bramQ2PipeOut_postBramQ_CLR,
       payloadGenerator4SQ_bramQ2PipeOut_postBramQ_DEQ,
       payloadGenerator4SQ_bramQ2PipeOut_postBramQ_EMPTY_N,
       payloadGenerator4SQ_bramQ2PipeOut_postBramQ_ENQ,
       payloadGenerator4SQ_bramQ2PipeOut_postBramQ_FULL_N;

  // ports of submodule payloadGenerator4SQ_payloadBufQ_memory
  wire [289 : 0] payloadGenerator4SQ_payloadBufQ_memory_DIA,
		 payloadGenerator4SQ_payloadBufQ_memory_DIB,
		 payloadGenerator4SQ_payloadBufQ_memory_DOB;
  wire [8 : 0] payloadGenerator4SQ_payloadBufQ_memory_ADDRA,
	       payloadGenerator4SQ_payloadBufQ_memory_ADDRB;
  wire payloadGenerator4SQ_payloadBufQ_memory_ENA,
       payloadGenerator4SQ_payloadBufQ_memory_ENB,
       payloadGenerator4SQ_payloadBufQ_memory_WEA,
       payloadGenerator4SQ_payloadBufQ_memory_WEB;

  // ports of submodule payloadGenerator4SQ_payloadGenReqQ
  wire [192 : 0] payloadGenerator4SQ_payloadGenReqQ_D_IN,
		 payloadGenerator4SQ_payloadGenReqQ_D_OUT;
  wire payloadGenerator4SQ_payloadGenReqQ_CLR,
       payloadGenerator4SQ_payloadGenReqQ_DEQ,
       payloadGenerator4SQ_payloadGenReqQ_EMPTY_N,
       payloadGenerator4SQ_payloadGenReqQ_ENQ,
       payloadGenerator4SQ_payloadGenReqQ_FULL_N;

  // ports of submodule payloadGenerator4SQ_payloadGenRespQ
  wire [1 : 0] payloadGenerator4SQ_payloadGenRespQ_D_IN,
	       payloadGenerator4SQ_payloadGenRespQ_D_OUT;
  wire payloadGenerator4SQ_payloadGenRespQ_CLR,
       payloadGenerator4SQ_payloadGenRespQ_DEQ,
       payloadGenerator4SQ_payloadGenRespQ_EMPTY_N,
       payloadGenerator4SQ_payloadGenRespQ_ENQ,
       payloadGenerator4SQ_payloadGenRespQ_FULL_N;

  // ports of submodule payloadGenerator4SQ_pendingGenReqQ
  wire [232 : 0] payloadGenerator4SQ_pendingGenReqQ_D_IN,
		 payloadGenerator4SQ_pendingGenReqQ_D_OUT;
  wire payloadGenerator4SQ_pendingGenReqQ_CLR,
       payloadGenerator4SQ_pendingGenReqQ_DEQ,
       payloadGenerator4SQ_pendingGenReqQ_EMPTY_N,
       payloadGenerator4SQ_pendingGenReqQ_ENQ,
       payloadGenerator4SQ_pendingGenReqQ_FULL_N;

  // ports of submodule respPktPipe_metaDataQ
  wire [648 : 0] respPktPipe_metaDataQ_D_IN, respPktPipe_metaDataQ_D_OUT;
  wire respPktPipe_metaDataQ_CLR,
       respPktPipe_metaDataQ_DEQ,
       respPktPipe_metaDataQ_EMPTY_N,
       respPktPipe_metaDataQ_ENQ,
       respPktPipe_metaDataQ_FULL_N;

  // ports of submodule respPktPipe_payloadQ
  wire [289 : 0] respPktPipe_payloadQ_D_IN;
  wire respPktPipe_payloadQ_CLR,
       respPktPipe_payloadQ_DEQ,
       respPktPipe_payloadQ_ENQ,
       respPktPipe_payloadQ_FULL_N;

  // ports of submodule sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ
  wire [678 : 0] sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_D_IN,
		 sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_D_OUT;
  wire sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_CLR,
       sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_DEQ,
       sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_EMPTY_N,
       sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_ENQ,
       sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_FULL_N;

  // ports of submodule sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ
  wire sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_CLR,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_DEQ,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_D_IN,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_EMPTY_N,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_ENQ,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_FULL_N;

  // ports of submodule sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ
  wire sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_CLR,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_DEQ,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_D_IN,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_EMPTY_N,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_ENQ,
       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_FULL_N;

  // ports of submodule sq_pendingWorkReqBuf_itemCnt
  wire [2 : 0] sq_pendingWorkReqBuf_itemCnt_DATA_A,
	       sq_pendingWorkReqBuf_itemCnt_DATA_B,
	       sq_pendingWorkReqBuf_itemCnt_DATA_C,
	       sq_pendingWorkReqBuf_itemCnt_DATA_F,
	       sq_pendingWorkReqBuf_itemCnt_Q_OUT;
  wire sq_pendingWorkReqBuf_itemCnt_ADDA,
       sq_pendingWorkReqBuf_itemCnt_ADDB,
       sq_pendingWorkReqBuf_itemCnt_SETC,
       sq_pendingWorkReqBuf_itemCnt_SETF;

  // ports of submodule sq_pendingWorkReqBuf_scanCnt
  wire [2 : 0] sq_pendingWorkReqBuf_scanCnt_DATA_A,
	       sq_pendingWorkReqBuf_scanCnt_DATA_B,
	       sq_pendingWorkReqBuf_scanCnt_DATA_C,
	       sq_pendingWorkReqBuf_scanCnt_DATA_F,
	       sq_pendingWorkReqBuf_scanCnt_Q_OUT;
  wire sq_pendingWorkReqBuf_scanCnt_ADDA,
       sq_pendingWorkReqBuf_scanCnt_ADDB,
       sq_pendingWorkReqBuf_scanCnt_SETC,
       sq_pendingWorkReqBuf_scanCnt_SETF;

  // ports of submodule sq_pendingWorkReqBuf_scanOutQ
  wire [678 : 0] sq_pendingWorkReqBuf_scanOutQ_D_IN,
		 sq_pendingWorkReqBuf_scanOutQ_D_OUT;
  wire sq_pendingWorkReqBuf_scanOutQ_CLR,
       sq_pendingWorkReqBuf_scanOutQ_DEQ,
       sq_pendingWorkReqBuf_scanOutQ_EMPTY_N,
       sq_pendingWorkReqBuf_scanOutQ_ENQ,
       sq_pendingWorkReqBuf_scanOutQ_FULL_N;

  // ports of submodule sq_pendingWorkReqPipeOut_pipeMuxOutQ
  wire [678 : 0] sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_IN,
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT;
  wire sq_pendingWorkReqPipeOut_pipeMuxOutQ_CLR,
       sq_pendingWorkReqPipeOut_pipeMuxOutQ_DEQ,
       sq_pendingWorkReqPipeOut_pipeMuxOutQ_EMPTY_N,
       sq_pendingWorkReqPipeOut_pipeMuxOutQ_ENQ,
       sq_pendingWorkReqPipeOut_pipeMuxOutQ_FULL_N;

  // ports of submodule sq_reqGenSQ_pendingReqHeaderQ
  wire [1228 : 0] sq_reqGenSQ_pendingReqHeaderQ_D_IN,
		  sq_reqGenSQ_pendingReqHeaderQ_D_OUT;
  wire sq_reqGenSQ_pendingReqHeaderQ_CLR,
       sq_reqGenSQ_pendingReqHeaderQ_DEQ,
       sq_reqGenSQ_pendingReqHeaderQ_EMPTY_N,
       sq_reqGenSQ_pendingReqHeaderQ_ENQ,
       sq_reqGenSQ_pendingReqHeaderQ_FULL_N;

  // ports of submodule sq_reqGenSQ_pendingWorkReqOutQ
  wire [678 : 0] sq_reqGenSQ_pendingWorkReqOutQ_D_IN,
		 sq_reqGenSQ_pendingWorkReqOutQ_D_OUT;
  wire sq_reqGenSQ_pendingWorkReqOutQ_CLR,
       sq_reqGenSQ_pendingWorkReqOutQ_DEQ,
       sq_reqGenSQ_pendingWorkReqOutQ_EMPTY_N,
       sq_reqGenSQ_pendingWorkReqOutQ_ENQ,
       sq_reqGenSQ_pendingWorkReqOutQ_FULL_N;

  // ports of submodule sq_reqGenSQ_psnReqOutQ
  wire [23 : 0] sq_reqGenSQ_psnReqOutQ_D_IN;
  wire sq_reqGenSQ_psnReqOutQ_CLR,
       sq_reqGenSQ_psnReqOutQ_DEQ,
       sq_reqGenSQ_psnReqOutQ_EMPTY_N,
       sq_reqGenSQ_psnReqOutQ_ENQ,
       sq_reqGenSQ_psnReqOutQ_FULL_N;

  // ports of submodule sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ
  wire [289 : 0] sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_IN,
		 sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT;
  wire sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_CLR,
       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_DEQ,
       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_EMPTY_N,
       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_ENQ,
       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_FULL_N;

  // ports of submodule sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ
  wire [16 : 0] sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_IN,
		sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT;
  wire sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_CLR,
       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_DEQ,
       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_EMPTY_N,
       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_ENQ,
       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_FULL_N;

  // ports of submodule sq_reqGenSQ_rdmaReqPipeOut_outputQ
  wire [289 : 0] sq_reqGenSQ_rdmaReqPipeOut_outputQ_D_IN,
		 sq_reqGenSQ_rdmaReqPipeOut_outputQ_D_OUT;
  wire sq_reqGenSQ_rdmaReqPipeOut_outputQ_CLR,
       sq_reqGenSQ_rdmaReqPipeOut_outputQ_DEQ,
       sq_reqGenSQ_rdmaReqPipeOut_outputQ_EMPTY_N,
       sq_reqGenSQ_rdmaReqPipeOut_outputQ_ENQ,
       sq_reqGenSQ_rdmaReqPipeOut_outputQ_FULL_N;

  // ports of submodule sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ
  reg [289 : 0] sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_D_IN;
  wire [289 : 0] sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_D_OUT;
  wire sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_CLR,
       sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_DEQ,
       sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_EMPTY_N,
       sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_ENQ,
       sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_FULL_N;

  // ports of submodule sq_reqGenSQ_reqCountQ
  wire [683 : 0] sq_reqGenSQ_reqCountQ_D_IN, sq_reqGenSQ_reqCountQ_D_OUT;
  wire sq_reqGenSQ_reqCountQ_CLR,
       sq_reqGenSQ_reqCountQ_DEQ,
       sq_reqGenSQ_reqCountQ_EMPTY_N,
       sq_reqGenSQ_reqCountQ_ENQ,
       sq_reqGenSQ_reqCountQ_FULL_N;

  // ports of submodule sq_reqGenSQ_reqHeaderGenQ
  wire [1299 : 0] sq_reqGenSQ_reqHeaderGenQ_D_IN,
		  sq_reqGenSQ_reqHeaderGenQ_D_OUT;
  wire sq_reqGenSQ_reqHeaderGenQ_CLR,
       sq_reqGenSQ_reqHeaderGenQ_DEQ,
       sq_reqGenSQ_reqHeaderGenQ_EMPTY_N,
       sq_reqGenSQ_reqHeaderGenQ_ENQ,
       sq_reqGenSQ_reqHeaderGenQ_FULL_N;

  // ports of submodule sq_reqGenSQ_reqHeaderOutQ
  wire [592 : 0] sq_reqGenSQ_reqHeaderOutQ_D_IN,
		 sq_reqGenSQ_reqHeaderOutQ_D_OUT;
  wire sq_reqGenSQ_reqHeaderOutQ_CLR,
       sq_reqGenSQ_reqHeaderOutQ_DEQ,
       sq_reqGenSQ_reqHeaderOutQ_EMPTY_N,
       sq_reqGenSQ_reqHeaderOutQ_ENQ,
       sq_reqGenSQ_reqHeaderOutQ_FULL_N;

  // ports of submodule sq_reqGenSQ_reqHeaderPrepareQ
  wire [709 : 0] sq_reqGenSQ_reqHeaderPrepareQ_D_IN,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT;
  wire sq_reqGenSQ_reqHeaderPrepareQ_CLR,
       sq_reqGenSQ_reqHeaderPrepareQ_DEQ,
       sq_reqGenSQ_reqHeaderPrepareQ_EMPTY_N,
       sq_reqGenSQ_reqHeaderPrepareQ_ENQ,
       sq_reqGenSQ_reqHeaderPrepareQ_FULL_N;

  // ports of submodule sq_reqGenSQ_workCompGenReqOutQ
  wire [632 : 0] sq_reqGenSQ_workCompGenReqOutQ_D_IN,
		 sq_reqGenSQ_workCompGenReqOutQ_D_OUT;
  wire sq_reqGenSQ_workCompGenReqOutQ_CLR,
       sq_reqGenSQ_workCompGenReqOutQ_DEQ,
       sq_reqGenSQ_workCompGenReqOutQ_EMPTY_N,
       sq_reqGenSQ_workCompGenReqOutQ_ENQ,
       sq_reqGenSQ_workCompGenReqOutQ_FULL_N;

  // ports of submodule sq_reqGenSQ_workReqCheckQ
  wire [683 : 0] sq_reqGenSQ_workReqCheckQ_D_IN,
		 sq_reqGenSQ_workReqCheckQ_D_OUT;
  wire sq_reqGenSQ_workReqCheckQ_CLR,
       sq_reqGenSQ_workReqCheckQ_DEQ,
       sq_reqGenSQ_workReqCheckQ_EMPTY_N,
       sq_reqGenSQ_workReqCheckQ_ENQ,
       sq_reqGenSQ_workReqCheckQ_FULL_N;

  // ports of submodule sq_reqGenSQ_workReqOutQ
  wire [683 : 0] sq_reqGenSQ_workReqOutQ_D_IN, sq_reqGenSQ_workReqOutQ_D_OUT;
  wire sq_reqGenSQ_workReqOutQ_CLR,
       sq_reqGenSQ_workReqOutQ_DEQ,
       sq_reqGenSQ_workReqOutQ_EMPTY_N,
       sq_reqGenSQ_workReqOutQ_ENQ,
       sq_reqGenSQ_workReqOutQ_FULL_N;

  // ports of submodule sq_reqGenSQ_workReqPayloadGenQ
  wire [719 : 0] sq_reqGenSQ_workReqPayloadGenQ_D_IN,
		 sq_reqGenSQ_workReqPayloadGenQ_D_OUT;
  wire sq_reqGenSQ_workReqPayloadGenQ_CLR,
       sq_reqGenSQ_workReqPayloadGenQ_DEQ,
       sq_reqGenSQ_workReqPayloadGenQ_EMPTY_N,
       sq_reqGenSQ_workReqPayloadGenQ_ENQ,
       sq_reqGenSQ_workReqPayloadGenQ_FULL_N;

  // ports of submodule sq_reqGenSQ_workReqPktNumQ
  wire [708 : 0] sq_reqGenSQ_workReqPktNumQ_D_IN,
		 sq_reqGenSQ_workReqPktNumQ_D_OUT;
  wire sq_reqGenSQ_workReqPktNumQ_CLR,
       sq_reqGenSQ_workReqPktNumQ_DEQ,
       sq_reqGenSQ_workReqPktNumQ_EMPTY_N,
       sq_reqGenSQ_workReqPktNumQ_ENQ,
       sq_reqGenSQ_workReqPktNumQ_FULL_N;

  // ports of submodule sq_reqGenSQ_workReqPsnQ
  wire [683 : 0] sq_reqGenSQ_workReqPsnQ_D_IN, sq_reqGenSQ_workReqPsnQ_D_OUT;
  wire sq_reqGenSQ_workReqPsnQ_CLR,
       sq_reqGenSQ_workReqPsnQ_DEQ,
       sq_reqGenSQ_workReqPsnQ_EMPTY_N,
       sq_reqGenSQ_workReqPsnQ_ENQ,
       sq_reqGenSQ_workReqPsnQ_FULL_N;

  // ports of submodule sq_respHandleSQ_incomingRespQ
  reg [1469 : 0] sq_respHandleSQ_incomingRespQ_D_IN;
  wire [1469 : 0] sq_respHandleSQ_incomingRespQ_D_OUT;
  wire sq_respHandleSQ_incomingRespQ_CLR,
       sq_respHandleSQ_incomingRespQ_DEQ,
       sq_respHandleSQ_incomingRespQ_EMPTY_N,
       sq_respHandleSQ_incomingRespQ_ENQ,
       sq_respHandleSQ_incomingRespQ_FULL_N;

  // ports of submodule sq_respHandleSQ_pendingAddrCalcQ
  wire [1474 : 0] sq_respHandleSQ_pendingAddrCalcQ_D_IN,
		  sq_respHandleSQ_pendingAddrCalcQ_D_OUT;
  wire sq_respHandleSQ_pendingAddrCalcQ_CLR,
       sq_respHandleSQ_pendingAddrCalcQ_DEQ,
       sq_respHandleSQ_pendingAddrCalcQ_EMPTY_N,
       sq_respHandleSQ_pendingAddrCalcQ_ENQ,
       sq_respHandleSQ_pendingAddrCalcQ_FULL_N;

  // ports of submodule sq_respHandleSQ_pendingDmaReqQ
  wire [1538 : 0] sq_respHandleSQ_pendingDmaReqQ_D_IN,
		  sq_respHandleSQ_pendingDmaReqQ_D_OUT;
  wire sq_respHandleSQ_pendingDmaReqQ_CLR,
       sq_respHandleSQ_pendingDmaReqQ_DEQ,
       sq_respHandleSQ_pendingDmaReqQ_EMPTY_N,
       sq_respHandleSQ_pendingDmaReqQ_ENQ,
       sq_respHandleSQ_pendingDmaReqQ_FULL_N;

  // ports of submodule sq_respHandleSQ_pendingLenCalcQ
  wire [1538 : 0] sq_respHandleSQ_pendingLenCalcQ_D_IN,
		  sq_respHandleSQ_pendingLenCalcQ_D_OUT;
  wire sq_respHandleSQ_pendingLenCalcQ_CLR,
       sq_respHandleSQ_pendingLenCalcQ_DEQ,
       sq_respHandleSQ_pendingLenCalcQ_EMPTY_N,
       sq_respHandleSQ_pendingLenCalcQ_ENQ,
       sq_respHandleSQ_pendingLenCalcQ_FULL_N;

  // ports of submodule sq_respHandleSQ_pendingLenCheckQ
  wire [1572 : 0] sq_respHandleSQ_pendingLenCheckQ_D_IN,
		  sq_respHandleSQ_pendingLenCheckQ_D_OUT;
  wire sq_respHandleSQ_pendingLenCheckQ_CLR,
       sq_respHandleSQ_pendingLenCheckQ_DEQ,
       sq_respHandleSQ_pendingLenCheckQ_EMPTY_N,
       sq_respHandleSQ_pendingLenCheckQ_ENQ,
       sq_respHandleSQ_pendingLenCheckQ_FULL_N;

  // ports of submodule sq_respHandleSQ_pendingPermCheckQ
  wire [1475 : 0] sq_respHandleSQ_pendingPermCheckQ_D_IN,
		  sq_respHandleSQ_pendingPermCheckQ_D_OUT;
  wire sq_respHandleSQ_pendingPermCheckQ_CLR,
       sq_respHandleSQ_pendingPermCheckQ_DEQ,
       sq_respHandleSQ_pendingPermCheckQ_EMPTY_N,
       sq_respHandleSQ_pendingPermCheckQ_ENQ,
       sq_respHandleSQ_pendingPermCheckQ_FULL_N;

  // ports of submodule sq_respHandleSQ_pendingPermQueryQ
  wire [1468 : 0] sq_respHandleSQ_pendingPermQueryQ_D_IN,
		  sq_respHandleSQ_pendingPermQueryQ_D_OUT;
  wire sq_respHandleSQ_pendingPermQueryQ_CLR,
       sq_respHandleSQ_pendingPermQueryQ_DEQ,
       sq_respHandleSQ_pendingPermQueryQ_EMPTY_N,
       sq_respHandleSQ_pendingPermQueryQ_ENQ,
       sq_respHandleSQ_pendingPermQueryQ_FULL_N;

  // ports of submodule sq_respHandleSQ_pendingRespQ
  wire [1472 : 0] sq_respHandleSQ_pendingRespQ_D_IN,
		  sq_respHandleSQ_pendingRespQ_D_OUT;
  wire sq_respHandleSQ_pendingRespQ_CLR,
       sq_respHandleSQ_pendingRespQ_DEQ,
       sq_respHandleSQ_pendingRespQ_EMPTY_N,
       sq_respHandleSQ_pendingRespQ_ENQ,
       sq_respHandleSQ_pendingRespQ_FULL_N;

  // ports of submodule sq_respHandleSQ_pendingRetryCheckQ
  wire [1469 : 0] sq_respHandleSQ_pendingRetryCheckQ_D_IN,
		  sq_respHandleSQ_pendingRetryCheckQ_D_OUT;
  wire sq_respHandleSQ_pendingRetryCheckQ_CLR,
       sq_respHandleSQ_pendingRetryCheckQ_DEQ,
       sq_respHandleSQ_pendingRetryCheckQ_EMPTY_N,
       sq_respHandleSQ_pendingRetryCheckQ_ENQ,
       sq_respHandleSQ_pendingRetryCheckQ_FULL_N;

  // ports of submodule sq_respHandleSQ_pendingSpaceCalcQ
  wire [1604 : 0] sq_respHandleSQ_pendingSpaceCalcQ_D_IN,
		  sq_respHandleSQ_pendingSpaceCalcQ_D_OUT;
  wire sq_respHandleSQ_pendingSpaceCalcQ_CLR,
       sq_respHandleSQ_pendingSpaceCalcQ_DEQ,
       sq_respHandleSQ_pendingSpaceCalcQ_EMPTY_N,
       sq_respHandleSQ_pendingSpaceCalcQ_ENQ,
       sq_respHandleSQ_pendingSpaceCalcQ_FULL_N;

  // ports of submodule sq_respHandleSQ_pendingWorkCompQ
  wire [767 : 0] sq_respHandleSQ_pendingWorkCompQ_D_IN,
		 sq_respHandleSQ_pendingWorkCompQ_D_OUT;
  wire sq_respHandleSQ_pendingWorkCompQ_CLR,
       sq_respHandleSQ_pendingWorkCompQ_DEQ,
       sq_respHandleSQ_pendingWorkCompQ_EMPTY_N,
       sq_respHandleSQ_pendingWorkCompQ_ENQ,
       sq_respHandleSQ_pendingWorkCompQ_FULL_N;

  // ports of submodule sq_respHandleSQ_workCompGenReqOutQ
  wire [632 : 0] sq_respHandleSQ_workCompGenReqOutQ_D_IN,
		 sq_respHandleSQ_workCompGenReqOutQ_D_OUT;
  wire sq_respHandleSQ_workCompGenReqOutQ_CLR,
       sq_respHandleSQ_workCompGenReqOutQ_DEQ,
       sq_respHandleSQ_workCompGenReqOutQ_EMPTY_N,
       sq_respHandleSQ_workCompGenReqOutQ_ENQ,
       sq_respHandleSQ_workCompGenReqOutQ_FULL_N;

  // ports of submodule sq_retryHandler_prepareRetryRespQ
  wire [3 : 0] sq_retryHandler_prepareRetryRespQ_D_IN,
	       sq_retryHandler_prepareRetryRespQ_D_OUT;
  wire sq_retryHandler_prepareRetryRespQ_CLR,
       sq_retryHandler_prepareRetryRespQ_DEQ,
       sq_retryHandler_prepareRetryRespQ_EMPTY_N,
       sq_retryHandler_prepareRetryRespQ_ENQ,
       sq_retryHandler_prepareRetryRespQ_FULL_N;

  // ports of submodule sq_retryHandler_resetReqQ
  wire sq_retryHandler_resetReqQ_CLR,
       sq_retryHandler_resetReqQ_DEQ,
       sq_retryHandler_resetReqQ_D_IN,
       sq_retryHandler_resetReqQ_D_OUT,
       sq_retryHandler_resetReqQ_EMPTY_N,
       sq_retryHandler_resetReqQ_ENQ,
       sq_retryHandler_resetReqQ_FULL_N;

  // ports of submodule sq_retryHandler_resetRetryCntQ
  wire sq_retryHandler_resetRetryCntQ_CLR,
       sq_retryHandler_resetRetryCntQ_DEQ,
       sq_retryHandler_resetRetryCntQ_D_IN,
       sq_retryHandler_resetRetryCntQ_EMPTY_N,
       sq_retryHandler_resetRetryCntQ_ENQ,
       sq_retryHandler_resetRetryCntQ_FULL_N;

  // ports of submodule sq_retryHandler_resetTimeOutQ
  wire sq_retryHandler_resetTimeOutQ_CLR,
       sq_retryHandler_resetTimeOutQ_DEQ,
       sq_retryHandler_resetTimeOutQ_D_IN,
       sq_retryHandler_resetTimeOutQ_EMPTY_N,
       sq_retryHandler_resetTimeOutQ_ENQ,
       sq_retryHandler_resetTimeOutQ_FULL_N;

  // ports of submodule sq_retryHandler_retryActionQ
  wire [97 : 0] sq_retryHandler_retryActionQ_D_IN,
		sq_retryHandler_retryActionQ_D_OUT;
  wire sq_retryHandler_retryActionQ_CLR,
       sq_retryHandler_retryActionQ_DEQ,
       sq_retryHandler_retryActionQ_EMPTY_N,
       sq_retryHandler_retryActionQ_ENQ,
       sq_retryHandler_retryActionQ_FULL_N;

  // ports of submodule sq_retryHandler_retryNotificationQ
  wire [97 : 0] sq_retryHandler_retryNotificationQ_D_IN,
		sq_retryHandler_retryNotificationQ_D_OUT;
  wire sq_retryHandler_retryNotificationQ_CLR,
       sq_retryHandler_retryNotificationQ_DEQ,
       sq_retryHandler_retryNotificationQ_EMPTY_N,
       sq_retryHandler_retryNotificationQ_ENQ,
       sq_retryHandler_retryNotificationQ_FULL_N;

  // ports of submodule sq_retryHandler_retryReqQ
  wire [96 : 0] sq_retryHandler_retryReqQ_D_IN,
		sq_retryHandler_retryReqQ_D_OUT;
  wire sq_retryHandler_retryReqQ_CLR,
       sq_retryHandler_retryReqQ_DEQ,
       sq_retryHandler_retryReqQ_EMPTY_N,
       sq_retryHandler_retryReqQ_ENQ,
       sq_retryHandler_retryReqQ_FULL_N;

  // ports of submodule sq_retryHandler_retryRespQ
  wire sq_retryHandler_retryRespQ_CLR,
       sq_retryHandler_retryRespQ_DEQ,
       sq_retryHandler_retryRespQ_D_IN,
       sq_retryHandler_retryRespQ_D_OUT,
       sq_retryHandler_retryRespQ_EMPTY_N,
       sq_retryHandler_retryRespQ_ENQ,
       sq_retryHandler_retryRespQ_FULL_N;

  // ports of submodule sq_retryHandler_timeOutNotificationQ
  wire sq_retryHandler_timeOutNotificationQ_CLR,
       sq_retryHandler_timeOutNotificationQ_DEQ,
       sq_retryHandler_timeOutNotificationQ_D_IN,
       sq_retryHandler_timeOutNotificationQ_D_OUT,
       sq_retryHandler_timeOutNotificationQ_EMPTY_N,
       sq_retryHandler_timeOutNotificationQ_ENQ,
       sq_retryHandler_timeOutNotificationQ_FULL_N;

  // ports of submodule sq_retryHandler_timeOutTriggerQ
  wire sq_retryHandler_timeOutTriggerQ_CLR,
       sq_retryHandler_timeOutTriggerQ_DEQ,
       sq_retryHandler_timeOutTriggerQ_D_IN,
       sq_retryHandler_timeOutTriggerQ_EMPTY_N,
       sq_retryHandler_timeOutTriggerQ_ENQ,
       sq_retryHandler_timeOutTriggerQ_FULL_N;

  // ports of submodule sq_retryHandler_updateRetryCntQ
  wire [3 : 0] sq_retryHandler_updateRetryCntQ_D_IN,
	       sq_retryHandler_updateRetryCntQ_D_OUT;
  wire sq_retryHandler_updateRetryCntQ_CLR,
       sq_retryHandler_updateRetryCntQ_DEQ,
       sq_retryHandler_updateRetryCntQ_EMPTY_N,
       sq_retryHandler_updateRetryCntQ_ENQ,
       sq_retryHandler_updateRetryCntQ_FULL_N;

  // ports of submodule sq_workCompGenSQ_dmaWaitingQ
  wire [856 : 0] sq_workCompGenSQ_dmaWaitingQ_D_IN,
		 sq_workCompGenSQ_dmaWaitingQ_D_OUT;
  wire sq_workCompGenSQ_dmaWaitingQ_CLR,
       sq_workCompGenSQ_dmaWaitingQ_DEQ,
       sq_workCompGenSQ_dmaWaitingQ_EMPTY_N,
       sq_workCompGenSQ_dmaWaitingQ_ENQ,
       sq_workCompGenSQ_dmaWaitingQ_FULL_N;

  // ports of submodule sq_workCompGenSQ_genWorkCompQ
  wire [856 : 0] sq_workCompGenSQ_genWorkCompQ_D_IN,
		 sq_workCompGenSQ_genWorkCompQ_D_OUT;
  wire sq_workCompGenSQ_genWorkCompQ_CLR,
       sq_workCompGenSQ_genWorkCompQ_DEQ,
       sq_workCompGenSQ_genWorkCompQ_EMPTY_N,
       sq_workCompGenSQ_genWorkCompQ_ENQ,
       sq_workCompGenSQ_genWorkCompQ_FULL_N;

  // ports of submodule sq_workCompGenSQ_pendingWorkCompQ4SQ
  wire [632 : 0] sq_workCompGenSQ_pendingWorkCompQ4SQ_D_IN,
		 sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT;
  wire sq_workCompGenSQ_pendingWorkCompQ4SQ_CLR,
       sq_workCompGenSQ_pendingWorkCompQ4SQ_DEQ,
       sq_workCompGenSQ_pendingWorkCompQ4SQ_EMPTY_N,
       sq_workCompGenSQ_pendingWorkCompQ4SQ_ENQ,
       sq_workCompGenSQ_pendingWorkCompQ4SQ_FULL_N;

  // ports of submodule sq_workCompGenSQ_workCompOutQ4SQ
  wire [221 : 0] sq_workCompGenSQ_workCompOutQ4SQ_D_IN,
		 sq_workCompGenSQ_workCompOutQ4SQ_D_OUT;
  wire sq_workCompGenSQ_workCompOutQ4SQ_CLR,
       sq_workCompGenSQ_workCompOutQ4SQ_DEQ,
       sq_workCompGenSQ_workCompOutQ4SQ_EMPTY_N,
       sq_workCompGenSQ_workCompOutQ4SQ_ENQ,
       sq_workCompGenSQ_workCompOutQ4SQ_FULL_N;

  // ports of submodule workReqQ
  wire [600 : 0] workReqQ_D_IN, workReqQ_D_OUT;
  wire workReqQ_CLR,
       workReqQ_DEQ,
       workReqQ_EMPTY_N,
       workReqQ_ENQ,
       workReqQ_FULL_N;

  // rule scheduling signals
  reg CAN_FIRE_RL_sq_pendingWorkReqBuf_clearAll;
  wire CAN_FIRE_RL_cancelDmaReadSQ,
       CAN_FIRE_RL_cntrl_canonicalize,
       CAN_FIRE_RL_cntrl_onCreate,
       CAN_FIRE_RL_cntrl_onERR,
       CAN_FIRE_RL_cntrl_onINIT,
       CAN_FIRE_RL_cntrl_onRTR,
       CAN_FIRE_RL_cntrl_onRTS,
       CAN_FIRE_RL_cntrl_onReset,
       CAN_FIRE_RL_cntrl_onSQD,
       CAN_FIRE_RL_cntrl_resetAndClear,
       CAN_FIRE_RL_cntrl_restore,
       CAN_FIRE_RL_cntrl_updatePreState,
       CAN_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_genResp,
       CAN_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq,
       CAN_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_resetAndClear,
       CAN_FIRE_RL_dmaReadCntrl4SQ_issueDmaReq,
       CAN_FIRE_RL_dmaReadCntrl4SQ_recvDmaResp,
       CAN_FIRE_RL_dmaReadCntrl4SQ_recvReq,
       CAN_FIRE_RL_dmaReadCntrl4SQ_resetAndClear,
       CAN_FIRE_RL_dmaReadCntrl4SQ_setGracefulStop,
       CAN_FIRE_RL_errTrigger,
       CAN_FIRE_RL_payloadGenerator4SQ_bramQ2PipeOut_mkConnectionGetPut,
       CAN_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding,
       CAN_FIRE_RL_payloadGenerator4SQ_payloadBufQ_portA,
       CAN_FIRE_RL_payloadGenerator4SQ_payloadBufQ_portB,
       CAN_FIRE_RL_payloadGenerator4SQ_payloadBufQ_portB_read_data,
       CAN_FIRE_RL_payloadGenerator4SQ_recvPayloadGenReq,
       CAN_FIRE_RL_payloadGenerator4SQ_resetAndClear,
       CAN_FIRE_RL_resetAndClear,
       CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_checkPendingNewWorkReqCnt,
       CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_decrPendingNewWorkReqCnt,
       CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_flushWR,
       CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_genPendingWR,
       CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrement,
       CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrAndDecr,
       CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_increment,
       CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_write,
       CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_resetAndClear,
       CAN_FIRE_RL_sq_pendingWorkReq2Q_mkConnectionGetPut,
       CAN_FIRE_RL_sq_pendingWorkReqBuf_canonicalize,
       CAN_FIRE_RL_sq_pendingWorkReqBuf_check,
       CAN_FIRE_RL_sq_pendingWorkReqBuf_fifoMode,
       CAN_FIRE_RL_sq_pendingWorkReqBuf_preScanMode,
       CAN_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange,
       CAN_FIRE_RL_sq_pendingWorkReqBuf_scanNext,
       CAN_FIRE_RL_sq_pendingWorkReqPipeOut_outputPipeIn1,
       CAN_FIRE_RL_sq_pendingWorkReqPipeOut_outputPipeIn2,
       CAN_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq,
       CAN_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq,
       CAN_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq,
       CAN_FIRE_RL_sq_reqGenSQ_countReqPkt,
       CAN_FIRE_RL_sq_reqGenSQ_errFlushWR,
       CAN_FIRE_RL_sq_reqGenSQ_genReqHeader,
       CAN_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq,
       CAN_FIRE_RL_sq_reqGenSQ_outputNewPendingWorkReq,
       CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen,
       CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_connect,
       CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_outputHeader,
       CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_resetAndClear,
       CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_extraLastFrag,
       CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputData,
       CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader,
       CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData,
       CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_resetAndClear,
       CAN_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp,
       CAN_FIRE_RL_sq_reqGenSQ_recvWorkReq,
       CAN_FIRE_RL_sq_reqGenSQ_resetAndClear,
       CAN_FIRE_RL_sq_resetAndClear,
       CAN_FIRE_RL_sq_respHandleSQ_calcEnoughDmaSpace,
       CAN_FIRE_RL_sq_respHandleSQ_calcReadRespAddr,
       CAN_FIRE_RL_sq_respHandleSQ_calcReadRespLen,
       CAN_FIRE_RL_sq_respHandleSQ_canonicalize,
       CAN_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp,
       CAN_FIRE_RL_sq_respHandleSQ_checkReadRespLen,
       CAN_FIRE_RL_sq_respHandleSQ_checkRetryErr,
       CAN_FIRE_RL_sq_respHandleSQ_checkTimeOutErr,
       CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq,
       CAN_FIRE_RL_sq_respHandleSQ_discardGhostResp,
       CAN_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp,
       CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq,
       CAN_FIRE_RL_sq_respHandleSQ_genWorkCompSQ,
       CAN_FIRE_RL_sq_respHandleSQ_handleRespByType,
       CAN_FIRE_RL_sq_respHandleSQ_issueDmaReq,
       CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo,
       CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo,
       CAN_FIRE_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp,
       CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader,
       CAN_FIRE_RL_sq_respHandleSQ_resetAndClear,
       CAN_FIRE_RL_sq_respHandleSQ_retryFlushDone,
       CAN_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload,
       CAN_FIRE_RL_sq_retryHandler_checkPartialRetry,
       CAN_FIRE_RL_sq_retryHandler_checkTimeOut,
       CAN_FIRE_RL_sq_retryHandler_handleNotifiedRetryAndTimeOut,
       CAN_FIRE_RL_sq_retryHandler_handleRetryAction,
       CAN_FIRE_RL_sq_retryHandler_handleRetryCntUpdate,
       CAN_FIRE_RL_sq_retryHandler_initRetry,
       CAN_FIRE_RL_sq_retryHandler_initRetryCntAndTimeOutTimer,
       CAN_FIRE_RL_sq_retryHandler_modifyPartialRetryWR,
       CAN_FIRE_RL_sq_retryHandler_recvResetReq,
       CAN_FIRE_RL_sq_retryHandler_recvRetryReq,
       CAN_FIRE_RL_sq_retryHandler_resetAndClear,
       CAN_FIRE_RL_sq_retryHandler_rnrCheck,
       CAN_FIRE_RL_sq_retryHandler_rnrWait,
       CAN_FIRE_RL_sq_retryHandler_sendRetryResp,
       CAN_FIRE_RL_sq_retryHandler_startPreRetry,
       CAN_FIRE_RL_sq_retryHandler_startRetry,
       CAN_FIRE_RL_sq_retryHandler_stopScanQ,
       CAN_FIRE_RL_sq_retryHandler_waitRetryDone,
       CAN_FIRE_RL_sq_retryHandler_waitRetryFinish,
       CAN_FIRE_RL_sq_workCompGenSQ_errFlushSQ,
       CAN_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ,
       CAN_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ,
       CAN_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ,
       CAN_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ,
       CAN_FIRE_RL_sq_workCompGenSQ_resetAndClear,
       CAN_FIRE_RL_sq_workCompGenSQ_start,
       CAN_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ,
       CAN_FIRE_RL_waitGracefulStop,
       CAN_FIRE_dmaReadClt4SQ_request_get,
       CAN_FIRE_dmaReadClt4SQ_response_put,
       CAN_FIRE_rdmaReqPipeOut_deq,
       CAN_FIRE_respPktPipeIn_payload_put,
       CAN_FIRE_respPktPipeIn_pktMetaData_put,
       CAN_FIRE_srvPortQP_request_put,
       CAN_FIRE_srvPortQP_response_get,
       CAN_FIRE_workCompPipeOutSQ_deq,
       CAN_FIRE_workReqIn_put,
       WILL_FIRE_RL_cancelDmaReadSQ,
       WILL_FIRE_RL_cntrl_canonicalize,
       WILL_FIRE_RL_cntrl_onCreate,
       WILL_FIRE_RL_cntrl_onERR,
       WILL_FIRE_RL_cntrl_onINIT,
       WILL_FIRE_RL_cntrl_onRTR,
       WILL_FIRE_RL_cntrl_onRTS,
       WILL_FIRE_RL_cntrl_onReset,
       WILL_FIRE_RL_cntrl_onSQD,
       WILL_FIRE_RL_cntrl_resetAndClear,
       WILL_FIRE_RL_cntrl_restore,
       WILL_FIRE_RL_cntrl_updatePreState,
       WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_genResp,
       WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq,
       WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_resetAndClear,
       WILL_FIRE_RL_dmaReadCntrl4SQ_issueDmaReq,
       WILL_FIRE_RL_dmaReadCntrl4SQ_recvDmaResp,
       WILL_FIRE_RL_dmaReadCntrl4SQ_recvReq,
       WILL_FIRE_RL_dmaReadCntrl4SQ_resetAndClear,
       WILL_FIRE_RL_dmaReadCntrl4SQ_setGracefulStop,
       WILL_FIRE_RL_errTrigger,
       WILL_FIRE_RL_payloadGenerator4SQ_bramQ2PipeOut_mkConnectionGetPut,
       WILL_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding,
       WILL_FIRE_RL_payloadGenerator4SQ_payloadBufQ_portA,
       WILL_FIRE_RL_payloadGenerator4SQ_payloadBufQ_portB,
       WILL_FIRE_RL_payloadGenerator4SQ_payloadBufQ_portB_read_data,
       WILL_FIRE_RL_payloadGenerator4SQ_recvPayloadGenReq,
       WILL_FIRE_RL_payloadGenerator4SQ_resetAndClear,
       WILL_FIRE_RL_resetAndClear,
       WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_checkPendingNewWorkReqCnt,
       WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_decrPendingNewWorkReqCnt,
       WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_flushWR,
       WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_genPendingWR,
       WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrement,
       WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrAndDecr,
       WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_increment,
       WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_write,
       WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_resetAndClear,
       WILL_FIRE_RL_sq_pendingWorkReq2Q_mkConnectionGetPut,
       WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize,
       WILL_FIRE_RL_sq_pendingWorkReqBuf_check,
       WILL_FIRE_RL_sq_pendingWorkReqBuf_clearAll,
       WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode,
       WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode,
       WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange,
       WILL_FIRE_RL_sq_pendingWorkReqBuf_scanNext,
       WILL_FIRE_RL_sq_pendingWorkReqPipeOut_outputPipeIn1,
       WILL_FIRE_RL_sq_pendingWorkReqPipeOut_outputPipeIn2,
       WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq,
       WILL_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq,
       WILL_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq,
       WILL_FIRE_RL_sq_reqGenSQ_countReqPkt,
       WILL_FIRE_RL_sq_reqGenSQ_errFlushWR,
       WILL_FIRE_RL_sq_reqGenSQ_genReqHeader,
       WILL_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq,
       WILL_FIRE_RL_sq_reqGenSQ_outputNewPendingWorkReq,
       WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen,
       WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_connect,
       WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_outputHeader,
       WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_resetAndClear,
       WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_extraLastFrag,
       WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputData,
       WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader,
       WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData,
       WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_resetAndClear,
       WILL_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp,
       WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq,
       WILL_FIRE_RL_sq_reqGenSQ_resetAndClear,
       WILL_FIRE_RL_sq_resetAndClear,
       WILL_FIRE_RL_sq_respHandleSQ_calcEnoughDmaSpace,
       WILL_FIRE_RL_sq_respHandleSQ_calcReadRespAddr,
       WILL_FIRE_RL_sq_respHandleSQ_calcReadRespLen,
       WILL_FIRE_RL_sq_respHandleSQ_canonicalize,
       WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp,
       WILL_FIRE_RL_sq_respHandleSQ_checkReadRespLen,
       WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr,
       WILL_FIRE_RL_sq_respHandleSQ_checkTimeOutErr,
       WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq,
       WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp,
       WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp,
       WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq,
       WILL_FIRE_RL_sq_respHandleSQ_genWorkCompSQ,
       WILL_FIRE_RL_sq_respHandleSQ_handleRespByType,
       WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq,
       WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo,
       WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo,
       WILL_FIRE_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp,
       WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader,
       WILL_FIRE_RL_sq_respHandleSQ_resetAndClear,
       WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone,
       WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload,
       WILL_FIRE_RL_sq_retryHandler_checkPartialRetry,
       WILL_FIRE_RL_sq_retryHandler_checkTimeOut,
       WILL_FIRE_RL_sq_retryHandler_handleNotifiedRetryAndTimeOut,
       WILL_FIRE_RL_sq_retryHandler_handleRetryAction,
       WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate,
       WILL_FIRE_RL_sq_retryHandler_initRetry,
       WILL_FIRE_RL_sq_retryHandler_initRetryCntAndTimeOutTimer,
       WILL_FIRE_RL_sq_retryHandler_modifyPartialRetryWR,
       WILL_FIRE_RL_sq_retryHandler_recvResetReq,
       WILL_FIRE_RL_sq_retryHandler_recvRetryReq,
       WILL_FIRE_RL_sq_retryHandler_resetAndClear,
       WILL_FIRE_RL_sq_retryHandler_rnrCheck,
       WILL_FIRE_RL_sq_retryHandler_rnrWait,
       WILL_FIRE_RL_sq_retryHandler_sendRetryResp,
       WILL_FIRE_RL_sq_retryHandler_startPreRetry,
       WILL_FIRE_RL_sq_retryHandler_startRetry,
       WILL_FIRE_RL_sq_retryHandler_stopScanQ,
       WILL_FIRE_RL_sq_retryHandler_waitRetryDone,
       WILL_FIRE_RL_sq_retryHandler_waitRetryFinish,
       WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ,
       WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ,
       WILL_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ,
       WILL_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ,
       WILL_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ,
       WILL_FIRE_RL_sq_workCompGenSQ_resetAndClear,
       WILL_FIRE_RL_sq_workCompGenSQ_start,
       WILL_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ,
       WILL_FIRE_RL_waitGracefulStop,
       WILL_FIRE_dmaReadClt4SQ_request_get,
       WILL_FIRE_dmaReadClt4SQ_response_put,
       WILL_FIRE_rdmaReqPipeOut_deq,
       WILL_FIRE_respPktPipeIn_payload_put,
       WILL_FIRE_respPktPipeIn_pktMetaData_put,
       WILL_FIRE_srvPortQP_request_put,
       WILL_FIRE_srvPortQP_response_get,
       WILL_FIRE_workCompPipeOutSQ_deq,
       WILL_FIRE_workReqIn_put;

  // inputs to muxes for submodule ports
  reg [63 : 0] MUX_dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg_write_1__VAL_2;
  reg [26 : 0] MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2;
  wire [1469 : 0] MUX_sq_respHandleSQ_incomingRespQ_enq_1__VAL_1,
		  MUX_sq_respHandleSQ_incomingRespQ_enq_1__VAL_3,
		  MUX_sq_respHandleSQ_incomingRespQ_enq_1__VAL_4,
		  MUX_sq_respHandleSQ_incomingRespQ_enq_1__VAL_5;
  wire [679 : 0] MUX_sq_pendingWorkReqBuf_headReg_write_1__VAL_2;
  wire [289 : 0] MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_enq_1__VAL_2,
		 MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_enq_1__VAL_3,
		 MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg_write_1__VAL_1;
  wire [273 : 0] MUX_cntrl_respQ_enq_1__VAL_1,
		 MUX_cntrl_respQ_enq_1__VAL_2,
		 MUX_cntrl_respQ_enq_1__VAL_3,
		 MUX_cntrl_respQ_enq_1__VAL_4,
		 MUX_cntrl_respQ_enq_1__VAL_5,
		 MUX_cntrl_respQ_enq_1__VAL_6,
		 MUX_cntrl_respQ_enq_1__VAL_7;
  wire [221 : 0] MUX_sq_workCompGenSQ_workCompOutQ4SQ_enq_1__VAL_2;
  wire [41 : 0] MUX_sq_retryHandler_timeOutCntReg_write_1__VAL_1;
  wire [26 : 0] MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_1;
  wire [24 : 0] MUX_dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_write_1__VAL_1,
		MUX_dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_write_1__VAL_2;
  wire [7 : 0] MUX_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg_write_1__VAL_1;
  wire [4 : 0] MUX_cntrl_nextStateReg_port0__write_1__VAL_2,
	       MUX_cntrl_nextStateReg_port0__write_1__VAL_7;
  wire [2 : 0] MUX_sq_retryHandler_retryCntReg_write_1__VAL_1,
	       MUX_sq_retryHandler_retryHandleStateReg_write_1__VAL_3,
	       MUX_sq_retryHandler_rnrCntReg_write_1__VAL_1;
  wire [1 : 0] MUX_sq_pendingWorkReqBuf_deqPtrReg_write_1__VAL_1,
	       MUX_sq_pendingWorkReqBuf_enqPtrReg_write_1__VAL_1,
	       MUX_sq_pendingWorkReqBuf_scanPtrReg_write_1__VAL_2,
	       MUX_sq_pendingWorkReqBuf_scanStateReg_write_1__VAL_3,
	       MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg_write_1__VAL_1,
	       MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg_write_1__VAL_2,
	       MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__VAL_1,
	       MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__VAL_2,
	       MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__VAL_3;
  wire MUX_cntrl_nextStateReg_port0__write_1__SEL_1,
       MUX_cntrl_nextStateReg_port0__write_1__SEL_2,
       MUX_cntrl_nextStateReg_port0__write_1__SEL_3,
       MUX_cntrl_nextStateReg_port0__write_1__SEL_4,
       MUX_cntrl_nextStateReg_port0__write_1__SEL_5,
       MUX_cntrl_nextStateReg_port0__write_1__SEL_6,
       MUX_cntrl_nextStateReg_port0__write_1__SEL_7,
       MUX_cntrl_npsnReg_write_1__SEL_1,
       MUX_dmaReadCntrl4SQ_addrChunkSrv_busyReg_write_1__VAL_1,
       MUX_dmaReadCntrl4SQ_addrChunkSrv_isFirstReg_write_1__SEL_1,
       MUX_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg_write_1__SEL_1,
       MUX_sq_pendingWorkReqBuf_emptyReg_write_1__VAL_1,
       MUX_sq_pendingWorkReqBuf_fullReg_write_1__VAL_1,
       MUX_sq_pendingWorkReqBuf_headReg_write_1__SEL_1,
       MUX_sq_pendingWorkReqBuf_scanAlmostDoneReg_write_1__VAL_1,
       MUX_sq_pendingWorkReqBuf_scanAlmostDoneReg_write_1__VAL_2,
       MUX_sq_pendingWorkReqBuf_scanStateReg_write_1__SEL_1,
       MUX_sq_pendingWorkReqBuf_scanStateReg_write_1__SEL_2,
       MUX_sq_pendingWorkReqBuf_scanStateReg_write_1__SEL_3,
       MUX_sq_reqGenSQ_isFirstOrOnlyReqPktReg_write_1__VAL_1,
       MUX_sq_reqGenSQ_isNormalStateReg_write_1__SEL_1,
       MUX_sq_reqGenSQ_pendingWorkReqOutQ_enq_1__SEL_1,
       MUX_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg_write_1__VAL_1,
       MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_enq_1__SEL_1,
       MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg_write_1__SEL_1,
       MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg_write_1__SEL_1,
       MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__SEL_2,
       MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__SEL_4,
       MUX_sq_respHandleSQ_hasInternalErrReg_port0__write_1__SEL_1,
       MUX_sq_respHandleSQ_hasTimeOutErrReg_port0__write_1__SEL_1,
       MUX_sq_respHandleSQ_incomingRespQ_enq_1__SEL_1,
       MUX_sq_respHandleSQ_preRdmaOpCodeReg_write_1__SEL_1,
       MUX_sq_respHandleSQ_preStageStateReg_write_1__SEL_1,
       MUX_sq_respHandleSQ_recvRetryRespReg_write_1__SEL_2,
       MUX_sq_retryHandler_disableRetryCntReg_write_1__SEL_1,
       MUX_sq_retryHandler_disableTimeOutReg_write_1__SEL_1,
       MUX_sq_retryHandler_isRnrWaitCntZeroReg_write_1__SEL_1,
       MUX_sq_retryHandler_isRnrWaitCntZeroReg_write_1__VAL_1,
       MUX_sq_retryHandler_isTimeOutCntHighPartZeroReg_write_1__SEL_1,
       MUX_sq_retryHandler_isTimeOutCntHighPartZeroReg_write_1__VAL_1,
       MUX_sq_retryHandler_isTimeOutCntLowPartZeroReg_write_1__VAL_1,
       MUX_sq_retryHandler_pauseRetryHandleReg_write_1__SEL_1,
       MUX_sq_retryHandler_retryCntReg_write_1__SEL_1,
       MUX_sq_retryHandler_retryCntrlStateReg_port0__write_1__SEL_1,
       MUX_sq_retryHandler_retryHandleStateReg_write_1__SEL_1,
       MUX_sq_retryHandler_retryHandleStateReg_write_1__SEL_2,
       MUX_sq_retryHandler_rnrCntReg_write_1__SEL_1,
       MUX_sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_write_1__SEL_1,
       MUX_sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_write_1__SEL_2,
       MUX_sq_workCompGenSQ_workCompOutQ4SQ_enq_1__SEL_1;

  // declarations used by system tasks
  // synopsys translate_off
  reg [63 : 0] v__h3884;
  reg [63 : 0] v__h4313;
  reg [63 : 0] v__h4717;
  reg [63 : 0] v__h5169;
  reg [63 : 0] v__h5606;
  reg [63 : 0] v__h5829;
  reg [63 : 0] v__h6391;
  reg [63 : 0] v__h6614;
  reg [63 : 0] v__h7317;
  reg [63 : 0] v__h9162;
  reg [63 : 0] v__h13758;
  reg [63 : 0] v__h14296;
  reg [63 : 0] v__h43308;
  reg [63 : 0] v__h50137;
  reg [63 : 0] v__h50289;
  reg [63 : 0] v__h50515;
  reg [63 : 0] v__h50628;
  reg [63 : 0] v__h50773;
  reg [63 : 0] v__h54300;
  reg [63 : 0] v__h58741;
  reg [63 : 0] v__h61335;
  reg [63 : 0] v__h63194;
  reg [63 : 0] v__h69848;
  reg [63 : 0] v__h73012;
  reg [63 : 0] v__h48088;
  reg [63 : 0] v__h48212;
  reg [63 : 0] v__h48664;
  reg [63 : 0] v__h93157;
  reg [63 : 0] v__h93514;
  reg [63 : 0] v__h93774;
  reg [63 : 0] v__h57516;
  reg [63 : 0] v__h97761;
  reg [63 : 0] v__h97941;
  reg [63 : 0] v__h98281;
  reg [63 : 0] v__h98457;
  reg [63 : 0] v__h101559;
  reg [63 : 0] v__h101795;
  reg [63 : 0] v__h101959;
  reg [63 : 0] v__h103981;
  reg [63 : 0] v__h104178;
  reg [63 : 0] v__h106970;
  reg [63 : 0] v__h107194;
  reg [63 : 0] v__h107798;
  reg [63 : 0] v__h109873;
  reg [63 : 0] v__h117067;
  reg [63 : 0] v__h117291;
  reg [63 : 0] v__h117643;
  reg [63 : 0] v__h122840;
  reg [63 : 0] v__h36446;
  reg [63 : 0] v__h36711;
  reg [63 : 0] v__h37491;
  reg [63 : 0] v__h38910;
  reg [63 : 0] v__h35350;
  reg [63 : 0] v__h35692;
  reg [63 : 0] v__h35995;
  reg [63 : 0] v__h34459;
  reg [63 : 0] v__h34954;
  reg [63 : 0] v__h98868;
  reg [63 : 0] v__h99106;
  reg [63 : 0] v__h120515;
  reg [63 : 0] v__h29295;
  reg [63 : 0] v__h29442;
  reg [63 : 0] v__h29608;
  reg [63 : 0] v__h29763;
  reg [63 : 0] v__h29891;
  reg [63 : 0] v__h30076;
  reg [63 : 0] v__h30289;
  reg [63 : 0] v__h30463;
  reg [63 : 0] v__h30613;
  reg [63 : 0] v__h24390;
  reg [63 : 0] v__h24503;
  reg [63 : 0] v__h24769;
  reg [63 : 0] v__h24880;
  reg [63 : 0] v__h25249;
  reg [63 : 0] v__h25475;
  reg [63 : 0] v__h43204;
  reg [63 : 0] v__h118758;
  reg [63 : 0] v__h126312;
  reg [63 : 0] v__h3196;
  reg [63 : 0] v__h3517;
  reg [63 : 0] v__h129863;
  reg [63 : 0] v__h130013;
  reg [63 : 0] v__h7672;
  // synopsys translate_on

  // remaining internal signals
  reg [511 : 0] CASE_cntrl_sqTypeReg_2_a3239_3_a3239_a3241__q6,
		CASE_cntrl_sqTypeReg_2_a3243_3_a3243_a3245__q7,
		CASE_cntrl_sqTypeReg_2_a3247_3_a3247_4_a3249_a_ETC__q8,
		CASE_cntrl_sqTypeReg_2_a3253_3_a3253_4_a3255_a_ETC__q9,
		value__h63238,
		value__h69886;
  reg [63 : 0] SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d838,
	       SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d855,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1463,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d768,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d786,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d804,
	       value__h99740,
	       value__h99767,
	       x__h39125,
	       x__h39664;
  reg [41 : 0] x__h32835;
  reg [31 : 0] CASE_payloadGenerator4SQ_payloadGenReqQD_OUT__ETC__q1,
	       SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d871,
	       SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d888,
	       SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d937,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1561,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1618,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d792,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d798,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d810,
	       value__h99797,
	       value__h99824,
	       value__h99908,
	       x__h39399;
  reg [24 : 0] SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d1650,
	       SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d994,
	       tmpPktNum__h9229,
	       x__h52242;
  reg [23 : 0] SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d904,
	       SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d921,
	       SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d961,
	       SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d978,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1619,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d816,
	       value__h99854,
	       value__h99881,
	       value__h99939,
	       value__h99966,
	       x__h6205,
	       x__h63485;
  reg [15 : 0] IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d99;
  reg [11 : 0] pmtuResidue__h9230, x__h52371;
  reg [10 : 0] IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d155;
  reg [7 : 0] CASE_sq_workCompGenSQ_pendingWorkCompQ4SQD_OU_ETC__q34,
	      IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d95,
	      x__h6243;
  reg [6 : 0] CASE_cntrl_sqTypeReg_2_12_3_12_4_20_16__q4,
	      CASE_cntrl_sqTypeReg_2_28_3_28_32__q2,
	      CASE_cntrl_sqTypeReg_2_b3244_3_b3244_b3246__q3,
	      CASE_cntrl_sqTypeReg_2_b3254_3_b3254_4_24_b3258__q5,
	      value__h68654,
	      value__h72405;
  reg [4 : 0] CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q22,
	      CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q23,
	      IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222,
	      IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3300,
	      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d780,
	      enumBits__h93928;
  reg [3 : 0] CASE_sq_respHandleSQ_incomingRespQD_OUT_BITS__ETC__q28,
	      CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q32,
	      IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d60,
	      IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4298,
	      IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4302,
	      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1521,
	      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d774;
  reg [2 : 0] CASE_sq_respHandleSQ_pendingRespQD_OUT_BITS_4_ETC__q33,
	      IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208;
  reg [1 : 0] CASE_respPktPipe_metaDataQD_OUT_BITS_527_TO_5_ETC__q29,
	      CASE_respPktPipe_metaDataQD_OUT_BITS_529_TO_5_ETC__q30,
	      CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q24,
	      CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q31,
	      IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4308,
	      IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4312;
  reg CASE_sq_reqGenSQ_reqHeaderPrepareQD_OUT_BITS__ETC__q18,
      CASE_sq_reqGenSQ_reqHeaderPrepareQD_OUT_BITS__ETC__q19,
      CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q15,
      CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q16,
      CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q17,
      CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q20,
      CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q21,
      CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q25,
      CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q26,
      CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q27,
      CASE_sq_respHandleSQ_preRdmaOpCodeReg_13_NOT_s_ETC__q14,
      CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q10,
      CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q11,
      CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q12,
      CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q13,
      CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q35,
      CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q36,
      IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2711,
      IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2722,
      IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4824,
      IF_sq_respHandleSQ_pendingRetryCheckQ_first__9_ETC___d4989,
      IF_sq_respHandleSQ_preStageRespAndWorkReqRelat_ETC___d4271,
      IF_sq_respHandleSQ_preStageRespAndWorkReqRelat_ETC___d4275,
      SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1473,
      SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1491,
      SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3994,
      SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4003,
      SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4012,
      SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4021,
      SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4030,
      SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4039,
      SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4048,
      SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4057,
      SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074,
      SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4083,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3861,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3878,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3896,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3915,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3935,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1001,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1007,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1474,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1492,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1620,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1621,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1624,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1626,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1629,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1631,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1634,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1636,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1649,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1652,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1653,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d822,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d828,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d845,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d861,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d878,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d894,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d911,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d927,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d951,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d968,
      SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d984;
  wire [520 : 0] IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3420;
  wire [511 : 0] IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_IF_cntrl__ETC___d3311,
		 IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_IF_sq_req_ETC___d3316,
		 a__h63239,
		 a__h63241,
		 a__h63243,
		 a__h63245,
		 a__h63247,
		 a__h63249,
		 a__h63251,
		 a__h63253,
		 a__h63255,
		 a__h63257,
		 a__h63259,
		 a__h63261,
		 a__h63269,
		 a__h63272,
		 a__h69887,
		 a__h69889,
		 a__h69891,
		 a__h69893,
		 a__h69903,
		 a__h69905,
		 leftShiftHeaderData__h47318,
		 tmpData__h49087,
		 x__h47525,
		 x__h74169;
  wire [255 : 0] leftShiftData__h49541,
		 rightShiftHeaderLastFragData__h48757,
		 x__read_data__h12578;
  wire [77 : 0] NOT_sq_retryHandler_retryReasonReg_431_EQ_4_46_ETC___d1656,
		sq_reqGenSQ_workReqPsnQ_first__498_BIT_4_499_O_ETC___d2558;
  wire [63 : 0] _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443,
		leftShiftHeaderByteEn__h47319,
		tmpByteEn__h49088,
		x__h47528;
  wire [41 : 0] x__h33715;
  wire [31 : 0] _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577,
		leftShiftByteEn__h49542,
		payloadGenerator4SQ_bramQ2PipeOut_postBramQ_fi_ETC___d1852,
		rightShiftHeaderLastFragByteEn__h48758,
		x__h14424,
		x__read_byteEn__h12579,
		y_avValue_byteEn__h17055;
  wire [24 : 0] _theResult___snd__h61670,
		a__h52253,
		a__h52263,
		a__h52273,
		a__h52283,
		a__h52293,
		a__h9345,
		a__h9355,
		a__h9365,
		a__h9375,
		a__h9385,
		remainingPktNum___1__h61681,
		remainingPktNum___1__h61739,
		totalPktNum__h55209,
		x__h37628,
		x__h56223;
  wire [23 : 0] curPSN__h61636,
		endPktSeqNum__h56057,
		nextPktSeqNum__h56056,
		startPlusOne__h56122,
		v__h37423,
		x__h56104;
  wire [16 : 0] IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1770,
		sq_reqGenSQ_pendingReqHeaderQ_first__424_BITS__ETC___d3563;
  wire [12 : 0] addrChunkResp_chunkLen__h10586,
		sq_respHandleSQ_pendingRetryCheckQ_first__949__ETC___d5187;
  wire [11 : 0] b__h52254,
		b__h52264,
		b__h52274,
		b__h52284,
		b__h9346,
		b__h9356,
		b__h9366,
		b__h9376;
  wire [9 : 0] x__h12662, x__h12913;
  wire [8 : 0] headerLastFragValidBitNum__h47980;
  wire [7 : 0] x__h16825, x__h41815, x__h41903, y__h42773;
  wire [6 : 0] IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_12_ELSE_16___d3346,
	       IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_IF_sq_req_ETC___d3349,
	       b__h63244,
	       b__h63246,
	       b__h63254,
	       b__h63258,
	       b__h69892,
	       b__h69894,
	       remainingHeaderLen__h47316,
	       x__h81436;
  wire [5 : 0] headerLastFragInvalidByteNum__h47982,
	       lastFragValidByteNumWithPadding__h13828,
	       lastFragValidByteNum__h13827,
	       lastFragValidByteNum__h13849,
	       lastFragValidByteNum__h87658;
  wire [4 : 0] rnrTimer__h36783;
  wire [2 : 0] x__h35617, x__h35647;
  wire [1 : 0] IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1737,
	       IF_sq_retryHandler_retryRespQ_first__023_THEN__ETC___d5182,
	       bits__h49179,
	       bth_padCnt__h63283,
	       bth_padCnt__h69915,
	       padCnt__h13826,
	       padCnt__h63476,
	       remainingHeaderFragNum__h47317;
  wire IF_IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_ETC___d1515,
       IF_IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_ETC___d4106,
       IF_IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_ETC___d4116,
       IF_IF_sq_retryHandler_updateRetryCntQ_first__3_ETC___d1388,
       IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d1501,
       IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d4097,
       IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d4105,
       IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d4108,
       IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d4115,
       IF_cntrl_npsnReg_41_BIT_23_518_EQ_IF_IF_sq_req_ETC___d2534,
       IF_cntrl_stateReg_EQ_3_AND_sq_pendingWorkReqPi_ETC___d1880,
       IF_cntrl_stateReg_EQ_3_AND_sq_pendingWorkReqPi_ETC___d2074,
       IF_sq_pendingWorkReqBuf_pushReg_port1__read__7_ETC___d702,
       IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1734,
       IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1742,
       IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1745,
       IF_sq_reqGenSQ_reqHeaderGenQ_first__570_BIT_24_ETC___d3578,
       IF_sq_reqGenSQ_reqHeaderGenQ_first__570_BIT_26_ETC___d3579,
       IF_sq_reqGenSQ_reqHeaderGenQ_first__570_BIT_62_ETC___d3580,
       IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2724,
       IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2730,
       IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2734,
       IF_sq_reqGenSQ_workCompGenReqOutQ_notEmpty__69_ETC___d5707,
       IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4844,
       IF_sq_respHandleSQ_pendingRetryCheckQ_first__9_ETC___d5037,
       IF_sq_retryHandler_resetTimeOutQ_notEmpty__176_ETC___d1197,
       IF_sq_retryHandler_updateRetryCntQ_first__309__ETC___d1340,
       IF_sq_workCompGenSQ_genWorkCompQ_first__802_BI_ETC___d5808,
       NOT_IF_IF_sq_reqGenSQ_workReqPsnQ_first__498_B_ETC___d2524,
       NOT_IF_IF_sq_reqGenSQ_workReqPsnQ_first__498_B_ETC___d2536,
       NOT_IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVe_ETC___d1503,
       NOT_IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVe_ETC___d1514,
       NOT_IF_sq_retryHandler_retryReasonReg_431_EQ_4_ETC___d1505,
       NOT_IF_sq_retryHandler_retryReasonReg_431_EQ_4_ETC___d1516,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3783,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3794,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3806,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3822,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3836,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3851,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3867,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3870,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3884,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3887,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3902,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3905,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3921,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3927,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3941,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3947,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3956,
       NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3962,
       NOT_cntrl_npsnReg_41_ULT_IF_IF_sq_reqGenSQ_wor_ETC___d2522,
       NOT_cntrl_npsnReg_41_ULT_IF_IF_sq_reqGenSQ_wor_ETC___d2533,
       NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712,
       NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723,
       NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2742,
       NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2882,
       NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2889,
       NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2902,
       NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2973,
       NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2978,
       NOT_dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_77__ETC___d376,
       NOT_sq_newPendingWorkReqPiptOut_pendingNewWork_ETC___d1707,
       NOT_sq_pendingWorkReqPipeOut_pipeMuxOutQ_first_ETC___d1919,
       NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992,
       NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352,
       NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4479,
       NOT_sq_respHandleSQ_retryFlushReg_616_617_OR_s_ETC___d4756,
       NOT_sq_retryHandler_resetTimeOutQ_notEmpty__17_ETC___d1219,
       __duses1049,
       __duses1054,
       __duses727,
       __duses732,
       __duses737,
       __duses742,
       __duses747,
       __duses752,
       __duses753,
       __duses757,
       __duses762,
       __duses767,
       __duses772,
       __duses777,
       __duses782,
       __duses783,
       __duses787,
       __duses792,
       __duses795,
       __duses806,
       __duses810,
       __duses815,
       __duses819,
       __duses824,
       __duses828,
       __duses833,
       __duses837,
       __duses842,
       __duses847,
       __duses852,
       __duses863,
       __duses874,
       __duses885,
       __duses896,
       __duses907,
       __duses918,
       __duses929,
       __duses940,
       __duses953,
       __duses964,
       __duses975,
       __duses986,
       __duses988,
       __duses991,
       __duses996,
       __duses999,
       cntrl_stateReg_EQ_3_AND_NOT_sq_respHandleSQ_re_ETC___d5647,
       cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_preSta_ETC___d3624,
       cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_preSta_ETC___d4329,
       cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_recvEr_ETC___d5683,
       cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_retryF_ETC___d5690,
       dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_77_BITS_ETC___d366,
       dmaReadCntrl4SQ_respQ_i_notEmpty__42_AND_NOT_d_ETC___d657,
       payloadGenerator4SQ_payloadBufQ_rRdPtr_read__7_ETC___d487,
       respPktPipe_metaDataQ_first__626_BITS_554_TO_5_ETC___d4098,
       respPktPipe_metaDataQ_first__626_BITS_554_TO_5_ETC___d4109,
       sq_pendingWorkReqBuf_deqPtrReg_90_EQ_sq_pendin_ETC___d1031,
       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAnd_ETC___d1747,
       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAnd_ETC___d1808,
       sq_reqGenSQ_workReqCheckQ_i_notEmpty__561_AND__ETC___d2573,
       sq_respHandleSQ_pendingRetryCheckQ_first__949__ETC___d5046,
       sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4187,
       sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4200,
       sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4203,
       sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4208,
       sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4214,
       sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4220,
       sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4267,
       sq_respHandleSQ_retryFlushReg_616_AND_NOT_sq_r_ETC___d4697,
       sq_respHandleSQ_retryFlushReg_616_AND_NOT_sq_r_ETC___d4716,
       sq_respHandleSQ_retryFlushReg_616_AND_NOT_sq_r_ETC___d4746,
       sq_retryHandler_prepareRetryRespQ_i_notEmpty___ETC___d1411,
       sq_retryHandler_resetReqQ_i_notEmpty__149_AND__ETC___d1155,
       sq_retryHandler_resetTimeOutQ_notEmpty__176_OR_ETC___d1209,
       sq_retryHandler_updateRetryCntQ_i_notEmpty__30_ETC___d1313,
       sq_workCompGenSQ_dmaWaitingQ_i_notFull__721_AN_ETC___d5767,
       x__h87589;

  // action method srvPortQP_request_put
  assign RDY_srvPortQP_request_put = cntrl_reqQ_FULL_N ;
  assign CAN_FIRE_srvPortQP_request_put = cntrl_reqQ_FULL_N ;
  assign WILL_FIRE_srvPortQP_request_put = EN_srvPortQP_request_put ;

  // actionvalue method srvPortQP_response_get
  assign srvPortQP_response_get = cntrl_respQ_D_OUT ;
  assign RDY_srvPortQP_response_get = cntrl_respQ_EMPTY_N ;
  assign CAN_FIRE_srvPortQP_response_get = cntrl_respQ_EMPTY_N ;
  assign WILL_FIRE_srvPortQP_response_get = EN_srvPortQP_response_get ;

  // action method workReqIn_put
  assign RDY_workReqIn_put = workReqQ_FULL_N ;
  assign CAN_FIRE_workReqIn_put = workReqQ_FULL_N ;
  assign WILL_FIRE_workReqIn_put = EN_workReqIn_put ;

  // actionvalue method dmaReadClt4SQ_request_get
  assign dmaReadClt4SQ_request_get = dmaReadProxy4SQ_reqQ_D_OUT ;
  assign RDY_dmaReadClt4SQ_request_get = dmaReadProxy4SQ_reqQ_EMPTY_N ;
  assign CAN_FIRE_dmaReadClt4SQ_request_get = dmaReadProxy4SQ_reqQ_EMPTY_N ;
  assign WILL_FIRE_dmaReadClt4SQ_request_get = EN_dmaReadClt4SQ_request_get ;

  // action method dmaReadClt4SQ_response_put
  assign RDY_dmaReadClt4SQ_response_put = dmaReadProxy4SQ_respQ_FULL_N ;
  assign CAN_FIRE_dmaReadClt4SQ_response_put = dmaReadProxy4SQ_respQ_FULL_N ;
  assign WILL_FIRE_dmaReadClt4SQ_response_put =
	     EN_dmaReadClt4SQ_response_put ;

  // action method respPktPipeIn_pktMetaData_put
  assign RDY_respPktPipeIn_pktMetaData_put = respPktPipe_metaDataQ_FULL_N ;
  assign CAN_FIRE_respPktPipeIn_pktMetaData_put =
	     respPktPipe_metaDataQ_FULL_N ;
  assign WILL_FIRE_respPktPipeIn_pktMetaData_put =
	     EN_respPktPipeIn_pktMetaData_put ;

  // action method respPktPipeIn_payload_put
  assign RDY_respPktPipeIn_payload_put = respPktPipe_payloadQ_FULL_N ;
  assign CAN_FIRE_respPktPipeIn_payload_put = respPktPipe_payloadQ_FULL_N ;
  assign WILL_FIRE_respPktPipeIn_payload_put = EN_respPktPipeIn_payload_put ;

  // value method statusSQ_comm_isCreate
  assign statusSQ_comm_isCreate = cntrl_stateReg == 4'd8 ;
  assign RDY_statusSQ_comm_isCreate = 1'd1 ;

  // value method statusSQ_comm_isERR
  assign statusSQ_comm_isERR = cntrl_stateReg == 4'd6 ;
  assign RDY_statusSQ_comm_isERR = 1'd1 ;

  // value method statusSQ_comm_isInit
  assign statusSQ_comm_isInit = cntrl_stateReg == 4'd1 ;
  assign RDY_statusSQ_comm_isInit = 1'd1 ;

  // value method statusSQ_comm_isReset
  assign statusSQ_comm_isReset = cntrl_stateReg == 4'd0 ;
  assign RDY_statusSQ_comm_isReset = 1'd1 ;

  // value method statusSQ_comm_isRTR
  assign statusSQ_comm_isRTR = cntrl_stateReg == 4'd2 ;
  assign RDY_statusSQ_comm_isRTR = 1'd1 ;

  // value method statusSQ_comm_isRTS
  assign statusSQ_comm_isRTS = cntrl_stateReg == 4'd3 ;
  assign RDY_statusSQ_comm_isRTS = 1'd1 ;

  // value method statusSQ_comm_isSQD
  assign statusSQ_comm_isSQD = cntrl_stateReg == 4'd4 ;
  assign RDY_statusSQ_comm_isSQD = 1'd1 ;

  // value method statusSQ_comm_isNonErr
  assign statusSQ_comm_isNonErr =
	     cntrl_stateReg == 4'd2 || cntrl_stateReg == 4'd3 ||
	     cntrl_stateReg == 4'd4 ;
  assign RDY_statusSQ_comm_isNonErr = 1'd1 ;

  // value method statusSQ_comm_isUnknown
  assign statusSQ_comm_isUnknown = cntrl_stateReg == 4'd7 ;
  assign RDY_statusSQ_comm_isUnknown = 1'd1 ;

  // value method statusSQ_comm_isRTR2RTS
  assign statusSQ_comm_isRTR2RTS =
	     cntrl_preStateReg == 4'd2 && cntrl_stateReg == 4'd3 ;
  assign RDY_statusSQ_comm_isRTR2RTS = 1'd1 ;

  // value method statusSQ_comm_isStableRTS
  assign statusSQ_comm_isStableRTS =
	     cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 ;
  assign RDY_statusSQ_comm_isStableRTS = 1'd1 ;

  // value method statusSQ_comm_getAccessFlags
  assign statusSQ_comm_getAccessFlags = cntrl_qpAccessFlagsReg ;
  assign RDY_statusSQ_comm_getAccessFlags = RDY_statusSQ_comm_getPMTU ;

  // value method statusSQ_comm_getMaxRnrCnt
  assign statusSQ_comm_getMaxRnrCnt = cntrl_maxRnrCntReg ;
  assign RDY_statusSQ_comm_getMaxRnrCnt = RDY_statusSQ_comm_getPMTU ;

  // value method statusSQ_comm_getMaxRetryCnt
  assign statusSQ_comm_getMaxRetryCnt = cntrl_maxRetryCntReg ;
  assign RDY_statusSQ_comm_getMaxRetryCnt = RDY_statusSQ_comm_getPMTU ;

  // value method statusSQ_comm_getMinRnrTimer
  assign statusSQ_comm_getMinRnrTimer = cntrl_minRnrTimerReg ;
  assign RDY_statusSQ_comm_getMinRnrTimer = RDY_statusSQ_comm_getPMTU ;

  // value method statusSQ_comm_getMaxTimeOut
  assign statusSQ_comm_getMaxTimeOut = cntrl_maxTimeOutReg ;
  assign RDY_statusSQ_comm_getMaxTimeOut = RDY_statusSQ_comm_getPMTU ;

  // value method statusSQ_comm_getPendingWorkReqNum
  assign statusSQ_comm_getPendingWorkReqNum = cntrl_pendingWorkReqNumReg ;
  assign RDY_statusSQ_comm_getPendingWorkReqNum = RDY_statusSQ_comm_getPMTU ;

  // value method statusSQ_comm_getPendingRecvReqNum
  assign statusSQ_comm_getPendingRecvReqNum = cntrl_pendingRecvReqNumReg ;
  assign RDY_statusSQ_comm_getPendingRecvReqNum = RDY_statusSQ_comm_getPMTU ;

  // value method statusSQ_comm_getPendingReadAtomicReqNum
  assign statusSQ_comm_getPendingReadAtomicReqNum =
	     cntrl_pendingReadAtomicReqNumReg ;
  assign RDY_statusSQ_comm_getPendingReadAtomicReqNum =
	     RDY_statusSQ_comm_getPMTU ;

  // value method statusSQ_comm_getPendingDestReadAtomicReqNum
  assign statusSQ_comm_getPendingDestReadAtomicReqNum =
	     cntrl_pendingDestReadAtomicReqNumReg ;
  assign RDY_statusSQ_comm_getPendingDestReadAtomicReqNum =
	     RDY_statusSQ_comm_getPMTU ;

  // value method statusSQ_comm_getSigAll
  assign statusSQ_comm_getSigAll = cntrl_sqSigAllReg ;
  assign RDY_statusSQ_comm_getSigAll = RDY_statusSQ_comm_getPMTU ;

  // value method statusSQ_comm_getSQPN
  assign statusSQ_comm_getSQPN = cntrl_sqpnReg ;
  assign RDY_statusSQ_comm_getSQPN = RDY_statusSQ_comm_getPMTU ;

  // value method statusSQ_comm_getDQPN
  assign statusSQ_comm_getDQPN = cntrl_dqpnReg ;
  assign RDY_statusSQ_comm_getDQPN = RDY_statusSQ_comm_getPMTU ;

  // value method statusSQ_comm_getPKEY
  assign statusSQ_comm_getPKEY = cntrl_pkeyReg ;
  assign RDY_statusSQ_comm_getPKEY = RDY_statusSQ_comm_getPMTU ;

  // value method statusSQ_comm_getQKEY
  assign statusSQ_comm_getQKEY = cntrl_qkeyReg ;
  assign RDY_statusSQ_comm_getQKEY = RDY_statusSQ_comm_getPMTU ;

  // value method statusSQ_comm_getPMTU
  assign statusSQ_comm_getPMTU = cntrl_pmtuReg ;
  assign RDY_statusSQ_comm_getPMTU =
	     cntrl_stateReg != 4'd0 && cntrl_stateReg != 4'd7 ;

  // value method statusSQ_getTypeQP
  assign statusSQ_getTypeQP = cntrl_sqTypeReg ;
  assign RDY_statusSQ_getTypeQP = 1'd1 ;

  // value method statusSQ_isSQ
  assign statusSQ_isSQ = 1'd1 ;
  assign RDY_statusSQ_isSQ = 1'd1 ;

  // value method rdmaReqPipeOut_first
  assign rdmaReqPipeOut_first = sq_reqGenSQ_rdmaReqPipeOut_outputQ_D_OUT ;
  assign RDY_rdmaReqPipeOut_first =
	     sq_reqGenSQ_rdmaReqPipeOut_outputQ_EMPTY_N ;

  // action method rdmaReqPipeOut_deq
  assign RDY_rdmaReqPipeOut_deq = sq_reqGenSQ_rdmaReqPipeOut_outputQ_EMPTY_N ;
  assign CAN_FIRE_rdmaReqPipeOut_deq =
	     sq_reqGenSQ_rdmaReqPipeOut_outputQ_EMPTY_N ;
  assign WILL_FIRE_rdmaReqPipeOut_deq = EN_rdmaReqPipeOut_deq ;

  // value method rdmaReqPipeOut_notEmpty
  assign rdmaReqPipeOut_notEmpty =
	     sq_reqGenSQ_rdmaReqPipeOut_outputQ_EMPTY_N ;
  assign RDY_rdmaReqPipeOut_notEmpty = 1'd1 ;

  // value method workCompPipeOutSQ_first
  assign workCompPipeOutSQ_first = sq_workCompGenSQ_workCompOutQ4SQ_D_OUT ;
  assign RDY_workCompPipeOutSQ_first =
	     sq_workCompGenSQ_workCompOutQ4SQ_EMPTY_N ;

  // action method workCompPipeOutSQ_deq
  assign RDY_workCompPipeOutSQ_deq =
	     sq_workCompGenSQ_workCompOutQ4SQ_EMPTY_N ;
  assign CAN_FIRE_workCompPipeOutSQ_deq =
	     sq_workCompGenSQ_workCompOutQ4SQ_EMPTY_N ;
  assign WILL_FIRE_workCompPipeOutSQ_deq = EN_workCompPipeOutSQ_deq ;

  // value method workCompPipeOutSQ_notEmpty
  assign workCompPipeOutSQ_notEmpty =
	     sq_workCompGenSQ_workCompOutQ4SQ_EMPTY_N ;
  assign RDY_workCompPipeOutSQ_notEmpty = 1'd1 ;

  // submodule cntrl_reqQ
  FIFO2 #(.width(32'd301), .guarded(1'd1)) cntrl_reqQ(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(cntrl_reqQ_D_IN),
						      .ENQ(cntrl_reqQ_ENQ),
						      .DEQ(cntrl_reqQ_DEQ),
						      .CLR(cntrl_reqQ_CLR),
						      .D_OUT(cntrl_reqQ_D_OUT),
						      .FULL_N(cntrl_reqQ_FULL_N),
						      .EMPTY_N(cntrl_reqQ_EMPTY_N));

  // submodule cntrl_respQ
  FIFO2 #(.width(32'd274), .guarded(1'd1)) cntrl_respQ(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(cntrl_respQ_D_IN),
						       .ENQ(cntrl_respQ_ENQ),
						       .DEQ(cntrl_respQ_DEQ),
						       .CLR(cntrl_respQ_CLR),
						       .D_OUT(cntrl_respQ_D_OUT),
						       .FULL_N(cntrl_respQ_FULL_N),
						       .EMPTY_N(cntrl_respQ_EMPTY_N));

  // submodule cntrl_restoreQ
  FIFO2 #(.width(32'd29), .guarded(1'd1)) cntrl_restoreQ(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(cntrl_restoreQ_D_IN),
							 .ENQ(cntrl_restoreQ_ENQ),
							 .DEQ(cntrl_restoreQ_DEQ),
							 .CLR(cntrl_restoreQ_CLR),
							 .D_OUT(cntrl_restoreQ_D_OUT),
							 .FULL_N(),
							 .EMPTY_N(cntrl_restoreQ_EMPTY_N));

  // submodule dmaReadCntrl4SQ_addrChunkSrv_reqQ
  FIFO2 #(.width(32'd99),
	  .guarded(1'd1)) dmaReadCntrl4SQ_addrChunkSrv_reqQ(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_IN),
							    .ENQ(dmaReadCntrl4SQ_addrChunkSrv_reqQ_ENQ),
							    .DEQ(dmaReadCntrl4SQ_addrChunkSrv_reqQ_DEQ),
							    .CLR(dmaReadCntrl4SQ_addrChunkSrv_reqQ_CLR),
							    .D_OUT(dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT),
							    .FULL_N(dmaReadCntrl4SQ_addrChunkSrv_reqQ_FULL_N),
							    .EMPTY_N(dmaReadCntrl4SQ_addrChunkSrv_reqQ_EMPTY_N));

  // submodule dmaReadCntrl4SQ_addrChunkSrv_respQ
  FIFO2 #(.width(32'd79),
	  .guarded(1'd1)) dmaReadCntrl4SQ_addrChunkSrv_respQ(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(dmaReadCntrl4SQ_addrChunkSrv_respQ_D_IN),
							     .ENQ(dmaReadCntrl4SQ_addrChunkSrv_respQ_ENQ),
							     .DEQ(dmaReadCntrl4SQ_addrChunkSrv_respQ_DEQ),
							     .CLR(dmaReadCntrl4SQ_addrChunkSrv_respQ_CLR),
							     .D_OUT(dmaReadCntrl4SQ_addrChunkSrv_respQ_D_OUT),
							     .FULL_N(dmaReadCntrl4SQ_addrChunkSrv_respQ_FULL_N),
							     .EMPTY_N(dmaReadCntrl4SQ_addrChunkSrv_respQ_EMPTY_N));

  // submodule dmaReadCntrl4SQ_pendingDmaCntrlReqQ
  FIFO2 #(.width(32'd192),
	  .guarded(1'd1)) dmaReadCntrl4SQ_pendingDmaCntrlReqQ(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(dmaReadCntrl4SQ_pendingDmaCntrlReqQ_D_IN),
							      .ENQ(dmaReadCntrl4SQ_pendingDmaCntrlReqQ_ENQ),
							      .DEQ(dmaReadCntrl4SQ_pendingDmaCntrlReqQ_DEQ),
							      .CLR(dmaReadCntrl4SQ_pendingDmaCntrlReqQ_CLR),
							      .D_OUT(dmaReadCntrl4SQ_pendingDmaCntrlReqQ_D_OUT),
							      .FULL_N(dmaReadCntrl4SQ_pendingDmaCntrlReqQ_FULL_N),
							      .EMPTY_N(dmaReadCntrl4SQ_pendingDmaCntrlReqQ_EMPTY_N));

  // submodule dmaReadCntrl4SQ_pendingDmaReadReqQ
  FIFO2 #(.width(32'd172),
	  .guarded(1'd1)) dmaReadCntrl4SQ_pendingDmaReadReqQ(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(dmaReadCntrl4SQ_pendingDmaReadReqQ_D_IN),
							     .ENQ(dmaReadCntrl4SQ_pendingDmaReadReqQ_ENQ),
							     .DEQ(dmaReadCntrl4SQ_pendingDmaReadReqQ_DEQ),
							     .CLR(dmaReadCntrl4SQ_pendingDmaReadReqQ_CLR),
							     .D_OUT(dmaReadCntrl4SQ_pendingDmaReadReqQ_D_OUT),
							     .FULL_N(dmaReadCntrl4SQ_pendingDmaReadReqQ_FULL_N),
							     .EMPTY_N(dmaReadCntrl4SQ_pendingDmaReadReqQ_EMPTY_N));

  // submodule dmaReadCntrl4SQ_reqQ
  FIFO2 #(.width(32'd192), .guarded(1'd1)) dmaReadCntrl4SQ_reqQ(.RST(RST_N),
								.CLK(CLK),
								.D_IN(dmaReadCntrl4SQ_reqQ_D_IN),
								.ENQ(dmaReadCntrl4SQ_reqQ_ENQ),
								.DEQ(dmaReadCntrl4SQ_reqQ_DEQ),
								.CLR(dmaReadCntrl4SQ_reqQ_CLR),
								.D_OUT(dmaReadCntrl4SQ_reqQ_D_OUT),
								.FULL_N(dmaReadCntrl4SQ_reqQ_FULL_N),
								.EMPTY_N(dmaReadCntrl4SQ_reqQ_EMPTY_N));

  // submodule dmaReadCntrl4SQ_respQ
  FIFO2 #(.width(32'd385), .guarded(1'd1)) dmaReadCntrl4SQ_respQ(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(dmaReadCntrl4SQ_respQ_D_IN),
								 .ENQ(dmaReadCntrl4SQ_respQ_ENQ),
								 .DEQ(dmaReadCntrl4SQ_respQ_DEQ),
								 .CLR(dmaReadCntrl4SQ_respQ_CLR),
								 .D_OUT(dmaReadCntrl4SQ_respQ_D_OUT),
								 .FULL_N(dmaReadCntrl4SQ_respQ_FULL_N),
								 .EMPTY_N(dmaReadCntrl4SQ_respQ_EMPTY_N));

  // submodule dmaReadProxy4SQ_reqQ
  FIFO2 #(.width(32'd170), .guarded(1'd1)) dmaReadProxy4SQ_reqQ(.RST(RST_N),
								.CLK(CLK),
								.D_IN(dmaReadProxy4SQ_reqQ_D_IN),
								.ENQ(dmaReadProxy4SQ_reqQ_ENQ),
								.DEQ(dmaReadProxy4SQ_reqQ_DEQ),
								.CLR(dmaReadProxy4SQ_reqQ_CLR),
								.D_OUT(dmaReadProxy4SQ_reqQ_D_OUT),
								.FULL_N(dmaReadProxy4SQ_reqQ_FULL_N),
								.EMPTY_N(dmaReadProxy4SQ_reqQ_EMPTY_N));

  // submodule dmaReadProxy4SQ_respQ
  FIFO2 #(.width(32'd383), .guarded(1'd1)) dmaReadProxy4SQ_respQ(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(dmaReadProxy4SQ_respQ_D_IN),
								 .ENQ(dmaReadProxy4SQ_respQ_ENQ),
								 .DEQ(dmaReadProxy4SQ_respQ_DEQ),
								 .CLR(dmaReadProxy4SQ_respQ_CLR),
								 .D_OUT(dmaReadProxy4SQ_respQ_D_OUT),
								 .FULL_N(dmaReadProxy4SQ_respQ_FULL_N),
								 .EMPTY_N(dmaReadProxy4SQ_respQ_EMPTY_N));

  // submodule payloadGenerator4SQ_bramQ2PipeOut_postBramQ
  FIFO2 #(.width(32'd290),
	  .guarded(1'd1)) payloadGenerator4SQ_bramQ2PipeOut_postBramQ(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(payloadGenerator4SQ_bramQ2PipeOut_postBramQ_D_IN),
								      .ENQ(payloadGenerator4SQ_bramQ2PipeOut_postBramQ_ENQ),
								      .DEQ(payloadGenerator4SQ_bramQ2PipeOut_postBramQ_DEQ),
								      .CLR(payloadGenerator4SQ_bramQ2PipeOut_postBramQ_CLR),
								      .D_OUT(payloadGenerator4SQ_bramQ2PipeOut_postBramQ_D_OUT),
								      .FULL_N(payloadGenerator4SQ_bramQ2PipeOut_postBramQ_FULL_N),
								      .EMPTY_N(payloadGenerator4SQ_bramQ2PipeOut_postBramQ_EMPTY_N));

  // submodule payloadGenerator4SQ_payloadBufQ_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd9),
	  .DATA_WIDTH(32'd290),
	  .MEMSIZE(10'd512)) payloadGenerator4SQ_payloadBufQ_memory(.CLKA(CLK),
								    .CLKB(CLK),
								    .ADDRA(payloadGenerator4SQ_payloadBufQ_memory_ADDRA),
								    .ADDRB(payloadGenerator4SQ_payloadBufQ_memory_ADDRB),
								    .DIA(payloadGenerator4SQ_payloadBufQ_memory_DIA),
								    .DIB(payloadGenerator4SQ_payloadBufQ_memory_DIB),
								    .WEA(payloadGenerator4SQ_payloadBufQ_memory_WEA),
								    .WEB(payloadGenerator4SQ_payloadBufQ_memory_WEB),
								    .ENA(payloadGenerator4SQ_payloadBufQ_memory_ENA),
								    .ENB(payloadGenerator4SQ_payloadBufQ_memory_ENB),
								    .DOA(),
								    .DOB(payloadGenerator4SQ_payloadBufQ_memory_DOB));

  // submodule payloadGenerator4SQ_payloadGenReqQ
  FIFO2 #(.width(32'd193),
	  .guarded(1'd1)) payloadGenerator4SQ_payloadGenReqQ(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(payloadGenerator4SQ_payloadGenReqQ_D_IN),
							     .ENQ(payloadGenerator4SQ_payloadGenReqQ_ENQ),
							     .DEQ(payloadGenerator4SQ_payloadGenReqQ_DEQ),
							     .CLR(payloadGenerator4SQ_payloadGenReqQ_CLR),
							     .D_OUT(payloadGenerator4SQ_payloadGenReqQ_D_OUT),
							     .FULL_N(payloadGenerator4SQ_payloadGenReqQ_FULL_N),
							     .EMPTY_N(payloadGenerator4SQ_payloadGenReqQ_EMPTY_N));

  // submodule payloadGenerator4SQ_payloadGenRespQ
  FIFO2 #(.width(32'd2),
	  .guarded(1'd1)) payloadGenerator4SQ_payloadGenRespQ(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(payloadGenerator4SQ_payloadGenRespQ_D_IN),
							      .ENQ(payloadGenerator4SQ_payloadGenRespQ_ENQ),
							      .DEQ(payloadGenerator4SQ_payloadGenRespQ_DEQ),
							      .CLR(payloadGenerator4SQ_payloadGenRespQ_CLR),
							      .D_OUT(payloadGenerator4SQ_payloadGenRespQ_D_OUT),
							      .FULL_N(payloadGenerator4SQ_payloadGenRespQ_FULL_N),
							      .EMPTY_N(payloadGenerator4SQ_payloadGenRespQ_EMPTY_N));

  // submodule payloadGenerator4SQ_pendingGenReqQ
  FIFO2 #(.width(32'd233),
	  .guarded(1'd1)) payloadGenerator4SQ_pendingGenReqQ(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(payloadGenerator4SQ_pendingGenReqQ_D_IN),
							     .ENQ(payloadGenerator4SQ_pendingGenReqQ_ENQ),
							     .DEQ(payloadGenerator4SQ_pendingGenReqQ_DEQ),
							     .CLR(payloadGenerator4SQ_pendingGenReqQ_CLR),
							     .D_OUT(payloadGenerator4SQ_pendingGenReqQ_D_OUT),
							     .FULL_N(payloadGenerator4SQ_pendingGenReqQ_FULL_N),
							     .EMPTY_N(payloadGenerator4SQ_pendingGenReqQ_EMPTY_N));

  // submodule respPktPipe_metaDataQ
  FIFO2 #(.width(32'd649), .guarded(1'd1)) respPktPipe_metaDataQ(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(respPktPipe_metaDataQ_D_IN),
								 .ENQ(respPktPipe_metaDataQ_ENQ),
								 .DEQ(respPktPipe_metaDataQ_DEQ),
								 .CLR(respPktPipe_metaDataQ_CLR),
								 .D_OUT(respPktPipe_metaDataQ_D_OUT),
								 .FULL_N(respPktPipe_metaDataQ_FULL_N),
								 .EMPTY_N(respPktPipe_metaDataQ_EMPTY_N));

  // submodule respPktPipe_payloadQ
  FIFO2 #(.width(32'd290), .guarded(1'd1)) respPktPipe_payloadQ(.RST(RST_N),
								.CLK(CLK),
								.D_IN(respPktPipe_payloadQ_D_IN),
								.ENQ(respPktPipe_payloadQ_ENQ),
								.DEQ(respPktPipe_payloadQ_DEQ),
								.CLR(respPktPipe_payloadQ_CLR),
								.D_OUT(),
								.FULL_N(respPktPipe_payloadQ_FULL_N),
								.EMPTY_N());

  // submodule sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ
  FIFO2 #(.width(32'd679),
	  .guarded(1'd1)) sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ(.RST(RST_N),
									    .CLK(CLK),
									    .D_IN(sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_D_IN),
									    .ENQ(sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_ENQ),
									    .DEQ(sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_DEQ),
									    .CLR(sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_CLR),
									    .D_OUT(sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_D_OUT),
									    .FULL_N(sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_FULL_N),
									    .EMPTY_N(sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_EMPTY_N));

  // submodule sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ
  FIFO2 #(.width(32'd1),
	  .guarded(1'd1)) sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ(.RST(RST_N),
										 .CLK(CLK),
										 .D_IN(sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_D_IN),
										 .ENQ(sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_ENQ),
										 .DEQ(sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_DEQ),
										 .CLR(sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_CLR),
										 .D_OUT(),
										 .FULL_N(sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_FULL_N),
										 .EMPTY_N(sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_EMPTY_N));

  // submodule sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ
  FIFO2 #(.width(32'd1),
	  .guarded(1'd1)) sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ(.RST(RST_N),
										 .CLK(CLK),
										 .D_IN(sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_D_IN),
										 .ENQ(sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_ENQ),
										 .DEQ(sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_DEQ),
										 .CLR(sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_CLR),
										 .D_OUT(),
										 .FULL_N(sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_FULL_N),
										 .EMPTY_N(sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_EMPTY_N));

  // submodule sq_pendingWorkReqBuf_itemCnt
  Counter #(.width(32'd3),
	    .init(3'd0)) sq_pendingWorkReqBuf_itemCnt(.CLK(CLK),
						      .RST(RST_N),
						      .DATA_A(sq_pendingWorkReqBuf_itemCnt_DATA_A),
						      .DATA_B(sq_pendingWorkReqBuf_itemCnt_DATA_B),
						      .DATA_C(sq_pendingWorkReqBuf_itemCnt_DATA_C),
						      .DATA_F(sq_pendingWorkReqBuf_itemCnt_DATA_F),
						      .ADDA(sq_pendingWorkReqBuf_itemCnt_ADDA),
						      .ADDB(sq_pendingWorkReqBuf_itemCnt_ADDB),
						      .SETC(sq_pendingWorkReqBuf_itemCnt_SETC),
						      .SETF(sq_pendingWorkReqBuf_itemCnt_SETF),
						      .Q_OUT(sq_pendingWorkReqBuf_itemCnt_Q_OUT));

  // submodule sq_pendingWorkReqBuf_scanCnt
  Counter #(.width(32'd3),
	    .init(3'd0)) sq_pendingWorkReqBuf_scanCnt(.CLK(CLK),
						      .RST(RST_N),
						      .DATA_A(sq_pendingWorkReqBuf_scanCnt_DATA_A),
						      .DATA_B(sq_pendingWorkReqBuf_scanCnt_DATA_B),
						      .DATA_C(sq_pendingWorkReqBuf_scanCnt_DATA_C),
						      .DATA_F(sq_pendingWorkReqBuf_scanCnt_DATA_F),
						      .ADDA(sq_pendingWorkReqBuf_scanCnt_ADDA),
						      .ADDB(sq_pendingWorkReqBuf_scanCnt_ADDB),
						      .SETC(sq_pendingWorkReqBuf_scanCnt_SETC),
						      .SETF(sq_pendingWorkReqBuf_scanCnt_SETF),
						      .Q_OUT(sq_pendingWorkReqBuf_scanCnt_Q_OUT));

  // submodule sq_pendingWorkReqBuf_scanOutQ
  FIFO2 #(.width(32'd679),
	  .guarded(1'd1)) sq_pendingWorkReqBuf_scanOutQ(.RST(RST_N),
							.CLK(CLK),
							.D_IN(sq_pendingWorkReqBuf_scanOutQ_D_IN),
							.ENQ(sq_pendingWorkReqBuf_scanOutQ_ENQ),
							.DEQ(sq_pendingWorkReqBuf_scanOutQ_DEQ),
							.CLR(sq_pendingWorkReqBuf_scanOutQ_CLR),
							.D_OUT(sq_pendingWorkReqBuf_scanOutQ_D_OUT),
							.FULL_N(sq_pendingWorkReqBuf_scanOutQ_FULL_N),
							.EMPTY_N(sq_pendingWorkReqBuf_scanOutQ_EMPTY_N));

  // submodule sq_pendingWorkReqPipeOut_pipeMuxOutQ
  FIFO2 #(.width(32'd679),
	  .guarded(1'd1)) sq_pendingWorkReqPipeOut_pipeMuxOutQ(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_IN),
							       .ENQ(sq_pendingWorkReqPipeOut_pipeMuxOutQ_ENQ),
							       .DEQ(sq_pendingWorkReqPipeOut_pipeMuxOutQ_DEQ),
							       .CLR(sq_pendingWorkReqPipeOut_pipeMuxOutQ_CLR),
							       .D_OUT(sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT),
							       .FULL_N(sq_pendingWorkReqPipeOut_pipeMuxOutQ_FULL_N),
							       .EMPTY_N(sq_pendingWorkReqPipeOut_pipeMuxOutQ_EMPTY_N));

  // submodule sq_reqGenSQ_pendingReqHeaderQ
  FIFO2 #(.width(32'd1229),
	  .guarded(1'd1)) sq_reqGenSQ_pendingReqHeaderQ(.RST(RST_N),
							.CLK(CLK),
							.D_IN(sq_reqGenSQ_pendingReqHeaderQ_D_IN),
							.ENQ(sq_reqGenSQ_pendingReqHeaderQ_ENQ),
							.DEQ(sq_reqGenSQ_pendingReqHeaderQ_DEQ),
							.CLR(sq_reqGenSQ_pendingReqHeaderQ_CLR),
							.D_OUT(sq_reqGenSQ_pendingReqHeaderQ_D_OUT),
							.FULL_N(sq_reqGenSQ_pendingReqHeaderQ_FULL_N),
							.EMPTY_N(sq_reqGenSQ_pendingReqHeaderQ_EMPTY_N));

  // submodule sq_reqGenSQ_pendingWorkReqOutQ
  FIFO2 #(.width(32'd679),
	  .guarded(1'd1)) sq_reqGenSQ_pendingWorkReqOutQ(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(sq_reqGenSQ_pendingWorkReqOutQ_D_IN),
							 .ENQ(sq_reqGenSQ_pendingWorkReqOutQ_ENQ),
							 .DEQ(sq_reqGenSQ_pendingWorkReqOutQ_DEQ),
							 .CLR(sq_reqGenSQ_pendingWorkReqOutQ_CLR),
							 .D_OUT(sq_reqGenSQ_pendingWorkReqOutQ_D_OUT),
							 .FULL_N(sq_reqGenSQ_pendingWorkReqOutQ_FULL_N),
							 .EMPTY_N(sq_reqGenSQ_pendingWorkReqOutQ_EMPTY_N));

  // submodule sq_reqGenSQ_psnReqOutQ
  FIFO2 #(.width(32'd24), .guarded(1'd1)) sq_reqGenSQ_psnReqOutQ(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(sq_reqGenSQ_psnReqOutQ_D_IN),
								 .ENQ(sq_reqGenSQ_psnReqOutQ_ENQ),
								 .DEQ(sq_reqGenSQ_psnReqOutQ_DEQ),
								 .CLR(sq_reqGenSQ_psnReqOutQ_CLR),
								 .D_OUT(),
								 .FULL_N(sq_reqGenSQ_psnReqOutQ_FULL_N),
								 .EMPTY_N(sq_reqGenSQ_psnReqOutQ_EMPTY_N));

  // submodule sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ
  FIFO2 #(.width(32'd290),
	  .guarded(1'd1)) sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ(.RST(RST_N),
													     .CLK(CLK),
													     .D_IN(sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_IN),
													     .ENQ(sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_ENQ),
													     .DEQ(sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_DEQ),
													     .CLR(sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_CLR),
													     .D_OUT(sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT),
													     .FULL_N(sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_FULL_N),
													     .EMPTY_N(sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_EMPTY_N));

  // submodule sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ
  FIFO2 #(.width(32'd17),
	  .guarded(1'd1)) sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ(.RST(RST_N),
													   .CLK(CLK),
													   .D_IN(sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_IN),
													   .ENQ(sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_ENQ),
													   .DEQ(sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_DEQ),
													   .CLR(sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_CLR),
													   .D_OUT(sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT),
													   .FULL_N(sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_FULL_N),
													   .EMPTY_N(sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_EMPTY_N));

  // submodule sq_reqGenSQ_rdmaReqPipeOut_outputQ
  FIFO2 #(.width(32'd290),
	  .guarded(1'd1)) sq_reqGenSQ_rdmaReqPipeOut_outputQ(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(sq_reqGenSQ_rdmaReqPipeOut_outputQ_D_IN),
							     .ENQ(sq_reqGenSQ_rdmaReqPipeOut_outputQ_ENQ),
							     .DEQ(sq_reqGenSQ_rdmaReqPipeOut_outputQ_DEQ),
							     .CLR(sq_reqGenSQ_rdmaReqPipeOut_outputQ_CLR),
							     .D_OUT(sq_reqGenSQ_rdmaReqPipeOut_outputQ_D_OUT),
							     .FULL_N(sq_reqGenSQ_rdmaReqPipeOut_outputQ_FULL_N),
							     .EMPTY_N(sq_reqGenSQ_rdmaReqPipeOut_outputQ_EMPTY_N));

  // submodule sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ
  FIFO2 #(.width(32'd290),
	  .guarded(1'd1)) sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ(.RST(RST_N),
											  .CLK(CLK),
											  .D_IN(sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_D_IN),
											  .ENQ(sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_ENQ),
											  .DEQ(sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_DEQ),
											  .CLR(sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_CLR),
											  .D_OUT(sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_D_OUT),
											  .FULL_N(sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_FULL_N),
											  .EMPTY_N(sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_EMPTY_N));

  // submodule sq_reqGenSQ_reqCountQ
  FIFO2 #(.width(32'd684), .guarded(1'd1)) sq_reqGenSQ_reqCountQ(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(sq_reqGenSQ_reqCountQ_D_IN),
								 .ENQ(sq_reqGenSQ_reqCountQ_ENQ),
								 .DEQ(sq_reqGenSQ_reqCountQ_DEQ),
								 .CLR(sq_reqGenSQ_reqCountQ_CLR),
								 .D_OUT(sq_reqGenSQ_reqCountQ_D_OUT),
								 .FULL_N(sq_reqGenSQ_reqCountQ_FULL_N),
								 .EMPTY_N(sq_reqGenSQ_reqCountQ_EMPTY_N));

  // submodule sq_reqGenSQ_reqHeaderGenQ
  FIFO2 #(.width(32'd1300),
	  .guarded(1'd1)) sq_reqGenSQ_reqHeaderGenQ(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(sq_reqGenSQ_reqHeaderGenQ_D_IN),
						    .ENQ(sq_reqGenSQ_reqHeaderGenQ_ENQ),
						    .DEQ(sq_reqGenSQ_reqHeaderGenQ_DEQ),
						    .CLR(sq_reqGenSQ_reqHeaderGenQ_CLR),
						    .D_OUT(sq_reqGenSQ_reqHeaderGenQ_D_OUT),
						    .FULL_N(sq_reqGenSQ_reqHeaderGenQ_FULL_N),
						    .EMPTY_N(sq_reqGenSQ_reqHeaderGenQ_EMPTY_N));

  // submodule sq_reqGenSQ_reqHeaderOutQ
  FIFO2 #(.width(32'd593),
	  .guarded(1'd1)) sq_reqGenSQ_reqHeaderOutQ(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(sq_reqGenSQ_reqHeaderOutQ_D_IN),
						    .ENQ(sq_reqGenSQ_reqHeaderOutQ_ENQ),
						    .DEQ(sq_reqGenSQ_reqHeaderOutQ_DEQ),
						    .CLR(sq_reqGenSQ_reqHeaderOutQ_CLR),
						    .D_OUT(sq_reqGenSQ_reqHeaderOutQ_D_OUT),
						    .FULL_N(sq_reqGenSQ_reqHeaderOutQ_FULL_N),
						    .EMPTY_N(sq_reqGenSQ_reqHeaderOutQ_EMPTY_N));

  // submodule sq_reqGenSQ_reqHeaderPrepareQ
  FIFO2 #(.width(32'd710),
	  .guarded(1'd1)) sq_reqGenSQ_reqHeaderPrepareQ(.RST(RST_N),
							.CLK(CLK),
							.D_IN(sq_reqGenSQ_reqHeaderPrepareQ_D_IN),
							.ENQ(sq_reqGenSQ_reqHeaderPrepareQ_ENQ),
							.DEQ(sq_reqGenSQ_reqHeaderPrepareQ_DEQ),
							.CLR(sq_reqGenSQ_reqHeaderPrepareQ_CLR),
							.D_OUT(sq_reqGenSQ_reqHeaderPrepareQ_D_OUT),
							.FULL_N(sq_reqGenSQ_reqHeaderPrepareQ_FULL_N),
							.EMPTY_N(sq_reqGenSQ_reqHeaderPrepareQ_EMPTY_N));

  // submodule sq_reqGenSQ_workCompGenReqOutQ
  FIFO2 #(.width(32'd633),
	  .guarded(1'd1)) sq_reqGenSQ_workCompGenReqOutQ(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(sq_reqGenSQ_workCompGenReqOutQ_D_IN),
							 .ENQ(sq_reqGenSQ_workCompGenReqOutQ_ENQ),
							 .DEQ(sq_reqGenSQ_workCompGenReqOutQ_DEQ),
							 .CLR(sq_reqGenSQ_workCompGenReqOutQ_CLR),
							 .D_OUT(sq_reqGenSQ_workCompGenReqOutQ_D_OUT),
							 .FULL_N(sq_reqGenSQ_workCompGenReqOutQ_FULL_N),
							 .EMPTY_N(sq_reqGenSQ_workCompGenReqOutQ_EMPTY_N));

  // submodule sq_reqGenSQ_workReqCheckQ
  FIFO2 #(.width(32'd684),
	  .guarded(1'd1)) sq_reqGenSQ_workReqCheckQ(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(sq_reqGenSQ_workReqCheckQ_D_IN),
						    .ENQ(sq_reqGenSQ_workReqCheckQ_ENQ),
						    .DEQ(sq_reqGenSQ_workReqCheckQ_DEQ),
						    .CLR(sq_reqGenSQ_workReqCheckQ_CLR),
						    .D_OUT(sq_reqGenSQ_workReqCheckQ_D_OUT),
						    .FULL_N(sq_reqGenSQ_workReqCheckQ_FULL_N),
						    .EMPTY_N(sq_reqGenSQ_workReqCheckQ_EMPTY_N));

  // submodule sq_reqGenSQ_workReqOutQ
  FIFO2 #(.width(32'd684),
	  .guarded(1'd1)) sq_reqGenSQ_workReqOutQ(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(sq_reqGenSQ_workReqOutQ_D_IN),
						  .ENQ(sq_reqGenSQ_workReqOutQ_ENQ),
						  .DEQ(sq_reqGenSQ_workReqOutQ_DEQ),
						  .CLR(sq_reqGenSQ_workReqOutQ_CLR),
						  .D_OUT(sq_reqGenSQ_workReqOutQ_D_OUT),
						  .FULL_N(sq_reqGenSQ_workReqOutQ_FULL_N),
						  .EMPTY_N(sq_reqGenSQ_workReqOutQ_EMPTY_N));

  // submodule sq_reqGenSQ_workReqPayloadGenQ
  FIFO2 #(.width(32'd720),
	  .guarded(1'd1)) sq_reqGenSQ_workReqPayloadGenQ(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(sq_reqGenSQ_workReqPayloadGenQ_D_IN),
							 .ENQ(sq_reqGenSQ_workReqPayloadGenQ_ENQ),
							 .DEQ(sq_reqGenSQ_workReqPayloadGenQ_DEQ),
							 .CLR(sq_reqGenSQ_workReqPayloadGenQ_CLR),
							 .D_OUT(sq_reqGenSQ_workReqPayloadGenQ_D_OUT),
							 .FULL_N(sq_reqGenSQ_workReqPayloadGenQ_FULL_N),
							 .EMPTY_N(sq_reqGenSQ_workReqPayloadGenQ_EMPTY_N));

  // submodule sq_reqGenSQ_workReqPktNumQ
  FIFO2 #(.width(32'd709),
	  .guarded(1'd1)) sq_reqGenSQ_workReqPktNumQ(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(sq_reqGenSQ_workReqPktNumQ_D_IN),
						     .ENQ(sq_reqGenSQ_workReqPktNumQ_ENQ),
						     .DEQ(sq_reqGenSQ_workReqPktNumQ_DEQ),
						     .CLR(sq_reqGenSQ_workReqPktNumQ_CLR),
						     .D_OUT(sq_reqGenSQ_workReqPktNumQ_D_OUT),
						     .FULL_N(sq_reqGenSQ_workReqPktNumQ_FULL_N),
						     .EMPTY_N(sq_reqGenSQ_workReqPktNumQ_EMPTY_N));

  // submodule sq_reqGenSQ_workReqPsnQ
  FIFO2 #(.width(32'd684),
	  .guarded(1'd1)) sq_reqGenSQ_workReqPsnQ(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(sq_reqGenSQ_workReqPsnQ_D_IN),
						  .ENQ(sq_reqGenSQ_workReqPsnQ_ENQ),
						  .DEQ(sq_reqGenSQ_workReqPsnQ_DEQ),
						  .CLR(sq_reqGenSQ_workReqPsnQ_CLR),
						  .D_OUT(sq_reqGenSQ_workReqPsnQ_D_OUT),
						  .FULL_N(sq_reqGenSQ_workReqPsnQ_FULL_N),
						  .EMPTY_N(sq_reqGenSQ_workReqPsnQ_EMPTY_N));

  // submodule sq_respHandleSQ_incomingRespQ
  FIFO2 #(.width(32'd1470),
	  .guarded(1'd1)) sq_respHandleSQ_incomingRespQ(.RST(RST_N),
							.CLK(CLK),
							.D_IN(sq_respHandleSQ_incomingRespQ_D_IN),
							.ENQ(sq_respHandleSQ_incomingRespQ_ENQ),
							.DEQ(sq_respHandleSQ_incomingRespQ_DEQ),
							.CLR(sq_respHandleSQ_incomingRespQ_CLR),
							.D_OUT(sq_respHandleSQ_incomingRespQ_D_OUT),
							.FULL_N(sq_respHandleSQ_incomingRespQ_FULL_N),
							.EMPTY_N(sq_respHandleSQ_incomingRespQ_EMPTY_N));

  // submodule sq_respHandleSQ_pendingAddrCalcQ
  FIFO2 #(.width(32'd1475),
	  .guarded(1'd1)) sq_respHandleSQ_pendingAddrCalcQ(.RST(RST_N),
							   .CLK(CLK),
							   .D_IN(sq_respHandleSQ_pendingAddrCalcQ_D_IN),
							   .ENQ(sq_respHandleSQ_pendingAddrCalcQ_ENQ),
							   .DEQ(sq_respHandleSQ_pendingAddrCalcQ_DEQ),
							   .CLR(sq_respHandleSQ_pendingAddrCalcQ_CLR),
							   .D_OUT(sq_respHandleSQ_pendingAddrCalcQ_D_OUT),
							   .FULL_N(sq_respHandleSQ_pendingAddrCalcQ_FULL_N),
							   .EMPTY_N(sq_respHandleSQ_pendingAddrCalcQ_EMPTY_N));

  // submodule sq_respHandleSQ_pendingDmaReqQ
  FIFO2 #(.width(32'd1539),
	  .guarded(1'd1)) sq_respHandleSQ_pendingDmaReqQ(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(sq_respHandleSQ_pendingDmaReqQ_D_IN),
							 .ENQ(sq_respHandleSQ_pendingDmaReqQ_ENQ),
							 .DEQ(sq_respHandleSQ_pendingDmaReqQ_DEQ),
							 .CLR(sq_respHandleSQ_pendingDmaReqQ_CLR),
							 .D_OUT(sq_respHandleSQ_pendingDmaReqQ_D_OUT),
							 .FULL_N(sq_respHandleSQ_pendingDmaReqQ_FULL_N),
							 .EMPTY_N(sq_respHandleSQ_pendingDmaReqQ_EMPTY_N));

  // submodule sq_respHandleSQ_pendingLenCalcQ
  FIFO2 #(.width(32'd1539),
	  .guarded(1'd1)) sq_respHandleSQ_pendingLenCalcQ(.RST(RST_N),
							  .CLK(CLK),
							  .D_IN(sq_respHandleSQ_pendingLenCalcQ_D_IN),
							  .ENQ(sq_respHandleSQ_pendingLenCalcQ_ENQ),
							  .DEQ(sq_respHandleSQ_pendingLenCalcQ_DEQ),
							  .CLR(sq_respHandleSQ_pendingLenCalcQ_CLR),
							  .D_OUT(sq_respHandleSQ_pendingLenCalcQ_D_OUT),
							  .FULL_N(sq_respHandleSQ_pendingLenCalcQ_FULL_N),
							  .EMPTY_N(sq_respHandleSQ_pendingLenCalcQ_EMPTY_N));

  // submodule sq_respHandleSQ_pendingLenCheckQ
  FIFO2 #(.width(32'd1573),
	  .guarded(1'd1)) sq_respHandleSQ_pendingLenCheckQ(.RST(RST_N),
							   .CLK(CLK),
							   .D_IN(sq_respHandleSQ_pendingLenCheckQ_D_IN),
							   .ENQ(sq_respHandleSQ_pendingLenCheckQ_ENQ),
							   .DEQ(sq_respHandleSQ_pendingLenCheckQ_DEQ),
							   .CLR(sq_respHandleSQ_pendingLenCheckQ_CLR),
							   .D_OUT(sq_respHandleSQ_pendingLenCheckQ_D_OUT),
							   .FULL_N(sq_respHandleSQ_pendingLenCheckQ_FULL_N),
							   .EMPTY_N(sq_respHandleSQ_pendingLenCheckQ_EMPTY_N));

  // submodule sq_respHandleSQ_pendingPermCheckQ
  FIFO2 #(.width(32'd1476),
	  .guarded(1'd1)) sq_respHandleSQ_pendingPermCheckQ(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(sq_respHandleSQ_pendingPermCheckQ_D_IN),
							    .ENQ(sq_respHandleSQ_pendingPermCheckQ_ENQ),
							    .DEQ(sq_respHandleSQ_pendingPermCheckQ_DEQ),
							    .CLR(sq_respHandleSQ_pendingPermCheckQ_CLR),
							    .D_OUT(sq_respHandleSQ_pendingPermCheckQ_D_OUT),
							    .FULL_N(sq_respHandleSQ_pendingPermCheckQ_FULL_N),
							    .EMPTY_N(sq_respHandleSQ_pendingPermCheckQ_EMPTY_N));

  // submodule sq_respHandleSQ_pendingPermQueryQ
  FIFO2 #(.width(32'd1469),
	  .guarded(1'd1)) sq_respHandleSQ_pendingPermQueryQ(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(sq_respHandleSQ_pendingPermQueryQ_D_IN),
							    .ENQ(sq_respHandleSQ_pendingPermQueryQ_ENQ),
							    .DEQ(sq_respHandleSQ_pendingPermQueryQ_DEQ),
							    .CLR(sq_respHandleSQ_pendingPermQueryQ_CLR),
							    .D_OUT(sq_respHandleSQ_pendingPermQueryQ_D_OUT),
							    .FULL_N(sq_respHandleSQ_pendingPermQueryQ_FULL_N),
							    .EMPTY_N(sq_respHandleSQ_pendingPermQueryQ_EMPTY_N));

  // submodule sq_respHandleSQ_pendingRespQ
  FIFO2 #(.width(32'd1473),
	  .guarded(1'd1)) sq_respHandleSQ_pendingRespQ(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(sq_respHandleSQ_pendingRespQ_D_IN),
						       .ENQ(sq_respHandleSQ_pendingRespQ_ENQ),
						       .DEQ(sq_respHandleSQ_pendingRespQ_DEQ),
						       .CLR(sq_respHandleSQ_pendingRespQ_CLR),
						       .D_OUT(sq_respHandleSQ_pendingRespQ_D_OUT),
						       .FULL_N(sq_respHandleSQ_pendingRespQ_FULL_N),
						       .EMPTY_N(sq_respHandleSQ_pendingRespQ_EMPTY_N));

  // submodule sq_respHandleSQ_pendingRetryCheckQ
  FIFO2 #(.width(32'd1470),
	  .guarded(1'd1)) sq_respHandleSQ_pendingRetryCheckQ(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(sq_respHandleSQ_pendingRetryCheckQ_D_IN),
							     .ENQ(sq_respHandleSQ_pendingRetryCheckQ_ENQ),
							     .DEQ(sq_respHandleSQ_pendingRetryCheckQ_DEQ),
							     .CLR(sq_respHandleSQ_pendingRetryCheckQ_CLR),
							     .D_OUT(sq_respHandleSQ_pendingRetryCheckQ_D_OUT),
							     .FULL_N(sq_respHandleSQ_pendingRetryCheckQ_FULL_N),
							     .EMPTY_N(sq_respHandleSQ_pendingRetryCheckQ_EMPTY_N));

  // submodule sq_respHandleSQ_pendingSpaceCalcQ
  FIFO2 #(.width(32'd1605),
	  .guarded(1'd1)) sq_respHandleSQ_pendingSpaceCalcQ(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(sq_respHandleSQ_pendingSpaceCalcQ_D_IN),
							    .ENQ(sq_respHandleSQ_pendingSpaceCalcQ_ENQ),
							    .DEQ(sq_respHandleSQ_pendingSpaceCalcQ_DEQ),
							    .CLR(sq_respHandleSQ_pendingSpaceCalcQ_CLR),
							    .D_OUT(sq_respHandleSQ_pendingSpaceCalcQ_D_OUT),
							    .FULL_N(sq_respHandleSQ_pendingSpaceCalcQ_FULL_N),
							    .EMPTY_N(sq_respHandleSQ_pendingSpaceCalcQ_EMPTY_N));

  // submodule sq_respHandleSQ_pendingWorkCompQ
  FIFO2 #(.width(32'd768),
	  .guarded(1'd1)) sq_respHandleSQ_pendingWorkCompQ(.RST(RST_N),
							   .CLK(CLK),
							   .D_IN(sq_respHandleSQ_pendingWorkCompQ_D_IN),
							   .ENQ(sq_respHandleSQ_pendingWorkCompQ_ENQ),
							   .DEQ(sq_respHandleSQ_pendingWorkCompQ_DEQ),
							   .CLR(sq_respHandleSQ_pendingWorkCompQ_CLR),
							   .D_OUT(sq_respHandleSQ_pendingWorkCompQ_D_OUT),
							   .FULL_N(sq_respHandleSQ_pendingWorkCompQ_FULL_N),
							   .EMPTY_N(sq_respHandleSQ_pendingWorkCompQ_EMPTY_N));

  // submodule sq_respHandleSQ_workCompGenReqOutQ
  FIFO2 #(.width(32'd633),
	  .guarded(1'd1)) sq_respHandleSQ_workCompGenReqOutQ(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(sq_respHandleSQ_workCompGenReqOutQ_D_IN),
							     .ENQ(sq_respHandleSQ_workCompGenReqOutQ_ENQ),
							     .DEQ(sq_respHandleSQ_workCompGenReqOutQ_DEQ),
							     .CLR(sq_respHandleSQ_workCompGenReqOutQ_CLR),
							     .D_OUT(sq_respHandleSQ_workCompGenReqOutQ_D_OUT),
							     .FULL_N(sq_respHandleSQ_workCompGenReqOutQ_FULL_N),
							     .EMPTY_N(sq_respHandleSQ_workCompGenReqOutQ_EMPTY_N));

  // submodule sq_retryHandler_prepareRetryRespQ
  FIFO2 #(.width(32'd4),
	  .guarded(1'd1)) sq_retryHandler_prepareRetryRespQ(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(sq_retryHandler_prepareRetryRespQ_D_IN),
							    .ENQ(sq_retryHandler_prepareRetryRespQ_ENQ),
							    .DEQ(sq_retryHandler_prepareRetryRespQ_DEQ),
							    .CLR(sq_retryHandler_prepareRetryRespQ_CLR),
							    .D_OUT(sq_retryHandler_prepareRetryRespQ_D_OUT),
							    .FULL_N(sq_retryHandler_prepareRetryRespQ_FULL_N),
							    .EMPTY_N(sq_retryHandler_prepareRetryRespQ_EMPTY_N));

  // submodule sq_retryHandler_resetReqQ
  FIFO2 #(.width(32'd1),
	  .guarded(1'd1)) sq_retryHandler_resetReqQ(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(sq_retryHandler_resetReqQ_D_IN),
						    .ENQ(sq_retryHandler_resetReqQ_ENQ),
						    .DEQ(sq_retryHandler_resetReqQ_DEQ),
						    .CLR(sq_retryHandler_resetReqQ_CLR),
						    .D_OUT(sq_retryHandler_resetReqQ_D_OUT),
						    .FULL_N(sq_retryHandler_resetReqQ_FULL_N),
						    .EMPTY_N(sq_retryHandler_resetReqQ_EMPTY_N));

  // submodule sq_retryHandler_resetRetryCntQ
  FIFO2 #(.width(32'd1),
	  .guarded(1'd1)) sq_retryHandler_resetRetryCntQ(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(sq_retryHandler_resetRetryCntQ_D_IN),
							 .ENQ(sq_retryHandler_resetRetryCntQ_ENQ),
							 .DEQ(sq_retryHandler_resetRetryCntQ_DEQ),
							 .CLR(sq_retryHandler_resetRetryCntQ_CLR),
							 .D_OUT(),
							 .FULL_N(sq_retryHandler_resetRetryCntQ_FULL_N),
							 .EMPTY_N(sq_retryHandler_resetRetryCntQ_EMPTY_N));

  // submodule sq_retryHandler_resetTimeOutQ
  FIFO2 #(.width(32'd1),
	  .guarded(1'd1)) sq_retryHandler_resetTimeOutQ(.RST(RST_N),
							.CLK(CLK),
							.D_IN(sq_retryHandler_resetTimeOutQ_D_IN),
							.ENQ(sq_retryHandler_resetTimeOutQ_ENQ),
							.DEQ(sq_retryHandler_resetTimeOutQ_DEQ),
							.CLR(sq_retryHandler_resetTimeOutQ_CLR),
							.D_OUT(),
							.FULL_N(sq_retryHandler_resetTimeOutQ_FULL_N),
							.EMPTY_N(sq_retryHandler_resetTimeOutQ_EMPTY_N));

  // submodule sq_retryHandler_retryActionQ
  FIFO2 #(.width(32'd98),
	  .guarded(1'd1)) sq_retryHandler_retryActionQ(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(sq_retryHandler_retryActionQ_D_IN),
						       .ENQ(sq_retryHandler_retryActionQ_ENQ),
						       .DEQ(sq_retryHandler_retryActionQ_DEQ),
						       .CLR(sq_retryHandler_retryActionQ_CLR),
						       .D_OUT(sq_retryHandler_retryActionQ_D_OUT),
						       .FULL_N(sq_retryHandler_retryActionQ_FULL_N),
						       .EMPTY_N(sq_retryHandler_retryActionQ_EMPTY_N));

  // submodule sq_retryHandler_retryNotificationQ
  FIFO2 #(.width(32'd98),
	  .guarded(1'd1)) sq_retryHandler_retryNotificationQ(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(sq_retryHandler_retryNotificationQ_D_IN),
							     .ENQ(sq_retryHandler_retryNotificationQ_ENQ),
							     .DEQ(sq_retryHandler_retryNotificationQ_DEQ),
							     .CLR(sq_retryHandler_retryNotificationQ_CLR),
							     .D_OUT(sq_retryHandler_retryNotificationQ_D_OUT),
							     .FULL_N(sq_retryHandler_retryNotificationQ_FULL_N),
							     .EMPTY_N(sq_retryHandler_retryNotificationQ_EMPTY_N));

  // submodule sq_retryHandler_retryReqQ
  FIFO2 #(.width(32'd97),
	  .guarded(1'd1)) sq_retryHandler_retryReqQ(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(sq_retryHandler_retryReqQ_D_IN),
						    .ENQ(sq_retryHandler_retryReqQ_ENQ),
						    .DEQ(sq_retryHandler_retryReqQ_DEQ),
						    .CLR(sq_retryHandler_retryReqQ_CLR),
						    .D_OUT(sq_retryHandler_retryReqQ_D_OUT),
						    .FULL_N(sq_retryHandler_retryReqQ_FULL_N),
						    .EMPTY_N(sq_retryHandler_retryReqQ_EMPTY_N));

  // submodule sq_retryHandler_retryRespQ
  FIFO2 #(.width(32'd1),
	  .guarded(1'd1)) sq_retryHandler_retryRespQ(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(sq_retryHandler_retryRespQ_D_IN),
						     .ENQ(sq_retryHandler_retryRespQ_ENQ),
						     .DEQ(sq_retryHandler_retryRespQ_DEQ),
						     .CLR(sq_retryHandler_retryRespQ_CLR),
						     .D_OUT(sq_retryHandler_retryRespQ_D_OUT),
						     .FULL_N(sq_retryHandler_retryRespQ_FULL_N),
						     .EMPTY_N(sq_retryHandler_retryRespQ_EMPTY_N));

  // submodule sq_retryHandler_timeOutNotificationQ
  FIFO2 #(.width(32'd1),
	  .guarded(1'd1)) sq_retryHandler_timeOutNotificationQ(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(sq_retryHandler_timeOutNotificationQ_D_IN),
							       .ENQ(sq_retryHandler_timeOutNotificationQ_ENQ),
							       .DEQ(sq_retryHandler_timeOutNotificationQ_DEQ),
							       .CLR(sq_retryHandler_timeOutNotificationQ_CLR),
							       .D_OUT(sq_retryHandler_timeOutNotificationQ_D_OUT),
							       .FULL_N(sq_retryHandler_timeOutNotificationQ_FULL_N),
							       .EMPTY_N(sq_retryHandler_timeOutNotificationQ_EMPTY_N));

  // submodule sq_retryHandler_timeOutTriggerQ
  FIFO2 #(.width(32'd1),
	  .guarded(1'd1)) sq_retryHandler_timeOutTriggerQ(.RST(RST_N),
							  .CLK(CLK),
							  .D_IN(sq_retryHandler_timeOutTriggerQ_D_IN),
							  .ENQ(sq_retryHandler_timeOutTriggerQ_ENQ),
							  .DEQ(sq_retryHandler_timeOutTriggerQ_DEQ),
							  .CLR(sq_retryHandler_timeOutTriggerQ_CLR),
							  .D_OUT(),
							  .FULL_N(sq_retryHandler_timeOutTriggerQ_FULL_N),
							  .EMPTY_N(sq_retryHandler_timeOutTriggerQ_EMPTY_N));

  // submodule sq_retryHandler_updateRetryCntQ
  FIFO2 #(.width(32'd4),
	  .guarded(1'd1)) sq_retryHandler_updateRetryCntQ(.RST(RST_N),
							  .CLK(CLK),
							  .D_IN(sq_retryHandler_updateRetryCntQ_D_IN),
							  .ENQ(sq_retryHandler_updateRetryCntQ_ENQ),
							  .DEQ(sq_retryHandler_updateRetryCntQ_DEQ),
							  .CLR(sq_retryHandler_updateRetryCntQ_CLR),
							  .D_OUT(sq_retryHandler_updateRetryCntQ_D_OUT),
							  .FULL_N(sq_retryHandler_updateRetryCntQ_FULL_N),
							  .EMPTY_N(sq_retryHandler_updateRetryCntQ_EMPTY_N));

  // submodule sq_workCompGenSQ_dmaWaitingQ
  FIFO2 #(.width(32'd857),
	  .guarded(1'd1)) sq_workCompGenSQ_dmaWaitingQ(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(sq_workCompGenSQ_dmaWaitingQ_D_IN),
						       .ENQ(sq_workCompGenSQ_dmaWaitingQ_ENQ),
						       .DEQ(sq_workCompGenSQ_dmaWaitingQ_DEQ),
						       .CLR(sq_workCompGenSQ_dmaWaitingQ_CLR),
						       .D_OUT(sq_workCompGenSQ_dmaWaitingQ_D_OUT),
						       .FULL_N(sq_workCompGenSQ_dmaWaitingQ_FULL_N),
						       .EMPTY_N(sq_workCompGenSQ_dmaWaitingQ_EMPTY_N));

  // submodule sq_workCompGenSQ_genWorkCompQ
  FIFO2 #(.width(32'd857),
	  .guarded(1'd1)) sq_workCompGenSQ_genWorkCompQ(.RST(RST_N),
							.CLK(CLK),
							.D_IN(sq_workCompGenSQ_genWorkCompQ_D_IN),
							.ENQ(sq_workCompGenSQ_genWorkCompQ_ENQ),
							.DEQ(sq_workCompGenSQ_genWorkCompQ_DEQ),
							.CLR(sq_workCompGenSQ_genWorkCompQ_CLR),
							.D_OUT(sq_workCompGenSQ_genWorkCompQ_D_OUT),
							.FULL_N(sq_workCompGenSQ_genWorkCompQ_FULL_N),
							.EMPTY_N(sq_workCompGenSQ_genWorkCompQ_EMPTY_N));

  // submodule sq_workCompGenSQ_pendingWorkCompQ4SQ
  SizedFIFO #(.p1width(32'd633),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) sq_workCompGenSQ_pendingWorkCompQ4SQ(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(sq_workCompGenSQ_pendingWorkCompQ4SQ_D_IN),
								   .ENQ(sq_workCompGenSQ_pendingWorkCompQ4SQ_ENQ),
								   .DEQ(sq_workCompGenSQ_pendingWorkCompQ4SQ_DEQ),
								   .CLR(sq_workCompGenSQ_pendingWorkCompQ4SQ_CLR),
								   .D_OUT(sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT),
								   .FULL_N(sq_workCompGenSQ_pendingWorkCompQ4SQ_FULL_N),
								   .EMPTY_N(sq_workCompGenSQ_pendingWorkCompQ4SQ_EMPTY_N));

  // submodule sq_workCompGenSQ_workCompOutQ4SQ
  SizedFIFO #(.p1width(32'd222),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) sq_workCompGenSQ_workCompOutQ4SQ(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(sq_workCompGenSQ_workCompOutQ4SQ_D_IN),
							       .ENQ(sq_workCompGenSQ_workCompOutQ4SQ_ENQ),
							       .DEQ(sq_workCompGenSQ_workCompOutQ4SQ_DEQ),
							       .CLR(sq_workCompGenSQ_workCompOutQ4SQ_CLR),
							       .D_OUT(sq_workCompGenSQ_workCompOutQ4SQ_D_OUT),
							       .FULL_N(sq_workCompGenSQ_workCompOutQ4SQ_FULL_N),
							       .EMPTY_N(sq_workCompGenSQ_workCompOutQ4SQ_EMPTY_N));

  // submodule workReqQ
  FIFO2 #(.width(32'd601), .guarded(1'd1)) workReqQ(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(workReqQ_D_IN),
						    .ENQ(workReqQ_ENQ),
						    .DEQ(workReqQ_DEQ),
						    .CLR(workReqQ_CLR),
						    .D_OUT(workReqQ_D_OUT),
						    .FULL_N(workReqQ_FULL_N),
						    .EMPTY_N(workReqQ_EMPTY_N));

  // rule RL_errTrigger
  assign CAN_FIRE_RL_errTrigger =
	     (cntrl_stateReg == 4'd2 || cntrl_stateReg == 4'd3 ||
	      cntrl_stateReg == 4'd4) &&
	     sq_workCompGenSQ_workCompGenStateReg == 2'd2 ;
  assign WILL_FIRE_RL_errTrigger = CAN_FIRE_RL_errTrigger ;

  // rule RL_cancelDmaReadSQ
  assign CAN_FIRE_RL_cancelDmaReadSQ =
	     !sqDmaReadCancelReg && cntrl_stateReg == 4'd6 &&
	     (!sq_reqGenSQ_psnReqOutQ_EMPTY_N ||
	      payloadGenerator4SQ_payloadBufQ_rRdPtr_read__7_ETC___d487 ||
	      !payloadGenerator4SQ_bramQ2PipeOut_postBramQ_EMPTY_N) ;
  assign WILL_FIRE_RL_cancelDmaReadSQ = CAN_FIRE_RL_cancelDmaReadSQ ;

  // rule RL_waitGracefulStop
  assign CAN_FIRE_RL_waitGracefulStop =
	     cntrl_stateReg == 4'd6 && !cntrl_errFlushDoneReg &&
	     !workReqQ_EMPTY_N &&
	     sq_pendingWorkReqBuf_emptyReg &&
	     rqDmaReadCancelReg &&
	     rqDmaWriteCancelReg &&
	     sqDmaReadCancelReg &&
	     dmaReadCntrl4SQ_gracefulStopReg ;
  assign WILL_FIRE_RL_waitGracefulStop = CAN_FIRE_RL_waitGracefulStop ;

  // rule RL_cntrl_resetAndClear
  assign CAN_FIRE_RL_cntrl_resetAndClear = cntrl_stateReg == 4'd0 ;
  assign WILL_FIRE_RL_cntrl_resetAndClear = cntrl_stateReg == 4'd0 ;

  // rule RL_cntrl_restore
  assign CAN_FIRE_RL_cntrl_restore =
	     cntrl_restoreQ_EMPTY_N &&
	     (cntrl_stateReg == 4'd2 || cntrl_stateReg == 4'd3 ||
	      cntrl_stateReg == 4'd4) ;
  assign WILL_FIRE_RL_cntrl_restore = CAN_FIRE_RL_cntrl_restore ;

  // rule RL_cntrl_onINIT
  assign CAN_FIRE_RL_cntrl_onINIT =
	     cntrl_reqQ_EMPTY_N && cntrl_respQ_FULL_N &&
	     cntrl_stateReg == 4'd1 ;
  assign WILL_FIRE_RL_cntrl_onINIT = CAN_FIRE_RL_cntrl_onINIT ;

  // rule RL_cntrl_onRTR
  assign CAN_FIRE_RL_cntrl_onRTR =
	     cntrl_reqQ_EMPTY_N && cntrl_respQ_FULL_N &&
	     cntrl_stateReg == 4'd2 ;
  assign WILL_FIRE_RL_cntrl_onRTR = CAN_FIRE_RL_cntrl_onRTR ;

  // rule RL_cntrl_onRTS
  assign CAN_FIRE_RL_cntrl_onRTS =
	     cntrl_reqQ_EMPTY_N && cntrl_respQ_FULL_N &&
	     cntrl_stateReg == 4'd3 ;
  assign WILL_FIRE_RL_cntrl_onRTS = CAN_FIRE_RL_cntrl_onRTS ;

  // rule RL_cntrl_onSQD
  assign CAN_FIRE_RL_cntrl_onSQD =
	     cntrl_reqQ_EMPTY_N && cntrl_respQ_FULL_N &&
	     cntrl_stateReg == 4'd4 ;
  assign WILL_FIRE_RL_cntrl_onSQD = CAN_FIRE_RL_cntrl_onSQD ;

  // rule RL_cntrl_onERR
  assign CAN_FIRE_RL_cntrl_onERR =
	     cntrl_reqQ_EMPTY_N && cntrl_respQ_FULL_N &&
	     cntrl_stateReg == 4'd6 &&
	     cntrl_errFlushDoneReg ;
  assign WILL_FIRE_RL_cntrl_onERR = CAN_FIRE_RL_cntrl_onERR ;

  // rule RL_dmaReadCntrl4SQ_resetAndClear
  assign CAN_FIRE_RL_dmaReadCntrl4SQ_resetAndClear = cntrl_stateReg == 4'd0 ;
  assign WILL_FIRE_RL_dmaReadCntrl4SQ_resetAndClear = cntrl_stateReg == 4'd0 ;

  // rule RL_dmaReadCntrl4SQ_recvReq
  assign CAN_FIRE_RL_dmaReadCntrl4SQ_recvReq =
	     dmaReadCntrl4SQ_reqQ_EMPTY_N &&
	     dmaReadCntrl4SQ_pendingDmaCntrlReqQ_FULL_N &&
	     dmaReadCntrl4SQ_addrChunkSrv_reqQ_FULL_N &&
	     cntrl_stateReg != 4'd0 &&
	     !dmaReadCntrl4SQ_cancelReg_port1__read ;
  assign WILL_FIRE_RL_dmaReadCntrl4SQ_recvReq =
	     CAN_FIRE_RL_dmaReadCntrl4SQ_recvReq ;

  // rule RL_dmaReadCntrl4SQ_issueDmaReq
  assign CAN_FIRE_RL_dmaReadCntrl4SQ_issueDmaReq =
	     dmaReadCntrl4SQ_addrChunkSrv_respQ_EMPTY_N &&
	     dmaReadProxy4SQ_reqQ_FULL_N &&
	     dmaReadCntrl4SQ_pendingDmaCntrlReqQ_EMPTY_N &&
	     dmaReadCntrl4SQ_pendingDmaReadReqQ_FULL_N &&
	     cntrl_stateReg != 4'd0 &&
	     !dmaReadCntrl4SQ_cancelReg_port1__read ;
  assign WILL_FIRE_RL_dmaReadCntrl4SQ_issueDmaReq =
	     CAN_FIRE_RL_dmaReadCntrl4SQ_issueDmaReq ;

  // rule RL_dmaReadCntrl4SQ_setGracefulStop
  assign CAN_FIRE_RL_dmaReadCntrl4SQ_setGracefulStop =
	     dmaReadCntrl4SQ_cancelReg_port1__read &&
	     !dmaReadCntrl4SQ_gracefulStopReg_port1__read &&
	     !dmaReadCntrl4SQ_respQ_EMPTY_N &&
	     !dmaReadCntrl4SQ_pendingDmaReadReqQ_EMPTY_N &&
	     cntrl_stateReg != 4'd0 ;
  assign WILL_FIRE_RL_dmaReadCntrl4SQ_setGracefulStop =
	     CAN_FIRE_RL_dmaReadCntrl4SQ_setGracefulStop ;

  // rule RL_dmaReadCntrl4SQ_recvDmaResp
  assign CAN_FIRE_RL_dmaReadCntrl4SQ_recvDmaResp =
	     dmaReadProxy4SQ_respQ_EMPTY_N && dmaReadCntrl4SQ_respQ_FULL_N &&
	     (!dmaReadProxy4SQ_respQ_D_OUT[1] ||
	      dmaReadCntrl4SQ_pendingDmaReadReqQ_EMPTY_N) &&
	     (!dmaReadProxy4SQ_respQ_D_OUT[0] ||
	      dmaReadCntrl4SQ_pendingDmaReadReqQ_EMPTY_N) &&
	     cntrl_stateReg != 4'd0 ;
  assign WILL_FIRE_RL_dmaReadCntrl4SQ_recvDmaResp =
	     CAN_FIRE_RL_dmaReadCntrl4SQ_recvDmaResp ;

  // rule RL_dmaReadCntrl4SQ_addrChunkSrv_resetAndClear
  assign CAN_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_resetAndClear =
	     cntrl_stateReg == 4'd0 ;
  assign WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_resetAndClear =
	     cntrl_stateReg == 4'd0 ;

  // rule RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq
  assign CAN_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq =
	     dmaReadCntrl4SQ_addrChunkSrv_reqQ_EMPTY_N &&
	     cntrl_stateReg != 4'd0 &&
	     !dmaReadCntrl4SQ_addrChunkSrv_busyReg ;
  assign WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq =
	     CAN_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq ;

  // rule RL_dmaReadCntrl4SQ_addrChunkSrv_genResp
  assign CAN_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_genResp =
	     dmaReadCntrl4SQ_addrChunkSrv_respQ_FULL_N &&
	     cntrl_stateReg != 4'd0 &&
	     dmaReadCntrl4SQ_addrChunkSrv_busyReg ;
  assign WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_genResp =
	     CAN_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_genResp ;

  // rule RL_payloadGenerator4SQ_recvPayloadGenReq
  assign CAN_FIRE_RL_payloadGenerator4SQ_recvPayloadGenReq =
	     payloadGenerator4SQ_payloadGenReqQ_EMPTY_N &&
	     payloadGenerator4SQ_pendingGenReqQ_FULL_N &&
	     dmaReadCntrl4SQ_reqQ_FULL_N &&
	     (cntrl_stateReg == 4'd2 || cntrl_stateReg == 4'd3 ||
	      cntrl_stateReg == 4'd4) &&
	     payloadGenerator4SQ_isNormalStateReg ;
  assign WILL_FIRE_RL_payloadGenerator4SQ_recvPayloadGenReq =
	     CAN_FIRE_RL_payloadGenerator4SQ_recvPayloadGenReq ;

  // rule RL_payloadGenerator4SQ_lastFragAddPadding
  assign CAN_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding =
	     payloadGenerator4SQ_payloadBufQ_rRdPtr + 10'd256 !=
	     payloadGenerator4SQ_payloadBufQ_rWrPtr &&
	     dmaReadCntrl4SQ_respQ_i_notEmpty__42_AND_NOT_d_ETC___d657 &&
	     (cntrl_stateReg == 4'd2 || cntrl_stateReg == 4'd3 ||
	      cntrl_stateReg == 4'd4 ||
	      cntrl_stateReg == 4'd6) ;
  assign WILL_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding =
	     CAN_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding ;

  // rule RL_payloadGenerator4SQ_payloadBufQ_portB_read_data
  assign CAN_FIRE_RL_payloadGenerator4SQ_payloadBufQ_portB_read_data = 1'd1 ;
  assign WILL_FIRE_RL_payloadGenerator4SQ_payloadBufQ_portB_read_data = 1'd1 ;

  // rule RL_payloadGenerator4SQ_bramQ2PipeOut_mkConnectionGetPut
  assign CAN_FIRE_RL_payloadGenerator4SQ_bramQ2PipeOut_mkConnectionGetPut =
	     !payloadGenerator4SQ_payloadBufQ_rRdPtr_read__7_ETC___d487 &&
	     payloadGenerator4SQ_bramQ2PipeOut_postBramQ_FULL_N ;
  assign WILL_FIRE_RL_payloadGenerator4SQ_bramQ2PipeOut_mkConnectionGetPut =
	     CAN_FIRE_RL_payloadGenerator4SQ_bramQ2PipeOut_mkConnectionGetPut ;

  // rule RL_payloadGenerator4SQ_resetAndClear
  assign CAN_FIRE_RL_payloadGenerator4SQ_resetAndClear =
	     cntrl_stateReg == 4'd0 ;
  assign WILL_FIRE_RL_payloadGenerator4SQ_resetAndClear =
	     cntrl_stateReg == 4'd0 ;

  // rule RL_payloadGenerator4SQ_payloadBufQ_portA
  assign CAN_FIRE_RL_payloadGenerator4SQ_payloadBufQ_portA = 1'd1 ;
  assign WILL_FIRE_RL_payloadGenerator4SQ_payloadBufQ_portA = 1'd1 ;

  // rule RL_payloadGenerator4SQ_payloadBufQ_portB
  assign CAN_FIRE_RL_payloadGenerator4SQ_payloadBufQ_portB = 1'd1 ;
  assign WILL_FIRE_RL_payloadGenerator4SQ_payloadBufQ_portB = 1'd1 ;

  // rule RL_sq_resetAndClear
  assign CAN_FIRE_RL_sq_resetAndClear = cntrl_stateReg == 4'd0 ;
  assign WILL_FIRE_RL_sq_resetAndClear = cntrl_stateReg == 4'd0 ;

  // rule RL_sq_retryHandler_handleNotifiedRetryAndTimeOut
  assign CAN_FIRE_RL_sq_retryHandler_handleNotifiedRetryAndTimeOut =
	     (!sq_retryHandler_timeOutTriggerQ_EMPTY_N &&
	      !sq_retryHandler_retryNotificationQ_EMPTY_N ||
	      sq_retryHandler_retryActionQ_FULL_N) &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 ;
  assign WILL_FIRE_RL_sq_retryHandler_handleNotifiedRetryAndTimeOut =
	     CAN_FIRE_RL_sq_retryHandler_handleNotifiedRetryAndTimeOut ;

  // rule RL_sq_retryHandler_recvRetryReq
  assign CAN_FIRE_RL_sq_retryHandler_recvRetryReq =
	     (!sq_retryHandler_retryReqQ_EMPTY_N &&
	      !sq_retryHandler_resetRetryCntQ_EMPTY_N ||
	      sq_retryHandler_retryNotificationQ_FULL_N) &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 ;
  assign WILL_FIRE_RL_sq_retryHandler_recvRetryReq =
	     CAN_FIRE_RL_sq_retryHandler_recvRetryReq ;

  // rule RL_sq_retryHandler_checkTimeOut
  assign CAN_FIRE_RL_sq_retryHandler_checkTimeOut =
	     IF_sq_retryHandler_resetTimeOutQ_notEmpty__176_ETC___d1197 &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 ;
  assign WILL_FIRE_RL_sq_retryHandler_checkTimeOut =
	     CAN_FIRE_RL_sq_retryHandler_checkTimeOut ;

  // rule RL_sq_retryHandler_recvResetReq
  assign CAN_FIRE_RL_sq_retryHandler_recvResetReq =
	     sq_retryHandler_resetReqQ_i_notEmpty__149_AND__ETC___d1155 &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 ;
  assign WILL_FIRE_RL_sq_retryHandler_recvResetReq =
	     CAN_FIRE_RL_sq_retryHandler_recvResetReq ;

  // rule RL_sq_retryHandler_sendRetryResp
  assign CAN_FIRE_RL_sq_retryHandler_sendRetryResp =
	     sq_retryHandler_prepareRetryRespQ_i_notEmpty___ETC___d1411 &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 ;
  assign WILL_FIRE_RL_sq_retryHandler_sendRetryResp =
	     CAN_FIRE_RL_sq_retryHandler_sendRetryResp ;

  // rule RL_sq_retryHandler_waitRetryFinish
  assign CAN_FIRE_RL_sq_retryHandler_waitRetryFinish =
	     cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 &&
	     sq_retryHandler_retryCntrlStateReg == 2'd3 &&
	     sq_retryHandler_retryHandleStateReg == 3'd7 ;
  assign WILL_FIRE_RL_sq_retryHandler_waitRetryFinish =
	     CAN_FIRE_RL_sq_retryHandler_waitRetryFinish ;

  // rule RL_sq_retryHandler_stopScanQ
  assign CAN_FIRE_RL_sq_retryHandler_stopScanQ =
	     sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	     (cntrl_stateReg == 4'd6 ||
	      sq_retryHandler_pauseRetryHandleReg &&
	      sq_retryHandler_retryCntrlStateReg == 2'd1) ;
  assign WILL_FIRE_RL_sq_retryHandler_stopScanQ =
	     CAN_FIRE_RL_sq_retryHandler_stopScanQ ;

  // rule RL_sq_retryHandler_resetAndClear
  assign CAN_FIRE_RL_sq_retryHandler_resetAndClear = cntrl_stateReg == 4'd0 ;
  assign WILL_FIRE_RL_sq_retryHandler_resetAndClear = cntrl_stateReg == 4'd0 ;

  // rule RL_sq_newPendingWorkReqPiptOut_flushWR
  assign CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_flushWR =
	     workReqQ_EMPTY_N &&
	     sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_FULL_N &&
	     cntrl_stateReg == 4'd6 ;
  assign WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_flushWR =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_flushWR ;

  // rule RL_sq_newPendingWorkReqPiptOut_genPendingWR
  assign CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_genPendingWR =
	     workReqQ_EMPTY_N &&
	     sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_FULL_N &&
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_FULL_N &&
	     cntrl_stateReg == 4'd3 &&
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg <
	     y__h42773 ;
  assign WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_genPendingWR =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_genPendingWR ;

  // rule RL_sq_newPendingWorkReqPiptOut_checkPendingNewWorkReqCnt
  assign CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_checkPendingNewWorkReqCnt =
	     1'd1 ;
  assign WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_checkPendingNewWorkReqCnt =
	     1'd1 ;

  // rule RL_sq_pendingWorkReqPipeOut_outputPipeIn1
  assign CAN_FIRE_RL_sq_pendingWorkReqPipeOut_outputPipeIn1 =
	     sq_pendingWorkReqPipeOut_pipeMuxOutQ_FULL_N &&
	     sq_pendingWorkReqBuf_scanOutQ_EMPTY_N ;
  assign WILL_FIRE_RL_sq_pendingWorkReqPipeOut_outputPipeIn1 =
	     CAN_FIRE_RL_sq_pendingWorkReqPipeOut_outputPipeIn1 ;

  // rule RL_sq_pendingWorkReqPipeOut_outputPipeIn2
  assign CAN_FIRE_RL_sq_pendingWorkReqPipeOut_outputPipeIn2 =
	     sq_pendingWorkReqPipeOut_pipeMuxOutQ_FULL_N &&
	     sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_EMPTY_N &&
	     sq_pendingWorkReqBuf_scanStateReg == 2'd0 &&
	     !sq_pendingWorkReqBuf_scanOutQ_EMPTY_N ;
  assign WILL_FIRE_RL_sq_pendingWorkReqPipeOut_outputPipeIn2 =
	     CAN_FIRE_RL_sq_pendingWorkReqPipeOut_outputPipeIn2 ;

  // rule RL_sq_newPendingWorkReqPiptOut_resetAndClear
  assign CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_resetAndClear =
	     cntrl_stateReg == 4'd0 ;
  assign WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_resetAndClear =
	     cntrl_stateReg == 4'd0 ;

  // rule RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_increment
  assign CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_increment =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_EMPTY_N &&
	     !sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port1__read[8] ;
  assign WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_increment =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_increment ;

  // rule RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrement
  assign CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrement =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_EMPTY_N &&
	     !sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port1__read[8] ;
  assign WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrement =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrement ;

  // rule RL_sq_reqGenSQ_recvWorkReq
  assign CAN_FIRE_RL_sq_reqGenSQ_recvWorkReq =
	     cntrl_stateReg != 4'd0 && cntrl_stateReg != 4'd7 &&
	     sq_pendingWorkReqPipeOut_pipeMuxOutQ_EMPTY_N &&
	     (IF_cntrl_stateReg_EQ_3_AND_sq_pendingWorkReqPi_ETC___d1880 ||
	      sq_reqGenSQ_workReqPayloadGenQ_FULL_N) &&
	     (cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 ||
	      cntrl_stateReg == 4'd6) ;
  assign WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq =
	     CAN_FIRE_RL_sq_reqGenSQ_recvWorkReq ;

  // rule RL_sq_reqGenSQ_issuePayloadGenReq
  assign CAN_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq =
	     sq_reqGenSQ_workReqPayloadGenQ_EMPTY_N &&
	     sq_reqGenSQ_workReqPktNumQ_FULL_N &&
	     (!sq_reqGenSQ_workReqPayloadGenQ_D_OUT[3] ||
	      payloadGenerator4SQ_payloadGenReqQ_FULL_N) &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 &&
	     sq_reqGenSQ_isNormalStateReg ;
  assign WILL_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq =
	     CAN_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq ;

  // rule RL_sq_reqGenSQ_calcPktNum4NewWorkReq
  assign CAN_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq =
	     sq_reqGenSQ_workReqPktNumQ_EMPTY_N &&
	     sq_reqGenSQ_workReqPsnQ_FULL_N &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 &&
	     sq_reqGenSQ_isNormalStateReg ;
  assign WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq ;

  // rule RL_sq_reqGenSQ_checkPendingWorkReq
  assign CAN_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq =
	     sq_reqGenSQ_workReqCheckQ_i_notEmpty__561_AND__ETC___d2573 &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 &&
	     sq_reqGenSQ_isNormalStateReg ;
  assign WILL_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq =
	     CAN_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq ;

  // rule RL_sq_reqGenSQ_outputNewPendingWorkReq
  assign CAN_FIRE_RL_sq_reqGenSQ_outputNewPendingWorkReq =
	     sq_reqGenSQ_workReqOutQ_EMPTY_N &&
	     (!sq_reqGenSQ_workReqOutQ_D_OUT[4] ||
	      !sq_reqGenSQ_workReqOutQ_D_OUT[2] ||
	      sq_reqGenSQ_pendingWorkReqOutQ_FULL_N) &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 &&
	     sq_reqGenSQ_isNormalStateReg ;
  assign WILL_FIRE_RL_sq_reqGenSQ_outputNewPendingWorkReq =
	     CAN_FIRE_RL_sq_reqGenSQ_outputNewPendingWorkReq ;

  // rule RL_sq_reqGenSQ_countReqPkt
  assign CAN_FIRE_RL_sq_reqGenSQ_countReqPkt =
	     sq_reqGenSQ_reqCountQ_EMPTY_N &&
	     sq_reqGenSQ_reqHeaderPrepareQ_FULL_N &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 &&
	     sq_reqGenSQ_isNormalStateReg ;
  assign WILL_FIRE_RL_sq_reqGenSQ_countReqPkt =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;

  // rule RL_sq_reqGenSQ_prepareReqHeaderGen
  assign CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen =
	     sq_reqGenSQ_reqHeaderPrepareQ_EMPTY_N &&
	     sq_reqGenSQ_pendingReqHeaderQ_FULL_N &&
	     IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2734 &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 &&
	     sq_reqGenSQ_isNormalStateReg ;
  assign WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen =
	     CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen ;

  // rule RL_sq_reqGenSQ_genReqHeader
  assign CAN_FIRE_RL_sq_reqGenSQ_genReqHeader =
	     sq_reqGenSQ_pendingReqHeaderQ_EMPTY_N &&
	     sq_reqGenSQ_reqHeaderGenQ_FULL_N &&
	     (!sq_reqGenSQ_pendingReqHeaderQ_D_OUT[544] ||
	      !sq_reqGenSQ_pendingReqHeaderQ_D_OUT[545] ||
	      payloadGenerator4SQ_payloadGenRespQ_EMPTY_N) &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 &&
	     sq_reqGenSQ_isNormalStateReg ;
  assign WILL_FIRE_RL_sq_reqGenSQ_genReqHeader =
	     CAN_FIRE_RL_sq_reqGenSQ_genReqHeader ;

  // rule RL_sq_reqGenSQ_errFlushWR
  assign CAN_FIRE_RL_sq_reqGenSQ_errFlushWR =
	     sq_reqGenSQ_workReqPayloadGenQ_EMPTY_N &&
	     (!sq_reqGenSQ_workReqPayloadGenQ_D_OUT[2] ||
	      !sq_reqGenSQ_workReqPayloadGenQ_D_OUT[1] ||
	      sq_reqGenSQ_pendingWorkReqOutQ_FULL_N) &&
	     (cntrl_stateReg == 4'd6 ||
	      cntrl_stateReg == 4'd3 && !sq_reqGenSQ_isNormalStateReg) ;
  assign WILL_FIRE_RL_sq_reqGenSQ_errFlushWR =
	     CAN_FIRE_RL_sq_reqGenSQ_errFlushWR ;

  // rule RL_sq_reqGenSQ_rdmaReqPipeOut_connect
  assign CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_connect =
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_EMPTY_N &&
	     sq_reqGenSQ_rdmaReqPipeOut_outputQ_FULL_N &&
	     (!sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_D_OUT[0] ||
	      sq_reqGenSQ_psnReqOutQ_EMPTY_N) ;
  assign WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_connect =
	     CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_connect ;

  // rule RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_resetAndClear
  assign CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_resetAndClear =
	     cntrl_stateReg == 4'd0 ;
  assign WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_resetAndClear =
	     cntrl_stateReg == 4'd0 ;

  // rule RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_outputHeader
  assign CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_outputHeader =
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAnd_ETC___d1747 &&
	     cntrl_stateReg != 4'd0 ;
  assign WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_outputHeader =
	     CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_outputHeader ;

  // rule RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_resetAndClear
  assign CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_resetAndClear =
	     cntrl_stateReg == 4'd0 ;
  assign WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_resetAndClear =
	     cntrl_stateReg == 4'd0 ;

  // rule RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData
  assign CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData =
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_EMPTY_N &&
	     cntrl_stateReg != 4'd0 &&
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg ==
	     2'd0 ;
  assign WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData =
	     CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData ;

  // rule RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader
  assign CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader =
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAnd_ETC___d1808 &&
	     cntrl_stateReg != 4'd0 &&
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg ==
	     2'd1 ;
  assign WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader =
	     CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader ;

  // rule RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputData
  assign CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputData =
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_FULL_N &&
	     payloadGenerator4SQ_bramQ2PipeOut_postBramQ_EMPTY_N &&
	     cntrl_stateReg != 4'd0 &&
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg ==
	     2'd2 ;
  assign WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputData =
	     CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputData ;

  // rule RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_extraLastFrag
  assign CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_extraLastFrag =
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_FULL_N &&
	     cntrl_stateReg != 4'd0 &&
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg ==
	     2'd3 ;
  assign WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_extraLastFrag =
	     CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_extraLastFrag ;

  // rule RL_sq_pendingWorkReq2Q_mkConnectionGetPut
  assign CAN_FIRE_RL_sq_pendingWorkReq2Q_mkConnectionGetPut =
	     !sq_pendingWorkReqBuf_fullReg &&
	     sq_pendingWorkReqBuf_scanStateReg == 2'd0 &&
	     sq_reqGenSQ_pendingWorkReqOutQ_EMPTY_N ;
  assign WILL_FIRE_RL_sq_pendingWorkReq2Q_mkConnectionGetPut =
	     CAN_FIRE_RL_sq_pendingWorkReq2Q_mkConnectionGetPut ;

  // rule RL_sq_respHandleSQ_preBuildRespInfo
  assign CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo =
	     !sq_pendingWorkReqBuf_emptyReg &&
	     respPktPipe_metaDataQ_EMPTY_N &&
	     cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_preSta_ETC___d3624 ;
  assign WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;

  // rule RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq
  assign CAN_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq =
	     sq_reqGenSQ_workReqPsnQ_EMPTY_N &&
	     sq_reqGenSQ_workReqCheckQ_FULL_N &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 &&
	     sq_reqGenSQ_isNormalStateReg ;
  assign WILL_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq ;

  // rule RL_sq_respHandleSQ_preProcRespInfo
  assign CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo =
	     cntrl_stateReg == 4'd3 && !sq_pendingWorkReqBuf_emptyReg &&
	     sq_respHandleSQ_preStageStateReg == 2'd1 &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;

  // rule RL_sq_respHandleSQ_recvRespHeader
  assign CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader =
	     sq_respHandleSQ_incomingRespQ_EMPTY_N &&
	     sq_respHandleSQ_pendingRespQ_FULL_N &&
	     (cntrl_preStateReg != 4'd3 || cntrl_stateReg != 4'd3 ||
	      sq_retryHandler_resetReqQ_FULL_N) &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;

  // rule RL_sq_respHandleSQ_handleRespByType
  assign CAN_FIRE_RL_sq_respHandleSQ_handleRespByType =
	     sq_respHandleSQ_pendingRespQ_EMPTY_N &&
	     sq_respHandleSQ_pendingPermQueryQ_FULL_N &&
	     (sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd9 &&
	      sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd10 ||
	      sq_retryHandler_retryReqQ_FULL_N) &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign WILL_FIRE_RL_sq_respHandleSQ_handleRespByType =
	     CAN_FIRE_RL_sq_respHandleSQ_handleRespByType ;

  // rule RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp
  assign CAN_FIRE_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp =
	     sq_respHandleSQ_pendingPermQueryQ_EMPTY_N &&
	     sq_respHandleSQ_pendingRetryCheckQ_FULL_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign WILL_FIRE_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp =
	     CAN_FIRE_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp ;

  // rule RL_sq_respHandleSQ_checkRetryErr
  assign CAN_FIRE_RL_sq_respHandleSQ_checkRetryErr =
	     sq_respHandleSQ_pendingRetryCheckQ_EMPTY_N &&
	     sq_respHandleSQ_pendingPermCheckQ_FULL_N &&
	     sq_respHandleSQ_pendingRetryCheckQ_first__949__ETC___d5046 &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr =
	     CAN_FIRE_RL_sq_respHandleSQ_checkRetryErr ;

  // rule RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp
  assign CAN_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp =
	     sq_respHandleSQ_pendingPermCheckQ_EMPTY_N &&
	     sq_respHandleSQ_pendingAddrCalcQ_FULL_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp =
	     CAN_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp ;

  // rule RL_sq_respHandleSQ_calcReadRespAddr
  assign CAN_FIRE_RL_sq_respHandleSQ_calcReadRespAddr =
	     sq_respHandleSQ_pendingAddrCalcQ_EMPTY_N &&
	     sq_respHandleSQ_pendingLenCalcQ_FULL_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign WILL_FIRE_RL_sq_respHandleSQ_calcReadRespAddr =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespAddr ;

  // rule RL_sq_respHandleSQ_calcReadRespLen
  assign CAN_FIRE_RL_sq_respHandleSQ_calcReadRespLen =
	     sq_respHandleSQ_pendingLenCalcQ_EMPTY_N &&
	     sq_respHandleSQ_pendingSpaceCalcQ_FULL_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign WILL_FIRE_RL_sq_respHandleSQ_calcReadRespLen =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespLen ;

  // rule RL_sq_respHandleSQ_calcEnoughDmaSpace
  assign CAN_FIRE_RL_sq_respHandleSQ_calcEnoughDmaSpace =
	     sq_respHandleSQ_pendingSpaceCalcQ_EMPTY_N &&
	     sq_respHandleSQ_pendingLenCheckQ_FULL_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign WILL_FIRE_RL_sq_respHandleSQ_calcEnoughDmaSpace =
	     CAN_FIRE_RL_sq_respHandleSQ_calcEnoughDmaSpace ;

  // rule RL_sq_respHandleSQ_checkReadRespLen
  assign CAN_FIRE_RL_sq_respHandleSQ_checkReadRespLen =
	     sq_respHandleSQ_pendingLenCheckQ_EMPTY_N &&
	     sq_respHandleSQ_pendingDmaReqQ_FULL_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign WILL_FIRE_RL_sq_respHandleSQ_checkReadRespLen =
	     CAN_FIRE_RL_sq_respHandleSQ_checkReadRespLen ;

  // rule RL_sq_respHandleSQ_issueDmaReq
  assign CAN_FIRE_RL_sq_respHandleSQ_issueDmaReq =
	     sq_respHandleSQ_pendingDmaReqQ_EMPTY_N &&
	     sq_respHandleSQ_pendingWorkCompQ_FULL_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq =
	     CAN_FIRE_RL_sq_respHandleSQ_issueDmaReq ;

  // rule RL_sq_respHandleSQ_discardGhostResp
  assign CAN_FIRE_RL_sq_respHandleSQ_discardGhostResp =
	     respPktPipe_metaDataQ_EMPTY_N &&
	     sq_respHandleSQ_incomingRespQ_FULL_N &&
	     cntrl_stateReg_EQ_3_AND_NOT_sq_respHandleSQ_re_ETC___d5647 &&
	     sq_pendingWorkReqBuf_emptyReg ;
  assign WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp =
	     CAN_FIRE_RL_sq_respHandleSQ_discardGhostResp ;

  // rule RL_sq_respHandleSQ_checkTimeOutErr
  assign CAN_FIRE_RL_sq_respHandleSQ_checkTimeOutErr =
	     sq_retryHandler_timeOutNotificationQ_EMPTY_N &&
	     cntrl_stateReg_EQ_3_AND_NOT_sq_respHandleSQ_re_ETC___d5647 ;
  assign WILL_FIRE_RL_sq_respHandleSQ_checkTimeOutErr =
	     CAN_FIRE_RL_sq_respHandleSQ_checkTimeOutErr ;

  // rule RL_sq_retryHandler_initRetryCntAndTimeOutTimer
  assign CAN_FIRE_RL_sq_retryHandler_initRetryCntAndTimeOutTimer =
	     statusSQ_comm_isRTR2RTS ;
  assign WILL_FIRE_RL_sq_retryHandler_initRetryCntAndTimeOutTimer =
	     statusSQ_comm_isRTR2RTS ;

  // rule RL_sq_respHandleSQ_errFlushIncomingResp
  assign CAN_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp =
	     respPktPipe_metaDataQ_EMPTY_N &&
	     sq_respHandleSQ_incomingRespQ_FULL_N &&
	     cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_recvEr_ETC___d5683 ;
  assign WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp ;

  // rule RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload
  assign CAN_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload =
	     (!respPktPipe_metaDataQ_EMPTY_N ||
	      sq_respHandleSQ_incomingRespQ_FULL_N) &&
	     cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_retryF_ETC___d5690 ;
  assign WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload =
	     CAN_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload ;

  // rule RL_resetAndClear
  assign CAN_FIRE_RL_resetAndClear = cntrl_stateReg == 4'd0 ;
  assign WILL_FIRE_RL_resetAndClear = cntrl_stateReg == 4'd0 ;

  // rule RL_sq_respHandleSQ_retryFlushDone
  assign CAN_FIRE_RL_sq_respHandleSQ_retryFlushDone =
	     cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_retryF_ETC___d5690 ;
  assign WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone =
	     cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_retryF_ETC___d5690 ;

  // rule RL_sq_retryHandler_initRetry
  assign CAN_FIRE_RL_sq_retryHandler_initRetry =
	     cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 &&
	     sq_retryHandler_pauseRetryHandleReg &&
	     sq_retryHandler_retryCntrlStateReg == 2'd2 ;
  assign WILL_FIRE_RL_sq_retryHandler_initRetry =
	     CAN_FIRE_RL_sq_retryHandler_initRetry ;

  // rule RL_sq_retryHandler_startPreRetry
  assign CAN_FIRE_RL_sq_retryHandler_startPreRetry =
	     (sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 &&
	     !sq_retryHandler_pauseRetryHandleReg &&
	     sq_retryHandler_retryHandleStateReg == 3'd1 ;
  assign WILL_FIRE_RL_sq_retryHandler_startPreRetry =
	     CAN_FIRE_RL_sq_retryHandler_startPreRetry ;

  // rule RL_sq_retryHandler_rnrCheck
  assign CAN_FIRE_RL_sq_retryHandler_rnrCheck =
	     cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 &&
	     !sq_retryHandler_pauseRetryHandleReg &&
	     sq_retryHandler_retryHandleStateReg == 3'd2 ;
  assign WILL_FIRE_RL_sq_retryHandler_rnrCheck =
	     CAN_FIRE_RL_sq_retryHandler_rnrCheck ;

  // rule RL_sq_retryHandler_rnrWait
  assign CAN_FIRE_RL_sq_retryHandler_rnrWait =
	     cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 &&
	     !sq_retryHandler_pauseRetryHandleReg &&
	     sq_retryHandler_retryHandleStateReg == 3'd3 ;
  assign WILL_FIRE_RL_sq_retryHandler_rnrWait =
	     CAN_FIRE_RL_sq_retryHandler_rnrWait ;

  // rule RL_sq_retryHandler_checkPartialRetry
  assign CAN_FIRE_RL_sq_retryHandler_checkPartialRetry =
	     sq_pendingWorkReqBuf_scanStateReg == 2'd1 &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 &&
	     !sq_retryHandler_pauseRetryHandleReg &&
	     sq_retryHandler_retryHandleStateReg == 3'd4 ;
  assign WILL_FIRE_RL_sq_retryHandler_checkPartialRetry =
	     CAN_FIRE_RL_sq_retryHandler_checkPartialRetry ;

  // rule RL_sq_retryHandler_modifyPartialRetryWR
  assign CAN_FIRE_RL_sq_retryHandler_modifyPartialRetryWR =
	     sq_pendingWorkReqBuf_scanStateReg == 2'd1 &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 &&
	     !sq_retryHandler_pauseRetryHandleReg &&
	     sq_retryHandler_retryHandleStateReg == 3'd5 ;
  assign WILL_FIRE_RL_sq_retryHandler_modifyPartialRetryWR =
	     CAN_FIRE_RL_sq_retryHandler_modifyPartialRetryWR ;

  // rule RL_sq_retryHandler_startRetry
  assign CAN_FIRE_RL_sq_retryHandler_startRetry =
	     sq_pendingWorkReqBuf_scanStateReg == 2'd1 &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 &&
	     !sq_retryHandler_pauseRetryHandleReg &&
	     sq_retryHandler_retryHandleStateReg == 3'd6 ;
  assign WILL_FIRE_RL_sq_retryHandler_startRetry =
	     CAN_FIRE_RL_sq_retryHandler_startRetry ;

  // rule RL_sq_retryHandler_waitRetryDone
  assign CAN_FIRE_RL_sq_retryHandler_waitRetryDone =
	     cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 &&
	     !sq_retryHandler_pauseRetryHandleReg &&
	     sq_retryHandler_retryHandleStateReg == 3'd7 ;
  assign WILL_FIRE_RL_sq_retryHandler_waitRetryDone =
	     CAN_FIRE_RL_sq_retryHandler_waitRetryDone ;

  // rule RL_sq_retryHandler_handleRetryCntUpdate
  assign CAN_FIRE_RL_sq_retryHandler_handleRetryCntUpdate =
	     sq_retryHandler_updateRetryCntQ_i_notEmpty__30_ETC___d1313 &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 &&
	     !sq_retryHandler_pauseRetryHandleReg ;
  assign WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate =
	     CAN_FIRE_RL_sq_retryHandler_handleRetryCntUpdate ;

  // rule RL_sq_retryHandler_handleRetryAction
  assign CAN_FIRE_RL_sq_retryHandler_handleRetryAction =
	     sq_retryHandler_retryActionQ_EMPTY_N &&
	     sq_retryHandler_updateRetryCntQ_FULL_N &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 ;
  assign WILL_FIRE_RL_sq_retryHandler_handleRetryAction =
	     CAN_FIRE_RL_sq_retryHandler_handleRetryAction ;

  // rule RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq
  assign CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq =
	     !sq_pendingWorkReqBuf_emptyReg &&
	     sq_respHandleSQ_incomingRespQ_FULL_N &&
	     (!sq_respHandleSQ_preStageDeqPktMetaDataReg ||
	      respPktPipe_metaDataQ_EMPTY_N) &&
	     (!sq_respHandleSQ_preStageDeqPendingWorkReqReg ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	     cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_preSta_ETC___d4329 ;
  assign WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;

  // rule RL_sq_respHandleSQ_errFlushWorkReq
  assign CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq =
	     !sq_pendingWorkReqBuf_emptyReg &&
	     (sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	     sq_respHandleSQ_incomingRespQ_FULL_N &&
	     (cntrl_stateReg == 4'd3 &&
	      (sq_respHandleSQ_recvErrRespReg ||
	       sq_respHandleSQ_errOccurredReg) ||
	      cntrl_stateReg == 4'd6) ;
  assign WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;

  // rule RL_sq_pendingWorkReqBuf_check
  assign CAN_FIRE_RL_sq_pendingWorkReqBuf_check =
	     CAN_FIRE_RL_sq_pendingWorkReqBuf_canonicalize ;
  assign WILL_FIRE_RL_sq_pendingWorkReqBuf_check =
	     CAN_FIRE_RL_sq_pendingWorkReqBuf_canonicalize ;

  // rule RL_sq_pendingWorkReqBuf_fifoMode
  assign CAN_FIRE_RL_sq_pendingWorkReqBuf_fifoMode =
	     !CAN_FIRE_RL_sq_pendingWorkReqBuf_clearAll &&
	     sq_pendingWorkReqBuf_scanStateReg == 2'd0 ;
  assign WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode =
	     CAN_FIRE_RL_sq_pendingWorkReqBuf_fifoMode ;

  // rule RL_sq_pendingWorkReqBuf_preScanMode
  assign CAN_FIRE_RL_sq_pendingWorkReqBuf_preScanMode =
	     !CAN_FIRE_RL_sq_pendingWorkReqBuf_clearAll &&
	     sq_pendingWorkReqBuf_scanStateReg == 2'd1 ;
  assign WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode =
	     CAN_FIRE_RL_sq_pendingWorkReqBuf_preScanMode ;

  // rule RL_sq_pendingWorkReqBuf_scanNext
  assign CAN_FIRE_RL_sq_pendingWorkReqBuf_scanNext =
	     sq_pendingWorkReqBuf_scanOutQ_FULL_N &&
	     !CAN_FIRE_RL_sq_pendingWorkReqBuf_clearAll &&
	     sq_pendingWorkReqBuf_scanStateReg == 2'd2 ;
  assign WILL_FIRE_RL_sq_pendingWorkReqBuf_scanNext =
	     CAN_FIRE_RL_sq_pendingWorkReqBuf_scanNext ;

  // rule RL_sq_pendingWorkReqBuf_scanModeStateChange
  assign CAN_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange =
	     !CAN_FIRE_RL_sq_pendingWorkReqBuf_clearAll &&
	     sq_pendingWorkReqBuf_scanStateReg == 2'd2 ;
  assign WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange =
	     CAN_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange ;

  // rule RL_sq_newPendingWorkReqPiptOut_decrPendingNewWorkReqCnt
  assign CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_decrPendingNewWorkReqCnt =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_FULL_N &&
	     cntrl_stateReg == 4'd3 &&
	     sq_pendingWorkReqBuf_popReg_port1__read ;
  assign WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_decrPendingNewWorkReqCnt =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_decrPendingNewWorkReqCnt ;

  // rule RL_sq_pendingWorkReqBuf_clearAll
  always@(cntrl_stateReg or sq_pendingWorkReqBuf_clearReg)
  begin
    case (cntrl_stateReg)
      4'd0: CAN_FIRE_RL_sq_pendingWorkReqBuf_clearAll = 1'd1;
      default: CAN_FIRE_RL_sq_pendingWorkReqBuf_clearAll =
		   sq_pendingWorkReqBuf_clearReg;
    endcase
  end
  assign WILL_FIRE_RL_sq_pendingWorkReqBuf_clearAll =
	     CAN_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;

  // rule RL_sq_pendingWorkReqBuf_canonicalize
  assign CAN_FIRE_RL_sq_pendingWorkReqBuf_canonicalize =
	     !CAN_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;
  assign WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize =
	     CAN_FIRE_RL_sq_pendingWorkReqBuf_canonicalize ;

  // rule RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_write
  assign CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_write =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port1__read[8] ;
  assign WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_write =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_write ;

  // rule RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrAndDecr
  assign CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrAndDecr =
	     !sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port1__read[8] ;
  assign WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrAndDecr =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrAndDecr ;

  // rule RL_sq_workCompGenSQ_start
  assign CAN_FIRE_RL_sq_workCompGenSQ_start =
	     cntrl_stateReg == 4'd3 &&
	     sq_workCompGenSQ_workCompGenStateReg == 2'd0 ;
  assign WILL_FIRE_RL_sq_workCompGenSQ_start =
	     CAN_FIRE_RL_sq_workCompGenSQ_start ;

  // rule RL_sq_workCompGenSQ_recvWorkCompGenReqSQ
  assign CAN_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ =
	     IF_sq_reqGenSQ_workCompGenReqOutQ_notEmpty__69_ETC___d5707 &&
	     (cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 &&
	      sq_workCompGenSQ_workCompGenStateReg == 2'd1 ||
	      cntrl_stateReg == 4'd6 ||
	      sq_workCompGenSQ_workCompGenStateReg == 2'd2) ;
  assign WILL_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ =
	     CAN_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ ;

  // rule RL_sq_reqGenSQ_resetAndClear
  assign CAN_FIRE_RL_sq_reqGenSQ_resetAndClear = cntrl_stateReg == 4'd0 ;
  assign WILL_FIRE_RL_sq_reqGenSQ_resetAndClear = cntrl_stateReg == 4'd0 ;

  // rule RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp
  assign CAN_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp =
	     sq_reqGenSQ_reqHeaderGenQ_EMPTY_N &&
	     IF_sq_reqGenSQ_reqHeaderGenQ_first__570_BIT_62_ETC___d3580 &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 &&
	     sq_reqGenSQ_isNormalStateReg ;
  assign WILL_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp =
	     CAN_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp ;

  // rule RL_sq_respHandleSQ_resetAndClear
  assign CAN_FIRE_RL_sq_respHandleSQ_resetAndClear = cntrl_stateReg == 4'd0 ;
  assign WILL_FIRE_RL_sq_respHandleSQ_resetAndClear = cntrl_stateReg == 4'd0 ;

  // rule RL_sq_respHandleSQ_genWorkCompSQ
  assign CAN_FIRE_RL_sq_respHandleSQ_genWorkCompSQ =
	     sq_respHandleSQ_pendingWorkCompQ_EMPTY_N &&
	     (!sq_respHandleSQ_pendingWorkCompQ_D_OUT[633] &&
	      !sq_respHandleSQ_pendingWorkCompQ_D_OUT[31] ||
	      sq_respHandleSQ_workCompGenReqOutQ_FULL_N) &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign WILL_FIRE_RL_sq_respHandleSQ_genWorkCompSQ =
	     CAN_FIRE_RL_sq_respHandleSQ_genWorkCompSQ ;

  // rule RL_sq_respHandleSQ_canonicalize
  assign CAN_FIRE_RL_sq_respHandleSQ_canonicalize =
	     cntrl_stateReg == 4'd3 &&
	     (sq_respHandleSQ_hasInternalErrReg_port1__read ||
	      sq_respHandleSQ_hasTimeOutErrReg_port1__read) ;
  assign WILL_FIRE_RL_sq_respHandleSQ_canonicalize =
	     CAN_FIRE_RL_sq_respHandleSQ_canonicalize ;

  // rule RL_sq_workCompGenSQ_genPendingWorkCompSQ
  assign CAN_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ =
	     sq_workCompGenSQ_pendingWorkCompQ4SQ_EMPTY_N &&
	     sq_workCompGenSQ_dmaWaitingQ_i_notFull__721_AN_ETC___d5767 &&
	     (cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 &&
	      sq_workCompGenSQ_workCompGenStateReg == 2'd1 ||
	      cntrl_stateReg == 4'd6 ||
	      sq_workCompGenSQ_workCompGenStateReg == 2'd2) ;
  assign WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ =
	     CAN_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ ;

  // rule RL_cntrl_onReset
  assign CAN_FIRE_RL_cntrl_onReset =
	     cntrl_reqQ_EMPTY_N && cntrl_respQ_FULL_N &&
	     cntrl_stateReg == 4'd0 ;
  assign WILL_FIRE_RL_cntrl_onReset = CAN_FIRE_RL_cntrl_onReset ;

  // rule RL_cntrl_onCreate
  assign CAN_FIRE_RL_cntrl_onCreate =
	     cntrl_reqQ_EMPTY_N && cntrl_respQ_FULL_N &&
	     cntrl_stateReg == 4'd8 ;
  assign WILL_FIRE_RL_cntrl_onCreate = CAN_FIRE_RL_cntrl_onCreate ;

  // rule RL_sq_workCompGenSQ_waitDmaDoneSQ
  assign CAN_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ =
	     sq_workCompGenSQ_dmaWaitingQ_EMPTY_N &&
	     sq_workCompGenSQ_genWorkCompQ_FULL_N &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 &&
	     sq_workCompGenSQ_workCompGenStateReg == 2'd1 ;
  assign WILL_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ =
	     CAN_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ ;

  // rule RL_sq_workCompGenSQ_genWorkCompSQ
  assign CAN_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ =
	     sq_workCompGenSQ_genWorkCompQ_EMPTY_N &&
	     IF_sq_workCompGenSQ_genWorkCompQ_first__802_BI_ETC___d5808 &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 &&
	     sq_workCompGenSQ_workCompGenStateReg == 2'd1 ;
  assign WILL_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ =
	     CAN_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ ;

  // rule RL_cntrl_updatePreState
  assign CAN_FIRE_RL_cntrl_updatePreState = 1'd1 ;
  assign WILL_FIRE_RL_cntrl_updatePreState = 1'd1 ;

  // rule RL_sq_workCompGenSQ_noDmaWaitSQ
  assign CAN_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ =
	     sq_workCompGenSQ_dmaWaitingQ_EMPTY_N &&
	     sq_workCompGenSQ_genWorkCompQ_FULL_N &&
	     (cntrl_stateReg == 4'd6 ||
	      sq_workCompGenSQ_workCompGenStateReg == 2'd2) ;
  assign WILL_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ =
	     CAN_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ ;

  // rule RL_sq_workCompGenSQ_errFlushSQ
  assign CAN_FIRE_RL_sq_workCompGenSQ_errFlushSQ =
	     sq_workCompGenSQ_genWorkCompQ_EMPTY_N &&
	     (sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg ||
	      sq_workCompGenSQ_workCompOutQ4SQ_FULL_N) &&
	     (cntrl_stateReg == 4'd6 ||
	      sq_workCompGenSQ_workCompGenStateReg == 2'd2) ;
  assign WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ =
	     CAN_FIRE_RL_sq_workCompGenSQ_errFlushSQ ;

  // rule RL_sq_workCompGenSQ_resetAndClear
  assign CAN_FIRE_RL_sq_workCompGenSQ_resetAndClear = cntrl_stateReg == 4'd0 ;
  assign WILL_FIRE_RL_sq_workCompGenSQ_resetAndClear =
	     cntrl_stateReg == 4'd0 ;

  // rule RL_cntrl_canonicalize
  assign CAN_FIRE_RL_cntrl_canonicalize = 1'd1 ;
  assign WILL_FIRE_RL_cntrl_canonicalize = 1'd1 ;

  // inputs to muxes for submodule ports
  assign MUX_cntrl_nextStateReg_port0__write_1__SEL_1 =
	     WILL_FIRE_RL_cntrl_onReset && cntrl_reqQ_D_OUT[300:299] == 2'd0 ;
  assign MUX_cntrl_nextStateReg_port0__write_1__SEL_2 =
	     WILL_FIRE_RL_cntrl_onCreate &&
	     cntrl_reqQ_D_OUT[300:299] == 2'd2 &&
	     cntrl_reqQ_D_OUT[216:213] == 4'd1 &&
	     { 21'd0,
	       cntrl_reqQ_D_OUT[221:220],
	       2'd0,
	       cntrl_reqQ_D_OUT[217] } ==
	     26'd25 ;
  assign MUX_cntrl_nextStateReg_port0__write_1__SEL_3 =
	     WILL_FIRE_RL_cntrl_onINIT && cntrl_reqQ_D_OUT[300:299] == 2'd2 &&
	     cntrl_reqQ_D_OUT[216:213] == 4'd2 &&
	     { 5'd0,
	       cntrl_reqQ_D_OUT[237],
	       2'd0,
	       cntrl_reqQ_D_OUT[234],
	       1'd0,
	       cntrl_reqQ_D_OUT[232],
	       2'd0,
	       cntrl_reqQ_D_OUT[229],
	       3'd0,
	       cntrl_reqQ_D_OUT[225],
	       7'd0,
	       cntrl_reqQ_D_OUT[217] } ==
	     26'd1216769 ;
  assign MUX_cntrl_nextStateReg_port0__write_1__SEL_4 =
	     WILL_FIRE_RL_cntrl_onRTR && cntrl_reqQ_D_OUT[300:299] == 2'd2 &&
	     (cntrl_reqQ_D_OUT[216:213] == 4'd6 && cntrl_reqQ_D_OUT[217] ||
	      cntrl_reqQ_D_OUT[216:213] == 4'd3 &&
	      { 9'd0,
		cntrl_reqQ_D_OUT[233],
		2'd0,
		cntrl_reqQ_D_OUT[230],
		1'd0,
		cntrl_reqQ_D_OUT[228:226],
		8'd0,
		cntrl_reqQ_D_OUT[217] } ==
	      26'd77313) ;
  assign MUX_cntrl_nextStateReg_port0__write_1__SEL_5 =
	     WILL_FIRE_RL_cntrl_onRTS && cntrl_reqQ_D_OUT[300:299] == 2'd2 &&
	     (cntrl_reqQ_D_OUT[216:213] == 4'd4 ||
	      cntrl_reqQ_D_OUT[216:213] == 4'd6) &&
	     cntrl_reqQ_D_OUT[217] ;
  assign MUX_cntrl_nextStateReg_port0__write_1__SEL_6 =
	     WILL_FIRE_RL_cntrl_onSQD && cntrl_reqQ_D_OUT[300:299] == 2'd2 &&
	     (cntrl_reqQ_D_OUT[216:213] == 4'd6 ||
	      cntrl_reqQ_D_OUT[216:213] == 4'd3) &&
	     cntrl_reqQ_D_OUT[217] ;
  assign MUX_cntrl_nextStateReg_port0__write_1__SEL_7 =
	     WILL_FIRE_RL_cntrl_onERR &&
	     (cntrl_reqQ_D_OUT[300:299] == 2'd1 ||
	      cntrl_reqQ_D_OUT[300:299] == 2'd2 &&
	      cntrl_reqQ_D_OUT[216:213] == 4'd0 &&
	      cntrl_reqQ_D_OUT[217]) ;
  assign MUX_cntrl_npsnReg_write_1__SEL_1 =
	     WILL_FIRE_RL_cntrl_onRTR && cntrl_reqQ_D_OUT[300:299] == 2'd2 ;
  assign MUX_dmaReadCntrl4SQ_addrChunkSrv_isFirstReg_write_1__SEL_1 =
	     WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_genResp ||
	     WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_resetAndClear ;
  assign MUX_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg_write_1__SEL_1 =
	     WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrAndDecr &&
	     (sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port1__read &&
	      !sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port1__read ||
	      !sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port1__read &&
	      sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port1__read) ;
  assign MUX_sq_pendingWorkReqBuf_headReg_write_1__SEL_1 =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_scanNext ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode ;
  assign MUX_sq_pendingWorkReqBuf_scanStateReg_write_1__SEL_1 =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode &&
	     sq_pendingWorkReqBuf_preScanStartReg_port1__read ;
  assign MUX_sq_pendingWorkReqBuf_scanStateReg_write_1__SEL_2 =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode &&
	     sq_pendingWorkReqBuf_scanStartReg_port1__read ;
  assign MUX_sq_pendingWorkReqBuf_scanStateReg_write_1__SEL_3 =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange &&
	     (sq_pendingWorkReqBuf_scanStopReg_port1__read ||
	      sq_pendingWorkReqBuf_preScanRestartReg_port1__read ||
	      sq_pendingWorkReqBuf_scanDoneReg_port1__read) ;
  assign MUX_sq_reqGenSQ_isNormalStateReg_write_1__SEL_1 =
	     WILL_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp &&
	     (sq_reqGenSQ_reqHeaderGenQ_D_OUT[26] &&
	      sq_reqGenSQ_reqHeaderGenQ_D_OUT[24] ||
	      !sq_reqGenSQ_reqHeaderGenQ_D_OUT[620]) ;
  assign MUX_sq_reqGenSQ_pendingWorkReqOutQ_enq_1__SEL_1 =
	     WILL_FIRE_RL_sq_reqGenSQ_outputNewPendingWorkReq &&
	     sq_reqGenSQ_workReqOutQ_D_OUT[4] &&
	     sq_reqGenSQ_workReqOutQ_D_OUT[2] ;
  assign MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_enq_1__SEL_1 =
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader &&
	     (!sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerHasPayloadReg ||
	      !sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT[0]) ;
  assign MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg_write_1__SEL_1 =
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader &&
	     !sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT[0] ;
  assign MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg_write_1__SEL_1 =
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader &&
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT[0] ;
  assign MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__SEL_2 =
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputData &&
	     payloadGenerator4SQ_bramQ2PipeOut_postBramQ_D_OUT[0] ;
  assign MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__SEL_4 =
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_extraLastFrag ||
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_resetAndClear ;
  assign MUX_sq_respHandleSQ_hasInternalErrReg_port0__write_1__SEL_1 =
	     WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	     sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	     sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd0 ;
  assign MUX_sq_respHandleSQ_hasTimeOutErrReg_port0__write_1__SEL_1 =
	     WILL_FIRE_RL_sq_respHandleSQ_checkTimeOutErr &&
	     sq_retryHandler_timeOutNotificationQ_D_OUT ;
  assign MUX_sq_respHandleSQ_incomingRespQ_enq_1__SEL_1 =
	     WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	     respPktPipe_metaDataQ_EMPTY_N ;
  assign MUX_sq_respHandleSQ_preRdmaOpCodeReg_write_1__SEL_1 =
	     WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	     sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd3 &&
	     !sq_respHandleSQ_errOccurredReg &&
	     cntrl_stateReg != 4'd6 ;
  assign MUX_sq_respHandleSQ_preStageStateReg_write_1__SEL_1 =
	     WILL_FIRE_RL_sq_respHandleSQ_resetAndClear ||
	     WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload ||
	     WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign MUX_sq_respHandleSQ_recvRetryRespReg_write_1__SEL_2 =
	     WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	     sq_retryHandler_retryHandleStateReg == 3'd7 ;
  assign MUX_sq_retryHandler_disableRetryCntReg_write_1__SEL_1 =
	     WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	     !sq_retryHandler_updateRetryCntQ_D_OUT[3] ;
  assign MUX_sq_retryHandler_disableTimeOutReg_write_1__SEL_1 =
	     WILL_FIRE_RL_sq_retryHandler_checkTimeOut &&
	     sq_retryHandler_resetTimeOutQ_notEmpty__176_OR_ETC___d1209 ;
  assign MUX_sq_retryHandler_isRnrWaitCntZeroReg_write_1__SEL_1 =
	     WILL_FIRE_RL_sq_retryHandler_rnrWait &&
	     !sq_retryHandler_isRnrWaitCntZeroReg ;
  assign MUX_sq_retryHandler_isTimeOutCntHighPartZeroReg_write_1__SEL_1 =
	     WILL_FIRE_RL_sq_retryHandler_checkTimeOut &&
	     (sq_retryHandler_resetTimeOutQ_EMPTY_N ||
	      sq_retryHandler_retryCntrlStateReg != 2'd0 ||
	      !sq_retryHandler_disableTimeOutReg &&
	      !sq_pendingWorkReqBuf_emptyReg) ;
  assign MUX_sq_retryHandler_pauseRetryHandleReg_write_1__SEL_1 =
	     WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	     sq_retryHandler_updateRetryCntQ_D_OUT[3] ;
  assign MUX_sq_retryHandler_retryCntReg_write_1__SEL_1 =
	     WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	     IF_sq_retryHandler_updateRetryCntQ_first__309__ETC___d1340 ;
  assign MUX_sq_retryHandler_retryCntrlStateReg_port0__write_1__SEL_1 =
	     WILL_FIRE_RL_sq_retryHandler_waitRetryFinish &&
	     sq_pendingWorkReqBuf_scanStateReg == 2'd0 ;
  assign MUX_sq_retryHandler_retryHandleStateReg_write_1__SEL_1 =
	     WILL_FIRE_RL_sq_retryHandler_rnrWait &&
	     sq_retryHandler_isRnrWaitCntZeroReg ;
  assign MUX_sq_retryHandler_retryHandleStateReg_write_1__SEL_2 =
	     WILL_FIRE_RL_sq_retryHandler_waitRetryDone &&
	     sq_pendingWorkReqBuf_scanStateReg == 2'd0 ;
  assign MUX_sq_retryHandler_rnrCntReg_write_1__SEL_1 =
	     WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	     (sq_retryHandler_updateRetryCntQ_D_OUT[2:0] == 3'd1 &&
	      !sq_retryHandler_disableRetryCntReg &&
	      sq_retryHandler_rnrCntReg != 3'd0 ||
	      !sq_retryHandler_updateRetryCntQ_D_OUT[3]) ;
  assign MUX_sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_write_1__SEL_1 =
	     WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ &&
	     sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg ;
  assign MUX_sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_write_1__SEL_2 =
	     WILL_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ &&
	     !sq_workCompGenSQ_genWorkCompQ_D_OUT[1] ;
  assign MUX_sq_workCompGenSQ_workCompOutQ4SQ_enq_1__SEL_1 =
	     WILL_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ &&
	     (sq_workCompGenSQ_genWorkCompQ_D_OUT[0] ||
	      !sq_workCompGenSQ_genWorkCompQ_D_OUT[1]) ;
  assign MUX_cntrl_nextStateReg_port0__write_1__VAL_2 =
	     { 1'd1, cntrl_reqQ_D_OUT[216:213] } ;
  assign MUX_cntrl_nextStateReg_port0__write_1__VAL_7 =
	     (cntrl_reqQ_D_OUT[300:299] == 2'd1) ?
	       5'd16 :
	       { 1'd1, cntrl_reqQ_D_OUT[216:213] } ;
  assign MUX_cntrl_respQ_enq_1__VAL_1 =
	     { cntrl_reqQ_D_OUT[300:299] == 2'd0,
	       cntrl_reqQ_D_OUT[266:243],
	       cntrl_reqQ_D_OUT[298:267],
	       cntrl_reqQ_D_OUT[216:0] } ;
  assign MUX_cntrl_respQ_enq_1__VAL_2 =
	     { cntrl_reqQ_D_OUT[300:299] != 2'd2 ||
	       cntrl_reqQ_D_OUT[216:213] == 4'd1 &&
	       { 21'd0,
		 cntrl_reqQ_D_OUT[221:220],
		 2'd0,
		 cntrl_reqQ_D_OUT[217] } ==
	       26'd25,
	       cntrl_reqQ_D_OUT[266:243],
	       cntrl_reqQ_D_OUT[298:267],
	       cntrl_reqQ_D_OUT[216:213],
	       IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d60,
	       cntrl_reqQ_D_OUT[208:0] } ;
  assign MUX_cntrl_respQ_enq_1__VAL_3 =
	     { cntrl_reqQ_D_OUT[300:299] != 2'd2 ||
	       cntrl_reqQ_D_OUT[216:213] == 4'd2 &&
	       { 5'd0,
		 cntrl_reqQ_D_OUT[237],
		 2'd0,
		 cntrl_reqQ_D_OUT[234],
		 1'd0,
		 cntrl_reqQ_D_OUT[232],
		 2'd0,
		 cntrl_reqQ_D_OUT[229],
		 3'd0,
		 cntrl_reqQ_D_OUT[225],
		 7'd0,
		 cntrl_reqQ_D_OUT[217] } ==
	       26'd1216769,
	       cntrl_reqQ_D_OUT[266:243],
	       cntrl_reqQ_D_OUT[298:267],
	       cntrl_reqQ_D_OUT[216:213],
	       IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d60,
	       cntrl_reqQ_D_OUT[208:102],
	       IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d95,
	       cntrl_reqQ_D_OUT[93:54],
	       IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d99,
	       cntrl_reqQ_D_OUT[37:0] } ;
  assign MUX_cntrl_respQ_enq_1__VAL_4 =
	     { cntrl_reqQ_D_OUT[300:299] != 2'd2 ||
	       cntrl_reqQ_D_OUT[216:213] == 4'd6 && cntrl_reqQ_D_OUT[217] ||
	       cntrl_reqQ_D_OUT[216:213] == 4'd3 &&
	       { 9'd0,
		 cntrl_reqQ_D_OUT[233],
		 2'd0,
		 cntrl_reqQ_D_OUT[230],
		 1'd0,
		 cntrl_reqQ_D_OUT[228:226],
		 8'd0,
		 cntrl_reqQ_D_OUT[217] } ==
	       26'd77313,
	       cntrl_reqQ_D_OUT[266:243],
	       cntrl_reqQ_D_OUT[298:267],
	       cntrl_reqQ_D_OUT[216:213],
	       IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d60,
	       cntrl_reqQ_D_OUT[208:102],
	       IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d95,
	       cntrl_reqQ_D_OUT[93:54],
	       IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d99,
	       cntrl_reqQ_D_OUT[37:0] } ;
  assign MUX_cntrl_respQ_enq_1__VAL_5 =
	     { cntrl_reqQ_D_OUT[300:299] != 2'd2 ||
	       (cntrl_reqQ_D_OUT[216:213] == 4'd4 ||
		cntrl_reqQ_D_OUT[216:213] == 4'd6) &&
	       cntrl_reqQ_D_OUT[217],
	       cntrl_reqQ_D_OUT[266:243],
	       cntrl_reqQ_D_OUT[298:267],
	       cntrl_reqQ_D_OUT[216:213],
	       IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d60,
	       cntrl_reqQ_D_OUT[208:150],
	       x__h6205,
	       cntrl_reqQ_D_OUT[125:102],
	       IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d95,
	       cntrl_reqQ_D_OUT[93:54],
	       IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d99,
	       cntrl_reqQ_D_OUT[37],
	       x__h6243,
	       cntrl_reqQ_D_OUT[28:16],
	       IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d155,
	       cntrl_reqQ_D_OUT[4:0] } ;
  assign MUX_cntrl_respQ_enq_1__VAL_6 =
	     { cntrl_reqQ_D_OUT[300:299] != 2'd2 ||
	       (cntrl_reqQ_D_OUT[216:213] == 4'd6 ||
		cntrl_reqQ_D_OUT[216:213] == 4'd3) &&
	       cntrl_reqQ_D_OUT[217],
	       cntrl_reqQ_D_OUT[266:243],
	       cntrl_reqQ_D_OUT[298:267],
	       cntrl_reqQ_D_OUT[216:213],
	       IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d60,
	       cntrl_reqQ_D_OUT[208:150],
	       x__h6205,
	       cntrl_reqQ_D_OUT[125:102],
	       IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d95,
	       cntrl_reqQ_D_OUT[93:54],
	       IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d99,
	       cntrl_reqQ_D_OUT[37],
	       x__h6243,
	       cntrl_reqQ_D_OUT[28:16],
	       IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d155,
	       cntrl_reqQ_D_OUT[4:0] } ;
  assign MUX_cntrl_respQ_enq_1__VAL_7 =
	     { cntrl_reqQ_D_OUT[300:299] != 2'd2 ||
	       cntrl_reqQ_D_OUT[216:213] == 4'd0 && cntrl_reqQ_D_OUT[217],
	       cntrl_reqQ_D_OUT[266:243],
	       cntrl_reqQ_D_OUT[298:267],
	       cntrl_reqQ_D_OUT[216:213],
	       IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d60,
	       cntrl_reqQ_D_OUT[208:0] } ;
  assign MUX_dmaReadCntrl4SQ_addrChunkSrv_busyReg_write_1__VAL_1 =
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[24:23] != 2'd0 ||
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[22] ||
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[21:20] != 2'd0 ||
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[19] ||
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[18:17] != 2'd0 ||
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[16] ||
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[15:14] != 2'd0 ||
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[13] ||
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[12:11] != 2'd0 ||
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[10] ||
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[9:8] != 2'd0 ||
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[7] ||
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[6:5] != 2'd0 ||
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[4:3] != 2'd0 ||
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[2:1] != 2'd0 ;
  always@(dmaReadCntrl4SQ_addrChunkSrv_pmtuReg or
	  dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg)
  begin
    case (dmaReadCntrl4SQ_addrChunkSrv_pmtuReg)
      3'd1:
	  MUX_dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg_write_1__VAL_2 =
	      { dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg[63:8] + 56'd1,
		dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg[7:0] };
      3'd2:
	  MUX_dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg_write_1__VAL_2 =
	      { dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg[63:9] + 55'd1,
		dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg[8:0] };
      3'd3:
	  MUX_dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg_write_1__VAL_2 =
	      { dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg[63:10] + 54'd1,
		dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg[9:0] };
      3'd4:
	  MUX_dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg_write_1__VAL_2 =
	      { dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg[63:11] + 53'd1,
		dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg[10:0] };
      default: MUX_dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg_write_1__VAL_2 =
		   { dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg[63:12] + 52'd1,
		     dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg[11:0] };
    endcase
  end
  assign MUX_dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_write_1__VAL_1 =
	     tmpPktNum__h9229 +
	     ((!pmtuResidue__h9230[11] && pmtuResidue__h9230[10:9] == 2'd0 &&
	       !pmtuResidue__h9230[8] &&
	       pmtuResidue__h9230[7:6] == 2'd0 &&
	       !pmtuResidue__h9230[5] &&
	       pmtuResidue__h9230[4:3] == 2'd0 &&
	       !pmtuResidue__h9230[2] &&
	       pmtuResidue__h9230[1:0] == 2'd0) ?
		25'd0 :
		25'd1) ;
  assign MUX_dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_write_1__VAL_2 =
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg - 25'd1 ;
  assign MUX_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg_write_1__VAL_1 =
	     (sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port1__read &&
	      !sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port1__read) ?
	       x__h41815 :
	       x__h41903 ;
  assign MUX_sq_pendingWorkReqBuf_deqPtrReg_write_1__VAL_1 =
	     sq_pendingWorkReqBuf_popReg_port1__read ?
	       sq_pendingWorkReqBuf_deqPtrReg + 2'd1 :
	       sq_pendingWorkReqBuf_deqPtrReg ;
  assign MUX_sq_pendingWorkReqBuf_emptyReg_write_1__VAL_1 =
	     (!sq_pendingWorkReqBuf_pushReg_port1__read[679] &&
	      sq_pendingWorkReqBuf_popReg_port1__read) ?
	       sq_pendingWorkReqBuf_itemCnt_Q_OUT[2:1] == 2'd0 &&
	       sq_pendingWorkReqBuf_itemCnt_Q_OUT[0] :
	       (!sq_pendingWorkReqBuf_pushReg_port1__read[679] ||
		sq_pendingWorkReqBuf_popReg_port1__read) &&
	       sq_pendingWorkReqBuf_emptyReg ;
  assign MUX_sq_pendingWorkReqBuf_enqPtrReg_write_1__VAL_1 =
	     sq_pendingWorkReqBuf_pushReg_port1__read[679] ?
	       sq_pendingWorkReqBuf_enqPtrReg + 2'd1 :
	       sq_pendingWorkReqBuf_enqPtrReg ;
  assign MUX_sq_pendingWorkReqBuf_fullReg_write_1__VAL_1 =
	     (sq_pendingWorkReqBuf_pushReg_port1__read[679] ||
	      !sq_pendingWorkReqBuf_popReg_port1__read) &&
	     IF_sq_pendingWorkReqBuf_pushReg_port1__read__7_ETC___d702 ;
  assign MUX_sq_pendingWorkReqBuf_headReg_write_1__VAL_2 =
	     { 1'd1,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1463,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1521,
	       enumBits__h93928,
	       x__h39125,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1561,
	       x__h39399,
	       x__h39664,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1618,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1619,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1620,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1621,
	       value__h99740,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1624,
	       value__h99767,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1626,
	       value__h99797,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1629,
	       value__h99824,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1631,
	       value__h99854,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1634,
	       value__h99881,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1636,
	       value__h99908,
	       NOT_sq_retryHandler_retryReasonReg_431_EQ_4_46_ETC___d1656 } ;
  assign MUX_sq_pendingWorkReqBuf_scanAlmostDoneReg_write_1__VAL_1 =
	     sq_pendingWorkReqBuf_itemCnt_Q_OUT[2:1] == 2'd0 &&
	     sq_pendingWorkReqBuf_itemCnt_Q_OUT[0] ;
  assign MUX_sq_pendingWorkReqBuf_scanAlmostDoneReg_write_1__VAL_2 =
	     !sq_pendingWorkReqBuf_scanCnt_Q_OUT[2] &&
	     sq_pendingWorkReqBuf_scanCnt_Q_OUT[1] &&
	     !sq_pendingWorkReqBuf_scanCnt_Q_OUT[0] ;
  assign MUX_sq_pendingWorkReqBuf_scanPtrReg_write_1__VAL_2 =
	     sq_pendingWorkReqBuf_scanPtrReg + 2'd1 ;
  assign MUX_sq_pendingWorkReqBuf_scanStateReg_write_1__VAL_3 =
	     sq_pendingWorkReqBuf_scanStopReg_port1__read ?
	       2'd0 :
	       (sq_pendingWorkReqBuf_preScanRestartReg_port1__read ?
		  2'd1 :
		  2'd0) ;
  assign MUX_sq_reqGenSQ_isFirstOrOnlyReqPktReg_write_1__VAL_1 =
	     sq_reqGenSQ_reqCountQ_D_OUT[5] ||
	     !sq_reqGenSQ_isFirstOrOnlyReqPktReg &&
	     sq_reqGenSQ_remainingPktNumReg == 25'd0 ;
  assign MUX_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg_write_1__VAL_1 =
	     IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1734 &&
	     IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1737 !=
	     2'd1 ;
  assign MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_enq_1__VAL_2 =
	     { tmpData__h49087[255:0],
	       tmpByteEn__h49088[31:0],
	       sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_isFirstReg,
	       payloadGenerator4SQ_bramQ2PipeOut_postBramQ_D_OUT[0] &&
	       bits__h49179 == 2'd0 } ;
  assign MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_enq_1__VAL_3 =
	     { leftShiftData__h49541, leftShiftByteEn__h49542, 2'd1 } ;
  assign MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg_write_1__VAL_1 =
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg -
	     2'd1 ;
  assign MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg_write_1__VAL_2 =
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[0] ?
	       2'd0 :
	       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[9:8] -
	       2'd1 ;
  assign MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg_write_1__VAL_1 =
	     { rightShiftHeaderLastFragData__h48757,
	       rightShiftHeaderLastFragByteEn__h48758,
	       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT[1],
	       !sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerHasPayloadReg } ;
  assign MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__VAL_1 =
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerHasPayloadReg ?
	       2'd2 :
	       2'd0 ;
  assign MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__VAL_2 =
	     (bits__h49179 == 2'd0) ? bits__h49179 : 2'd3 ;
  assign MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__VAL_3 =
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[0] ?
	       2'd2 :
	       2'd1 ;
  assign MUX_sq_respHandleSQ_incomingRespQ_enq_1__VAL_1 =
	     { 679'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,
	       respPktPipe_metaDataQ_D_OUT,
	       respPktPipe_metaDataQ_D_OUT[626:618],
	       1'd0,
	       respPktPipe_metaDataQ_D_OUT[616:615],
	       4'd0,
	       respPktPipe_metaDataQ_D_OUT[610:595],
	       8'd0,
	       respPktPipe_metaDataQ_D_OUT[586:562],
	       7'd0,
	       respPktPipe_metaDataQ_D_OUT[554:531],
	       1'd0,
	       respPktPipe_metaDataQ_D_OUT[529:499],
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd0 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd6 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd13 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd4 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd5 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd23 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd10 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd11 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd12 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd19 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd20 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd16 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd17 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd18,
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd2 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd3 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd22 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd8 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd9 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd15 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd4 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd5 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd23 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd10 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd11 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd12 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd19 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd20 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd16 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd17 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd18,
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd13 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd14 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd15 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd16,
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd18,
	       10'd299 } ;
  assign MUX_sq_respHandleSQ_incomingRespQ_enq_1__VAL_3 =
	     { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1463,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1521,
	       enumBits__h93928,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1561,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1618,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1619,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1620,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1621,
	       value__h99740,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1624,
	       value__h99767,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1626,
	       value__h99797,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1629,
	       value__h99824,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1631,
	       value__h99854,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1634,
	       value__h99881,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1636,
	       value__h99908,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1474,
	       value__h99939,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1492,
	       value__h99966,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1649,
	       SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d1650,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1652,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1653,
	       sq_respHandleSQ_preStagePktMetaDataReg,
	       sq_respHandleSQ_preStageReqPktInfoReg[134:126],
	       1'd0,
	       sq_respHandleSQ_preStageReqPktInfoReg[124:123],
	       4'd0,
	       sq_respHandleSQ_preStageReqPktInfoReg[118:103],
	       8'd0,
	       sq_respHandleSQ_preStageReqPktInfoReg[94:70],
	       7'd0,
	       sq_respHandleSQ_preStageReqPktInfoReg[62:39],
	       1'd0,
	       sq_respHandleSQ_preStageReqPktInfoReg[37:0],
	       sq_respHandleSQ_retryResetReqReg,
	       sq_respHandleSQ_preStageWorkCompReqTypeReg,
	       sq_respHandleSQ_preStageWorkReqAckTypeReg } ;
  assign MUX_sq_respHandleSQ_incomingRespQ_enq_1__VAL_4 =
	     { 679'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,
	       respPktPipe_metaDataQ_D_OUT,
	       respPktPipe_metaDataQ_D_OUT[626:618],
	       1'd0,
	       respPktPipe_metaDataQ_D_OUT[616:615],
	       4'd0,
	       respPktPipe_metaDataQ_D_OUT[610:595],
	       8'd0,
	       respPktPipe_metaDataQ_D_OUT[586:562],
	       7'd0,
	       respPktPipe_metaDataQ_D_OUT[554:531],
	       46'h0AAAAAAAB129 } ;
  assign MUX_sq_respHandleSQ_incomingRespQ_enq_1__VAL_5 =
	     { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1463,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1521,
	       enumBits__h93928,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1561,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1618,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1619,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1620,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1621,
	       value__h99740,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1624,
	       value__h99767,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1626,
	       value__h99797,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1629,
	       value__h99824,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1631,
	       value__h99854,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1634,
	       value__h99881,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1636,
	       value__h99908,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1474,
	       value__h99939,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1492,
	       value__h99966,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1649,
	       SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d1650,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1652,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1653,
	       787'h000002AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA12882AAA802AAAAA802AAAAA8AAAAAAAB38,
	       sq_respHandleSQ_hasTimeOutErrReg ? 4'd13 : 4'd12 } ;
  assign MUX_sq_retryHandler_isRnrWaitCntZeroReg_write_1__VAL_1 =
	     sq_retryHandler_rnrWaitCntReg[26:1] == 26'd0 &&
	     sq_retryHandler_rnrWaitCntReg[0] ;
  assign MUX_sq_retryHandler_isTimeOutCntHighPartZeroReg_write_1__VAL_1 =
	     !sq_retryHandler_resetTimeOutQ_EMPTY_N &&
	     sq_retryHandler_retryCntrlStateReg == 2'd0 &&
	     (!sq_retryHandler_isTimeOutCntHighPartZeroReg ||
	      !sq_retryHandler_isTimeOutCntLowPartZeroReg) &&
	     sq_retryHandler_timeOutCntReg[41:21] == 21'd0 ;
  assign MUX_sq_retryHandler_isTimeOutCntLowPartZeroReg_write_1__VAL_1 =
	     !sq_retryHandler_resetTimeOutQ_EMPTY_N &&
	     sq_retryHandler_retryCntrlStateReg == 2'd0 &&
	     (!sq_retryHandler_isTimeOutCntHighPartZeroReg ||
	      !sq_retryHandler_isTimeOutCntLowPartZeroReg) &&
	     sq_retryHandler_timeOutCntReg[20:0] == 21'd0 ;
  assign MUX_sq_retryHandler_retryCntReg_write_1__VAL_1 =
	     sq_retryHandler_updateRetryCntQ_D_OUT[3] ?
	       x__h35617 :
	       cntrl_maxRetryCntReg ;
  assign MUX_sq_retryHandler_retryHandleStateReg_write_1__VAL_3 =
	     (sq_retryHandler_retryReasonReg == 3'd1) ? 3'd2 : 3'd4 ;
  assign MUX_sq_retryHandler_rnrCntReg_write_1__VAL_1 =
	     sq_retryHandler_updateRetryCntQ_D_OUT[3] ?
	       x__h35647 :
	       cntrl_maxRnrCntReg ;
  assign MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_1 =
	     sq_retryHandler_rnrWaitCntReg - 27'd1 ;
  always@(rnrTimer__h36783)
  begin
    case (rnrTimer__h36783)
      5'd0: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd109226667;
      5'd1: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd1667;
      5'd2: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd3334;
      5'd3: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd5000;
      5'd4: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd6667;
      5'd5: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd10000;
      5'd6: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd13334;
      5'd7: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd20000;
      5'd8: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd26667;
      5'd9: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd40000;
      5'd10: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd53334;
      5'd11: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd80000;
      5'd12: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd106667;
      5'd13: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd160000;
      5'd14: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd213334;
      5'd15: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd320000;
      5'd16: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd426667;
      5'd17: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd640000;
      5'd18: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd853334;
      5'd19: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd1280000;
      5'd20: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd1706667;
      5'd21: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd2560000;
      5'd22: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd3413334;
      5'd23: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd5120000;
      5'd24: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd6826667;
      5'd25: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd10240000;
      5'd26: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd13653334;
      5'd27: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd20480000;
      5'd28: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd27306667;
      5'd29: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd40960000;
      5'd30: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd54613334;
      5'd31: MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 = 27'd81920000;
    endcase
  end
  assign MUX_sq_retryHandler_timeOutCntReg_write_1__VAL_1 =
	     (sq_retryHandler_resetTimeOutQ_EMPTY_N ||
	      sq_retryHandler_retryCntrlStateReg != 2'd0 ||
	      sq_retryHandler_isTimeOutCntHighPartZeroReg &&
	      sq_retryHandler_isTimeOutCntLowPartZeroReg) ?
	       x__h32835 :
	       x__h33715 ;
  assign MUX_sq_workCompGenSQ_workCompOutQ4SQ_enq_1__VAL_2 =
	     { sq_workCompGenSQ_genWorkCompQ_D_OUT[223:152],
	       12'd5,
	       sq_workCompGenSQ_genWorkCompQ_D_OUT[139:2] } ;

  // inlined wires
  assign payloadGenerator4SQ_payloadBufQ_wDataIn_wget =
	     { dmaReadCntrl4SQ_respQ_D_OUT[291:36],
	       dmaReadCntrl4SQ_respQ_D_OUT[0] ?
		 y_avValue_byteEn__h17055 :
		 dmaReadCntrl4SQ_respQ_D_OUT[35:4],
	       dmaReadCntrl4SQ_respQ_D_OUT[3:2] } ;
  assign payloadGenerator4SQ_payloadBufQ_wDataIn_whas =
	     CAN_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding ;
  assign payloadGenerator4SQ_payloadBufQ_wDataOut_wget =
	     (payloadGenerator4SQ_payloadBufQ_rCache[300] &&
	      payloadGenerator4SQ_payloadBufQ_rCache[299:290] ==
	      payloadGenerator4SQ_payloadBufQ_rRdPtr) ?
	       payloadGenerator4SQ_payloadBufQ_rCache[289:0] :
	       payloadGenerator4SQ_payloadBufQ_memory_DOB ;
  assign payloadGenerator4SQ_payloadBufQ_wDataOut_whas = 1'd1 ;
  assign _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_preStateReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_pendingWorkReqPipeOut_pipeMuxOutQ_EMPTY_N &&
	     (IF_cntrl_stateReg_EQ_3_AND_sq_pendingWorkReqPi_ETC___d1880 ||
	      sq_reqGenSQ_workReqPayloadGenQ_FULL_N) ;
  assign _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_preStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvWorkReq ;
  assign _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_stateReg_wget = 1'b1 ;
  assign _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvWorkReq ;
  assign _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_sqTypeReg_wget = 1'b1 ;
  assign _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_sqTypeReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvWorkReq ;
  assign _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_sqpnReg_wget = 1'b1 ;
  assign _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_sqpnReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvWorkReq ;
  assign _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_pmtuReg_wget =
	     IF_cntrl_stateReg_EQ_3_AND_sq_pendingWorkReqPi_ETC___d2074 ;
  assign _read_RL_sq_reqGenSQ_recvWorkReq_EN_cntrl_pmtuReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvWorkReq ;
  assign _read_RL_sq_reqGenSQ_recvWorkReq_EN_sq_pendingWorkReqBuf_emptyReg_wget =
	     sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[606] &&
	     cntrl_stateReg == 4'd3 ;
  assign _read_RL_sq_reqGenSQ_recvWorkReq_EN_sq_pendingWorkReqBuf_emptyReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvWorkReq ;
  assign _first_RL_sq_reqGenSQ_recvWorkReq_EN_sq_pendingWorkReqPipeOut_pipeMuxOutQ_wget =
	     1'b1 ;
  assign _first_RL_sq_reqGenSQ_recvWorkReq_EN_sq_pendingWorkReqPipeOut_pipeMuxOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvWorkReq ;
  assign _deq_RL_sq_reqGenSQ_recvWorkReq_EN_sq_pendingWorkReqPipeOut_pipeMuxOutQ_wget =
	     IF_cntrl_stateReg_EQ_3_AND_sq_pendingWorkReqPi_ETC___d2074 ;
  assign _deq_RL_sq_reqGenSQ_recvWorkReq_EN_sq_pendingWorkReqPipeOut_pipeMuxOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvWorkReq ;
  assign _i_notEmpty_RL_sq_reqGenSQ_recvWorkReq_EN_sq_pendingWorkReqPipeOut_pipeMuxOutQ_wget =
	     (IF_cntrl_stateReg_EQ_3_AND_sq_pendingWorkReqPi_ETC___d1880 ||
	      sq_reqGenSQ_workReqPayloadGenQ_FULL_N) &&
	     (cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 ||
	      cntrl_stateReg == 4'd6) ;
  assign _i_notEmpty_RL_sq_reqGenSQ_recvWorkReq_EN_sq_pendingWorkReqPipeOut_pipeMuxOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvWorkReq ;
  assign _enq_RL_sq_reqGenSQ_recvWorkReq_EN_sq_reqGenSQ_workReqPayloadGenQ_wget =
	     IF_cntrl_stateReg_EQ_3_AND_sq_pendingWorkReqPi_ETC___d2074 ;
  assign _enq_RL_sq_reqGenSQ_recvWorkReq_EN_sq_reqGenSQ_workReqPayloadGenQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvWorkReq ;
  assign _i_notFull_RL_sq_reqGenSQ_recvWorkReq_EN_sq_reqGenSQ_workReqPayloadGenQ_wget =
	     !IF_cntrl_stateReg_EQ_3_AND_sq_pendingWorkReqPi_ETC___d1880 &&
	     sq_pendingWorkReqPipeOut_pipeMuxOutQ_EMPTY_N &&
	     (cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 ||
	      cntrl_stateReg == 4'd6) ;
  assign _i_notFull_RL_sq_reqGenSQ_recvWorkReq_EN_sq_reqGenSQ_workReqPayloadGenQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvWorkReq ;
  assign _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_cntrl_preStateReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     (!sq_reqGenSQ_workReqPayloadGenQ_D_OUT[3] ||
	      payloadGenerator4SQ_payloadGenReqQ_FULL_N) &&
	     sq_reqGenSQ_workReqPayloadGenQ_EMPTY_N &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqPktNumQ_FULL_N ;
  assign _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_cntrl_preStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq ;
  assign _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_cntrl_stateReg_wget =
	     cntrl_preStateReg == 4'd3 &&
	     (!sq_reqGenSQ_workReqPayloadGenQ_D_OUT[3] ||
	      payloadGenerator4SQ_payloadGenReqQ_FULL_N) &&
	     sq_reqGenSQ_workReqPayloadGenQ_EMPTY_N &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqPktNumQ_FULL_N ;
  assign _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq ;
  assign _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_cntrl_sqpnReg_wget =
	     sq_reqGenSQ_workReqPayloadGenQ_D_OUT[3] ;
  assign _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_cntrl_sqpnReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq ;
  assign _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_cntrl_pmtuReg_wget =
	     sq_reqGenSQ_workReqPayloadGenQ_D_OUT[3] ;
  assign _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_cntrl_pmtuReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq ;
  assign _enq_RL_sq_reqGenSQ_issuePayloadGenReq_EN_payloadGenerator4SQ_payloadGenReqQ_wget =
	     sq_reqGenSQ_workReqPayloadGenQ_D_OUT[3] ;
  assign _enq_RL_sq_reqGenSQ_issuePayloadGenReq_EN_payloadGenerator4SQ_payloadGenReqQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq ;
  assign _i_notFull_RL_sq_reqGenSQ_issuePayloadGenReq_EN_payloadGenerator4SQ_payloadGenReqQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_workReqPayloadGenQ_D_OUT[3] &&
	     sq_reqGenSQ_workReqPayloadGenQ_EMPTY_N &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqPktNumQ_FULL_N ;
  assign _i_notFull_RL_sq_reqGenSQ_issuePayloadGenReq_EN_payloadGenerator4SQ_payloadGenReqQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq ;
  assign _first_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPayloadGenQ_wget =
	     1'b1 ;
  assign _first_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPayloadGenQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq ;
  assign _deq_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPayloadGenQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPayloadGenQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq ;
  assign _i_notEmpty_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPayloadGenQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     (!sq_reqGenSQ_workReqPayloadGenQ_D_OUT[3] ||
	      payloadGenerator4SQ_payloadGenReqQ_FULL_N) &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqPktNumQ_FULL_N ;
  assign _i_notEmpty_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPayloadGenQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq ;
  assign _enq_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPktNumQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPktNumQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq ;
  assign _i_notFull_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPktNumQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     (!sq_reqGenSQ_workReqPayloadGenQ_D_OUT[3] ||
	      payloadGenerator4SQ_payloadGenReqQ_FULL_N) &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqPayloadGenQ_EMPTY_N ;
  assign _i_notFull_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_workReqPktNumQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq ;
  assign _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_isNormalStateReg_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     (!sq_reqGenSQ_workReqPayloadGenQ_D_OUT[3] ||
	      payloadGenerator4SQ_payloadGenReqQ_FULL_N) &&
	     sq_reqGenSQ_workReqPktNumQ_FULL_N &&
	     sq_reqGenSQ_workReqPayloadGenQ_EMPTY_N ;
  assign _read_RL_sq_reqGenSQ_issuePayloadGenReq_EN_sq_reqGenSQ_isNormalStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq ;
  assign _read_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_cntrl_preStateReg_wget =
	     cntrl_stateReg == 4'd3 && sq_reqGenSQ_workReqPsnQ_FULL_N &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqPktNumQ_EMPTY_N ;
  assign _read_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_cntrl_preStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq ;
  assign _read_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_cntrl_stateReg_wget =
	     cntrl_preStateReg == 4'd3 && sq_reqGenSQ_workReqPsnQ_FULL_N &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqPktNumQ_EMPTY_N ;
  assign _read_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq ;
  assign _first_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPktNumQ_wget =
	     1'b1 ;
  assign _first_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPktNumQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq ;
  assign _deq_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPktNumQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPktNumQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq ;
  assign _i_notEmpty_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPktNumQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqPsnQ_FULL_N ;
  assign _i_notEmpty_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPktNumQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq ;
  assign _enq_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq ;
  assign _i_notFull_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqPktNumQ_EMPTY_N ;
  assign _i_notFull_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq ;
  assign _read_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_isNormalStateReg_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_workReqPktNumQ_EMPTY_N &&
	     sq_reqGenSQ_workReqPsnQ_FULL_N ;
  assign _read_RL_sq_reqGenSQ_calcPktNum4NewWorkReq_EN_sq_reqGenSQ_isNormalStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq ;
  assign _read_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_cntrl_preStateReg_wget =
	     cntrl_stateReg == 4'd3 && sq_reqGenSQ_workReqCheckQ_FULL_N &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqPsnQ_EMPTY_N ;
  assign _read_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_cntrl_preStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq ;
  assign _read_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_cntrl_stateReg_wget =
	     cntrl_preStateReg == 4'd3 && sq_reqGenSQ_workReqCheckQ_FULL_N &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqPsnQ_EMPTY_N ;
  assign _read_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq ;
  assign _read_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_cntrl_npsnReg_wget =
	     sq_reqGenSQ_workReqPsnQ_D_OUT[4] ;
  assign _read_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_cntrl_npsnReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq ;
  assign _write_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_cntrl_npsnReg_wget =
	     sq_reqGenSQ_workReqPsnQ_D_OUT[4] ;
  assign _write_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_cntrl_npsnReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq ;
  assign _first_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_wget =
	     1'b1 ;
  assign _first_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq ;
  assign _deq_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq ;
  assign _i_notEmpty_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqCheckQ_FULL_N ;
  assign _i_notEmpty_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqPsnQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq ;
  assign _enq_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqCheckQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqCheckQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq ;
  assign _i_notFull_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqCheckQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqPsnQ_EMPTY_N ;
  assign _i_notFull_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_workReqCheckQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq ;
  assign _read_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_isNormalStateReg_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_workReqPsnQ_EMPTY_N &&
	     sq_reqGenSQ_workReqCheckQ_FULL_N ;
  assign _read_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq_EN_sq_reqGenSQ_isNormalStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq ;
  assign _read_RL_sq_reqGenSQ_checkPendingWorkReq_EN_cntrl_preStateReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     (sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	      !sq_reqGenSQ_workReqCheckQ_D_OUT[5] ||
	      sq_reqGenSQ_reqCountQ_FULL_N) &&
	     sq_reqGenSQ_workReqCheckQ_EMPTY_N &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqOutQ_FULL_N ;
  assign _read_RL_sq_reqGenSQ_checkPendingWorkReq_EN_cntrl_preStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq ;
  assign _read_RL_sq_reqGenSQ_checkPendingWorkReq_EN_cntrl_stateReg_wget =
	     cntrl_preStateReg == 4'd3 &&
	     (sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	      !sq_reqGenSQ_workReqCheckQ_D_OUT[5] ||
	      sq_reqGenSQ_reqCountQ_FULL_N) &&
	     sq_reqGenSQ_workReqCheckQ_EMPTY_N &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqOutQ_FULL_N ;
  assign _read_RL_sq_reqGenSQ_checkPendingWorkReq_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq ;
  assign _read_RL_sq_reqGenSQ_checkPendingWorkReq_EN_cntrl_sqTypeReg_wget =
	     !sq_reqGenSQ_workReqCheckQ_D_OUT[4] &&
	     sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	     !sq_reqGenSQ_workReqCheckQ_D_OUT[5] ;
  assign _read_RL_sq_reqGenSQ_checkPendingWorkReq_EN_cntrl_sqTypeReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq ;
  assign _enq_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq ;
  assign _i_notFull_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     (sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	      !sq_reqGenSQ_workReqCheckQ_D_OUT[5] ||
	      sq_reqGenSQ_reqCountQ_FULL_N) &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqCheckQ_EMPTY_N ;
  assign _i_notFull_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq ;
  assign _first_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqCheckQ_wget =
	     1'b1 ;
  assign _first_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqCheckQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq ;
  assign _deq_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqCheckQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqCheckQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq ;
  assign _i_notEmpty_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqCheckQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     (sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	      !sq_reqGenSQ_workReqCheckQ_D_OUT[5] ||
	      sq_reqGenSQ_reqCountQ_FULL_N) &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqOutQ_FULL_N ;
  assign _i_notEmpty_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_workReqCheckQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq ;
  assign _enq_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_reqCountQ_wget =
	     !sq_reqGenSQ_workReqCheckQ_D_OUT[1] ||
	     sq_reqGenSQ_workReqCheckQ_D_OUT[5] ;
  assign _enq_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_reqCountQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq ;
  assign _i_notFull_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_reqCountQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     (!sq_reqGenSQ_workReqCheckQ_D_OUT[1] ||
	      sq_reqGenSQ_workReqCheckQ_D_OUT[5]) &&
	     sq_reqGenSQ_workReqCheckQ_EMPTY_N &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqOutQ_FULL_N ;
  assign _i_notFull_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_reqCountQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq ;
  assign _read_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_isNormalStateReg_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     (sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	      !sq_reqGenSQ_workReqCheckQ_D_OUT[5] ||
	      sq_reqGenSQ_reqCountQ_FULL_N) &&
	     sq_reqGenSQ_workReqOutQ_FULL_N &&
	     sq_reqGenSQ_workReqCheckQ_EMPTY_N ;
  assign _read_RL_sq_reqGenSQ_checkPendingWorkReq_EN_sq_reqGenSQ_isNormalStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq ;
  assign _read_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_cntrl_preStateReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     (!sq_reqGenSQ_workReqOutQ_D_OUT[4] ||
	      !sq_reqGenSQ_workReqOutQ_D_OUT[2] ||
	      sq_reqGenSQ_pendingWorkReqOutQ_FULL_N) &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqOutQ_EMPTY_N ;
  assign _read_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_cntrl_preStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_outputNewPendingWorkReq ;
  assign _read_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_cntrl_stateReg_wget =
	     cntrl_preStateReg == 4'd3 &&
	     (!sq_reqGenSQ_workReqOutQ_D_OUT[4] ||
	      !sq_reqGenSQ_workReqOutQ_D_OUT[2] ||
	      sq_reqGenSQ_pendingWorkReqOutQ_FULL_N) &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqOutQ_EMPTY_N ;
  assign _read_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_outputNewPendingWorkReq ;
  assign _enq_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_pendingWorkReqOutQ_wget =
	     sq_reqGenSQ_workReqOutQ_D_OUT[4] &&
	     sq_reqGenSQ_workReqOutQ_D_OUT[2] ;
  assign _enq_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_pendingWorkReqOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_outputNewPendingWorkReq ;
  assign _i_notFull_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_pendingWorkReqOutQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_workReqOutQ_D_OUT[4] &&
	     sq_reqGenSQ_workReqOutQ_D_OUT[2] &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_workReqOutQ_EMPTY_N ;
  assign _i_notFull_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_pendingWorkReqOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_outputNewPendingWorkReq ;
  assign _first_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_wget =
	     1'b1 ;
  assign _first_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_outputNewPendingWorkReq ;
  assign _deq_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_outputNewPendingWorkReq ;
  assign _i_notEmpty_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_isNormalStateReg &&
	     (!sq_reqGenSQ_workReqOutQ_D_OUT[4] ||
	      !sq_reqGenSQ_workReqOutQ_D_OUT[2] ||
	      sq_reqGenSQ_pendingWorkReqOutQ_FULL_N) ;
  assign _i_notEmpty_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_workReqOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_outputNewPendingWorkReq ;
  assign _read_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_isNormalStateReg_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_workReqOutQ_EMPTY_N &&
	     (!sq_reqGenSQ_workReqOutQ_D_OUT[4] ||
	      !sq_reqGenSQ_workReqOutQ_D_OUT[2] ||
	      sq_reqGenSQ_pendingWorkReqOutQ_FULL_N) ;
  assign _read_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_isNormalStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_outputNewPendingWorkReq ;
  assign _read_RL_sq_reqGenSQ_countReqPkt_EN_cntrl_preStateReg_wget =
	     cntrl_stateReg == 4'd3 && sq_reqGenSQ_reqHeaderPrepareQ_FULL_N &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_reqCountQ_EMPTY_N ;
  assign _read_RL_sq_reqGenSQ_countReqPkt_EN_cntrl_preStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;
  assign _read_RL_sq_reqGenSQ_countReqPkt_EN_cntrl_stateReg_wget =
	     cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_FULL_N &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_reqCountQ_EMPTY_N ;
  assign _read_RL_sq_reqGenSQ_countReqPkt_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;
  assign _read_RL_sq_reqGenSQ_countReqPkt_EN_cntrl_sqTypeReg_wget =
	     !sq_reqGenSQ_reqCountQ_D_OUT[5] ;
  assign _read_RL_sq_reqGenSQ_countReqPkt_EN_cntrl_sqTypeReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;
  assign _first_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqCountQ_wget =
	     1'b1 ;
  assign _first_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqCountQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;
  assign _deq_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqCountQ_wget =
	     MUX_sq_reqGenSQ_isFirstOrOnlyReqPktReg_write_1__VAL_1 ;
  assign _deq_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqCountQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;
  assign _i_notEmpty_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqCountQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_reqHeaderPrepareQ_FULL_N ;
  assign _i_notEmpty_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqCountQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;
  assign _enq_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqHeaderPrepareQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqHeaderPrepareQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;
  assign _i_notFull_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqHeaderPrepareQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_reqCountQ_EMPTY_N ;
  assign _i_notFull_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_reqHeaderPrepareQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;
  assign _read_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_remainingPktNumReg_wget =
	     !sq_reqGenSQ_isFirstOrOnlyReqPktReg ;
  assign _read_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_remainingPktNumReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;
  assign _write_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_remainingPktNumReg_wget =
	     1'd1 ;
  assign _write_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_remainingPktNumReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;
  assign _read_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_curPsnReg_wget =
	     !sq_reqGenSQ_isFirstOrOnlyReqPktReg ;
  assign _read_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_curPsnReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;
  assign _write_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_curPsnReg_wget =
	     1'd1 ;
  assign _write_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_curPsnReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;
  assign _read_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_isNormalStateReg_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_reqCountQ_EMPTY_N &&
	     sq_reqGenSQ_reqHeaderPrepareQ_FULL_N ;
  assign _read_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_isNormalStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;
  assign _read_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_isFirstOrOnlyReqPktReg_wget =
	     1'b1 ;
  assign _read_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_isFirstOrOnlyReqPktReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;
  assign _write_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_isFirstOrOnlyReqPktReg_wget =
	     1'd1 ;
  assign _write_RL_sq_reqGenSQ_countReqPkt_EN_sq_reqGenSQ_isFirstOrOnlyReqPktReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;
  assign _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_preStateReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2734 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_EMPTY_N &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_pendingReqHeaderQ_FULL_N ;
  assign _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_preStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen ;
  assign _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_stateReg_wget =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd1 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd0 &&
	     !IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2724 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	     cntrl_sqTypeReg == 4'd4 &&
	     sq_reqGenSQ_pendingReqHeaderQ_FULL_N &&
	     sq_reqGenSQ_reqHeaderPrepareQ_EMPTY_N ;
  assign _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen ;
  assign _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_sqTypeReg_wget =
	     1'b1 ;
  assign _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_sqTypeReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen ;
  assign _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_sqSigAllReg_wget =
	     !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] ||
	     !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd4 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd5 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd6 ;
  assign _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_sqSigAllReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen ;
  assign _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_sqpnReg_wget =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd1 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd0 &&
	     cntrl_sqTypeReg == 4'd4 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	     cntrl_sqTypeReg != 4'd2 &&
	     cntrl_sqTypeReg != 4'd3 ;
  assign _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_sqpnReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen ;
  assign _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_dqpnReg_wget =
	     cntrl_sqTypeReg == 4'd2 || cntrl_sqTypeReg == 4'd3 ||
	     cntrl_sqTypeReg == 4'd9 ;
  assign _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_dqpnReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen ;
  assign _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_pkeyReg_wget =
	     1'b1 ;
  assign _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_cntrl_pkeyReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen ;
  assign _first_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_reqHeaderPrepareQ_wget =
	     1'b1 ;
  assign _first_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_reqHeaderPrepareQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen ;
  assign _deq_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_reqHeaderPrepareQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_reqHeaderPrepareQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen ;
  assign _i_notEmpty_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_reqHeaderPrepareQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2734 &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_pendingReqHeaderQ_FULL_N ;
  assign _i_notEmpty_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_reqHeaderPrepareQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen ;
  assign _enq_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_pendingReqHeaderQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_pendingReqHeaderQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen ;
  assign _i_notFull_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_pendingReqHeaderQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2734 &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_reqHeaderPrepareQ_EMPTY_N ;
  assign _i_notFull_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_pendingReqHeaderQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen ;
  assign _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_isNormalStateReg_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2734 &&
	     sq_reqGenSQ_pendingReqHeaderQ_FULL_N &&
	     sq_reqGenSQ_reqHeaderPrepareQ_EMPTY_N ;
  assign _read_RL_sq_reqGenSQ_prepareReqHeaderGen_EN_sq_reqGenSQ_isNormalStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen ;
  assign _read_RL_sq_reqGenSQ_genReqHeader_EN_cntrl_preStateReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     (!sq_reqGenSQ_pendingReqHeaderQ_D_OUT[544] ||
	      !sq_reqGenSQ_pendingReqHeaderQ_D_OUT[545] ||
	      payloadGenerator4SQ_payloadGenRespQ_EMPTY_N) &&
	     sq_reqGenSQ_pendingReqHeaderQ_EMPTY_N &&
	     sq_reqGenSQ_reqHeaderGenQ_FULL_N &&
	     sq_reqGenSQ_isNormalStateReg ;
  assign _read_RL_sq_reqGenSQ_genReqHeader_EN_cntrl_preStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_genReqHeader ;
  assign _read_RL_sq_reqGenSQ_genReqHeader_EN_cntrl_stateReg_wget =
	     cntrl_preStateReg == 4'd3 &&
	     (!sq_reqGenSQ_pendingReqHeaderQ_D_OUT[544] ||
	      !sq_reqGenSQ_pendingReqHeaderQ_D_OUT[545] ||
	      payloadGenerator4SQ_payloadGenRespQ_EMPTY_N) &&
	     sq_reqGenSQ_pendingReqHeaderQ_EMPTY_N &&
	     sq_reqGenSQ_reqHeaderGenQ_FULL_N &&
	     sq_reqGenSQ_isNormalStateReg ;
  assign _read_RL_sq_reqGenSQ_genReqHeader_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_genReqHeader ;
  assign _first_RL_sq_reqGenSQ_genReqHeader_EN_payloadGenerator4SQ_payloadGenRespQ_wget =
	     1'b1 ;
  assign _first_RL_sq_reqGenSQ_genReqHeader_EN_payloadGenerator4SQ_payloadGenRespQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_genReqHeader ;
  assign _deq_RL_sq_reqGenSQ_genReqHeader_EN_payloadGenerator4SQ_payloadGenRespQ_wget =
	     sq_reqGenSQ_pendingReqHeaderQ_D_OUT[544] &&
	     sq_reqGenSQ_pendingReqHeaderQ_D_OUT[545] ;
  assign _deq_RL_sq_reqGenSQ_genReqHeader_EN_payloadGenerator4SQ_payloadGenRespQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_genReqHeader ;
  assign _i_notEmpty_RL_sq_reqGenSQ_genReqHeader_EN_payloadGenerator4SQ_payloadGenRespQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_pendingReqHeaderQ_D_OUT[544] &&
	     sq_reqGenSQ_pendingReqHeaderQ_D_OUT[545] &&
	     sq_reqGenSQ_pendingReqHeaderQ_EMPTY_N &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_reqHeaderGenQ_FULL_N ;
  assign _i_notEmpty_RL_sq_reqGenSQ_genReqHeader_EN_payloadGenerator4SQ_payloadGenRespQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_genReqHeader ;
  assign _first_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_pendingReqHeaderQ_wget =
	     1'b1 ;
  assign _first_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_pendingReqHeaderQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_genReqHeader ;
  assign _deq_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_pendingReqHeaderQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_pendingReqHeaderQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_genReqHeader ;
  assign _i_notEmpty_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_pendingReqHeaderQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     (!sq_reqGenSQ_pendingReqHeaderQ_D_OUT[544] ||
	      !sq_reqGenSQ_pendingReqHeaderQ_D_OUT[545] ||
	      payloadGenerator4SQ_payloadGenRespQ_EMPTY_N) &&
	     sq_reqGenSQ_reqHeaderGenQ_FULL_N &&
	     sq_reqGenSQ_isNormalStateReg ;
  assign _i_notEmpty_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_pendingReqHeaderQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_genReqHeader ;
  assign _enq_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_reqHeaderGenQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_reqHeaderGenQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_genReqHeader ;
  assign _i_notFull_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_reqHeaderGenQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     (!sq_reqGenSQ_pendingReqHeaderQ_D_OUT[544] ||
	      !sq_reqGenSQ_pendingReqHeaderQ_D_OUT[545] ||
	      payloadGenerator4SQ_payloadGenRespQ_EMPTY_N) &&
	     sq_reqGenSQ_pendingReqHeaderQ_EMPTY_N &&
	     sq_reqGenSQ_isNormalStateReg ;
  assign _i_notFull_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_reqHeaderGenQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_genReqHeader ;
  assign _read_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_isNormalStateReg_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     (!sq_reqGenSQ_pendingReqHeaderQ_D_OUT[544] ||
	      !sq_reqGenSQ_pendingReqHeaderQ_D_OUT[545] ||
	      payloadGenerator4SQ_payloadGenRespQ_EMPTY_N) &&
	     sq_reqGenSQ_pendingReqHeaderQ_EMPTY_N &&
	     sq_reqGenSQ_reqHeaderGenQ_FULL_N ;
  assign _read_RL_sq_reqGenSQ_genReqHeader_EN_sq_reqGenSQ_isNormalStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_genReqHeader ;
  assign _read_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_cntrl_preStateReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     IF_sq_reqGenSQ_reqHeaderGenQ_first__570_BIT_62_ETC___d3580 &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_reqHeaderGenQ_EMPTY_N ;
  assign _read_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_cntrl_preStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp ;
  assign _read_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_cntrl_stateReg_wget =
	     cntrl_preStateReg == 4'd3 &&
	     IF_sq_reqGenSQ_reqHeaderGenQ_first__570_BIT_62_ETC___d3580 &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_reqHeaderGenQ_EMPTY_N ;
  assign _read_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp ;
  assign _enq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_workCompGenReqOutQ_wget =
	     sq_reqGenSQ_reqHeaderGenQ_D_OUT[26] &&
	     sq_reqGenSQ_reqHeaderGenQ_D_OUT[24] ||
	     !sq_reqGenSQ_reqHeaderGenQ_D_OUT[620] ;
  assign _enq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_workCompGenReqOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp ;
  assign _i_notFull_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_workCompGenReqOutQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_reqHeaderGenQ_EMPTY_N &&
	     sq_reqGenSQ_reqHeaderGenQ_D_OUT[26] &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_reqHeaderGenQ_D_OUT[24] ;
  assign _i_notFull_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_workCompGenReqOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp ;
  assign _first_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderGenQ_wget =
	     1'b1 ;
  assign _first_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderGenQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp ;
  assign _deq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderGenQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderGenQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp ;
  assign _i_notEmpty_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderGenQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_isNormalStateReg &&
	     IF_sq_reqGenSQ_reqHeaderGenQ_first__570_BIT_62_ETC___d3580 ;
  assign _i_notEmpty_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderGenQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp ;
  assign _enq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderOutQ_wget =
	     sq_reqGenSQ_reqHeaderGenQ_D_OUT[620] &&
	     (!sq_reqGenSQ_reqHeaderGenQ_D_OUT[24] ||
	      !sq_reqGenSQ_reqHeaderGenQ_D_OUT[26]) ;
  assign _enq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp ;
  assign _i_notFull_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderOutQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     !sq_reqGenSQ_reqHeaderGenQ_D_OUT[24] &&
	     sq_reqGenSQ_psnReqOutQ_FULL_N &&
	     sq_reqGenSQ_reqHeaderGenQ_EMPTY_N &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_reqHeaderGenQ_D_OUT[620] ;
  assign _i_notFull_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp ;
  assign _enq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_psnReqOutQ_wget =
	     _enq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_reqHeaderOutQ_wget ;
  assign _enq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_psnReqOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp ;
  assign _i_notFull_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_psnReqOutQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     !sq_reqGenSQ_reqHeaderGenQ_D_OUT[24] &&
	     sq_reqGenSQ_reqHeaderGenQ_EMPTY_N &&
	     sq_reqGenSQ_reqHeaderGenQ_D_OUT[620] &&
	     sq_reqGenSQ_isNormalStateReg &&
	     sq_reqGenSQ_reqHeaderOutQ_FULL_N ;
  assign _i_notFull_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_psnReqOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp ;
  assign _read_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_isNormalStateReg_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_reqGenSQ_reqHeaderGenQ_EMPTY_N &&
	     IF_sq_reqGenSQ_reqHeaderGenQ_first__570_BIT_62_ETC___d3580 ;
  assign _read_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_isNormalStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp ;
  assign _write_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_isNormalStateReg_wget =
	     _enq_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_workCompGenReqOutQ_wget ;
  assign _write_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp_EN_sq_reqGenSQ_isNormalStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp ;
  assign _read_RL_sq_reqGenSQ_errFlushWR_EN_cntrl_stateReg_wget =
	     sq_reqGenSQ_workReqPayloadGenQ_EMPTY_N &&
	     (!sq_reqGenSQ_workReqPayloadGenQ_D_OUT[2] ||
	      !sq_reqGenSQ_workReqPayloadGenQ_D_OUT[1] ||
	      sq_reqGenSQ_pendingWorkReqOutQ_FULL_N) ;
  assign _read_RL_sq_reqGenSQ_errFlushWR_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_errFlushWR ;
  assign _enq_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_pendingWorkReqOutQ_wget =
	     sq_reqGenSQ_workReqPayloadGenQ_D_OUT[2] &&
	     sq_reqGenSQ_workReqPayloadGenQ_D_OUT[1] ;
  assign _enq_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_pendingWorkReqOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_errFlushWR ;
  assign _i_notFull_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_pendingWorkReqOutQ_wget =
	     sq_reqGenSQ_workReqPayloadGenQ_D_OUT[2] &&
	     sq_reqGenSQ_workReqPayloadGenQ_D_OUT[1] &&
	     sq_reqGenSQ_workReqPayloadGenQ_EMPTY_N &&
	     (cntrl_stateReg == 4'd6 ||
	      cntrl_stateReg == 4'd3 && !sq_reqGenSQ_isNormalStateReg) ;
  assign _i_notFull_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_pendingWorkReqOutQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_errFlushWR ;
  assign _first_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_workReqPayloadGenQ_wget =
	     1'b1 ;
  assign _first_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_workReqPayloadGenQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_errFlushWR ;
  assign _deq_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_workReqPayloadGenQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_workReqPayloadGenQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_errFlushWR ;
  assign _i_notEmpty_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_workReqPayloadGenQ_wget =
	     (!sq_reqGenSQ_workReqPayloadGenQ_D_OUT[2] ||
	      !sq_reqGenSQ_workReqPayloadGenQ_D_OUT[1] ||
	      sq_reqGenSQ_pendingWorkReqOutQ_FULL_N) &&
	     (cntrl_stateReg == 4'd6 ||
	      cntrl_stateReg == 4'd3 && !sq_reqGenSQ_isNormalStateReg) ;
  assign _i_notEmpty_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_workReqPayloadGenQ_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_errFlushWR ;
  assign _read_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_isNormalStateReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_reqGenSQ_workReqPayloadGenQ_EMPTY_N &&
	     (!sq_reqGenSQ_workReqPayloadGenQ_D_OUT[2] ||
	      !sq_reqGenSQ_workReqPayloadGenQ_D_OUT[1] ||
	      sq_reqGenSQ_pendingWorkReqOutQ_FULL_N) ;
  assign _read_RL_sq_reqGenSQ_errFlushWR_EN_sq_reqGenSQ_isNormalStateReg_whas =
	     CAN_FIRE_RL_sq_reqGenSQ_errFlushWR ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_cntrl_stateReg_wget =
	     sq_respHandleSQ_preStageStateReg == 2'd0 &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     respPktPipe_metaDataQ_EMPTY_N &&
	     !sq_pendingWorkReqBuf_emptyReg ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_cntrl_npsnReg_wget =
	     1'b1 ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_cntrl_npsnReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _first_RL_sq_respHandleSQ_preBuildRespInfo_EN_respPktPipe_metaDataQ_wget =
	     1'b1 ;
  assign _first_RL_sq_respHandleSQ_preBuildRespInfo_EN_respPktPipe_metaDataQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _i_notEmpty_RL_sq_respHandleSQ_preBuildRespInfo_EN_respPktPipe_metaDataQ_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd0 &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign _i_notEmpty_RL_sq_respHandleSQ_preBuildRespInfo_EN_respPktPipe_metaDataQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_dataVec_0_wget =
	     sq_pendingWorkReqBuf_deqPtrReg == 2'd0 ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_dataVec_0_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_dataVec_1_wget =
	     sq_pendingWorkReqBuf_deqPtrReg == 2'd1 ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_dataVec_1_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_dataVec_2_wget =
	     sq_pendingWorkReqBuf_deqPtrReg == 2'd2 ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_dataVec_2_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_dataVec_3_wget =
	     sq_pendingWorkReqBuf_deqPtrReg == 2'd3 ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_dataVec_3_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_deqPtrReg_wget =
	     1'b1 ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_deqPtrReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_emptyReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd0 &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     respPktPipe_metaDataQ_EMPTY_N &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_pendingWorkReqBuf_emptyReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageRespAndWorkReqRelationReg_wget =
	     1'd1 ;
  assign _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageRespAndWorkReqRelationReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStagePktMetaDataReg_wget =
	     1'd1 ;
  assign _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStagePktMetaDataReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageReqPktInfoReg_wget =
	     1'd1 ;
  assign _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageReqPktInfoReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageRespTypeReg_wget =
	     1'd1 ;
  assign _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageRespTypeReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageStateReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     respPktPipe_metaDataQ_EMPTY_N &&
	     !sq_pendingWorkReqBuf_emptyReg ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageStateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageStateReg_wget =
	     1'd1 ;
  assign _write_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_preStageStateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_recvErrRespReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd0 &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     respPktPipe_metaDataQ_EMPTY_N &&
	     !sq_pendingWorkReqBuf_emptyReg ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_recvErrRespReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_errOccurredReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd0 &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     respPktPipe_metaDataQ_EMPTY_N &&
	     !sq_pendingWorkReqBuf_emptyReg ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_errOccurredReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_retryFlushReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd0 &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     respPktPipe_metaDataQ_EMPTY_N &&
	     !sq_pendingWorkReqBuf_emptyReg ;
  assign _read_RL_sq_respHandleSQ_preBuildRespInfo_EN_sq_respHandleSQ_retryFlushReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_cntrl_stateReg_wget =
	     sq_respHandleSQ_preStageStateReg == 2'd1 &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_pendingWorkReqBuf_emptyReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd1 &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     !sq_respHandleSQ_errOccurredReg ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_pendingWorkReqBuf_emptyReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageRespAndWorkReqRelationReg_wget =
	     sq_respHandleSQ_preStagePktMetaDataReg[1] ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageRespAndWorkReqRelationReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStagePktMetaDataReg_wget =
	     1'b1 ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStagePktMetaDataReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageRespTypeReg_wget =
	     sq_respHandleSQ_preStagePktMetaDataReg[1] ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageRespTypeReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;
  assign _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageDeqPktMetaDataReg_wget =
	     1'd1 ;
  assign _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageDeqPktMetaDataReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;
  assign _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageDeqPendingWorkReqReg_wget =
	     1'd1 ;
  assign _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageDeqPendingWorkReqReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;
  assign _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageWorkReqAckTypeReg_wget =
	     1'd1 ;
  assign _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageWorkReqAckTypeReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;
  assign _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageWorkCompReqTypeReg_wget =
	     1'd1 ;
  assign _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageWorkCompReqTypeReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;
  assign _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_retryResetReqReg_wget =
	     1'd1 ;
  assign _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_retryResetReqReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageStateReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageStateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;
  assign _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageStateReg_wget =
	     1'd1 ;
  assign _write_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_preStageStateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_recvErrRespReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd1 &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     !sq_respHandleSQ_errOccurredReg ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_recvErrRespReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_errOccurredReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd1 &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_errOccurredReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_retryFlushReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd1 &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign _read_RL_sq_respHandleSQ_preProcRespInfo_EN_sq_respHandleSQ_retryFlushReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_cntrl_stateReg_wget =
	     sq_respHandleSQ_preStageStateReg == 2'd2 &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     (!sq_respHandleSQ_preStageDeqPendingWorkReqReg ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	     (!sq_respHandleSQ_preStageDeqPktMetaDataReg ||
	      respPktPipe_metaDataQ_EMPTY_N) &&
	     sq_respHandleSQ_incomingRespQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _deq_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_respPktPipe_metaDataQ_wget =
	     sq_respHandleSQ_preStageDeqPktMetaDataReg ;
  assign _deq_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_respPktPipe_metaDataQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _i_notEmpty_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_respPktPipe_metaDataQ_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd2 &&
	     sq_respHandleSQ_preStageDeqPktMetaDataReg &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     sq_respHandleSQ_incomingRespQ_FULL_N &&
	     (!sq_respHandleSQ_preStageDeqPendingWorkReqReg ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd2) ;
  assign _i_notEmpty_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_respPktPipe_metaDataQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_dataVec_0_wget =
	     sq_pendingWorkReqBuf_deqPtrReg == 2'd0 ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_dataVec_0_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_dataVec_1_wget =
	     sq_pendingWorkReqBuf_deqPtrReg == 2'd1 ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_dataVec_1_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_dataVec_2_wget =
	     sq_pendingWorkReqBuf_deqPtrReg == 2'd2 ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_dataVec_2_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_dataVec_3_wget =
	     sq_pendingWorkReqBuf_deqPtrReg == 2'd3 ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_dataVec_3_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_deqPtrReg_wget =
	     1'b1 ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_deqPtrReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_scanStateReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd2 &&
	     sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     (!sq_respHandleSQ_preStageDeqPktMetaDataReg ||
	      respPktPipe_metaDataQ_EMPTY_N) &&
	     sq_respHandleSQ_incomingRespQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_scanStateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_emptyReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd2 &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     (!sq_respHandleSQ_preStageDeqPendingWorkReqReg ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	     (!sq_respHandleSQ_preStageDeqPktMetaDataReg ||
	      respPktPipe_metaDataQ_EMPTY_N) &&
	     sq_respHandleSQ_incomingRespQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_emptyReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _port0__write_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_popReg_wget =
	     sq_respHandleSQ_preStageDeqPendingWorkReqReg ;
  assign _port0__write_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_popReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _port1__read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_scanStartReg_wget =
	     sq_respHandleSQ_preStageDeqPendingWorkReqReg ;
  assign _port1__read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_scanStartReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _port1__read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_preScanRestartReg_wget =
	     sq_respHandleSQ_preStageDeqPendingWorkReqReg ;
  assign _port1__read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_pendingWorkReqBuf_preScanRestartReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _enq_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_incomingRespQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_incomingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _i_notFull_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_incomingRespQ_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd2 &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     (!sq_respHandleSQ_preStageDeqPktMetaDataReg ||
	      respPktPipe_metaDataQ_EMPTY_N) &&
	     (!sq_respHandleSQ_preStageDeqPendingWorkReqReg ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd2) ;
  assign _i_notFull_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_incomingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStagePktMetaDataReg_wget =
	     1'b1 ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStagePktMetaDataReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageReqPktInfoReg_wget =
	     1'b1 ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageReqPktInfoReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageRespTypeReg_wget =
	     sq_respHandleSQ_preStageWorkReqAckTypeReg != 4'd8 &&
	     !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	     !sq_respHandleSQ_recvRetryRespReg ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageRespTypeReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageDeqPktMetaDataReg_wget =
	     1'b1 ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageDeqPktMetaDataReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageDeqPendingWorkReqReg_wget =
	     1'b1 ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageDeqPendingWorkReqReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageWorkReqAckTypeReg_wget =
	     1'b1 ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageWorkReqAckTypeReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageWorkCompReqTypeReg_wget =
	     1'b1 ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageWorkCompReqTypeReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_retryResetReqReg_wget =
	     1'b1 ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_retryResetReqReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageStateReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     (!sq_respHandleSQ_preStageDeqPendingWorkReqReg ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	     (!sq_respHandleSQ_preStageDeqPktMetaDataReg ||
	      respPktPipe_metaDataQ_EMPTY_N) &&
	     sq_respHandleSQ_incomingRespQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageStateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _write_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageStateReg_wget =
	     1'd1 ;
  assign _write_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_preStageStateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_recvErrRespReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd2 &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     (!sq_respHandleSQ_preStageDeqPendingWorkReqReg ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	     (!sq_respHandleSQ_preStageDeqPktMetaDataReg ||
	      respPktPipe_metaDataQ_EMPTY_N) &&
	     sq_respHandleSQ_incomingRespQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_recvErrRespReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_recvRetryRespReg_wget =
	     sq_respHandleSQ_preStageWorkReqAckTypeReg != 4'd8 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	      __duses999) &&
	     !sq_respHandleSQ_preStageDeqPendingWorkReqReg ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_recvRetryRespReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_errOccurredReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd2 &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     (!sq_respHandleSQ_preStageDeqPendingWorkReqReg ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	     (!sq_respHandleSQ_preStageDeqPktMetaDataReg ||
	      respPktPipe_metaDataQ_EMPTY_N) &&
	     sq_respHandleSQ_incomingRespQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_errOccurredReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_retryFlushReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd2 &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     (!sq_respHandleSQ_preStageDeqPendingWorkReqReg ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	     (!sq_respHandleSQ_preStageDeqPktMetaDataReg ||
	      respPktPipe_metaDataQ_EMPTY_N) &&
	     sq_respHandleSQ_incomingRespQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq_EN_sq_respHandleSQ_retryFlushReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ;
  assign _read_RL_sq_respHandleSQ_recvRespHeader_EN_cntrl_preStateReg_wget =
	     cntrl_stateReg == 4'd3 ;
  assign _read_RL_sq_respHandleSQ_recvRespHeader_EN_cntrl_preStateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;
  assign _read_RL_sq_respHandleSQ_recvRespHeader_EN_cntrl_stateReg_wget =
	     cntrl_preStateReg == 4'd3 ;
  assign _read_RL_sq_respHandleSQ_recvRespHeader_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;
  assign _enq_RL_sq_respHandleSQ_recvRespHeader_EN_sq_retryHandler_resetReqQ_wget =
	     cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 ;
  assign _enq_RL_sq_respHandleSQ_recvRespHeader_EN_sq_retryHandler_resetReqQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;
  assign _i_notFull_RL_sq_respHandleSQ_recvRespHeader_EN_sq_retryHandler_resetReqQ_wget =
	     cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) &&
	     sq_respHandleSQ_pendingRespQ_FULL_N &&
	     sq_respHandleSQ_incomingRespQ_EMPTY_N ;
  assign _i_notFull_RL_sq_respHandleSQ_recvRespHeader_EN_sq_retryHandler_resetReqQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;
  assign _first_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_incomingRespQ_wget =
	     1'b1 ;
  assign _first_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_incomingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;
  assign _deq_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_incomingRespQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_incomingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;
  assign _i_notEmpty_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_incomingRespQ_wget =
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) &&
	     sq_respHandleSQ_pendingRespQ_FULL_N &&
	     (cntrl_preStateReg != 4'd3 || cntrl_stateReg != 4'd3 ||
	      sq_retryHandler_resetReqQ_FULL_N) ;
  assign _i_notEmpty_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_incomingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;
  assign _enq_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_pendingRespQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_pendingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;
  assign _i_notFull_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_pendingRespQ_wget =
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) &&
	     sq_respHandleSQ_incomingRespQ_EMPTY_N &&
	     (cntrl_preStateReg != 4'd3 || cntrl_stateReg != 4'd3 ||
	      sq_retryHandler_resetReqQ_FULL_N) ;
  assign _i_notFull_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_pendingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;
  assign _read_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvErrRespReg_wget =
	     __duses1049 ||
	     !sq_respHandleSQ_errOccurredReg &&
	     sq_respHandleSQ_retryFlushReg &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd11 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd9 ;
  assign _read_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvErrRespReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;
  assign _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvErrRespReg_wget =
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd2 ||
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd5 ||
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd10 ;
  assign _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvErrRespReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;
  assign _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvRetryRespReg_wget =
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd1 ||
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd4 ||
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd7 ;
  assign _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvRetryRespReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;
  assign _read_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_errOccurredReg_wget =
	     (__duses1054 || __duses1054 ||
	      sq_respHandleSQ_retryFlushReg &&
	      sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd11 &&
	      sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd9) &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign _read_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_errOccurredReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;
  assign _read_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_retryFlushReg_wget =
	     !sq_respHandleSQ_errOccurredReg &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd11 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd9 &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign _read_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_retryFlushReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;
  assign _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_retryFlushReg_wget =
	     _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvRetryRespReg_wget ;
  assign _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_retryFlushReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;
  assign _read_RL_sq_respHandleSQ_handleRespByType_EN_cntrl_stateReg_wget =
	     !sq_respHandleSQ_errOccurredReg &&
	     sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd3 ||
	     (sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd9 &&
	      sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd10 ||
	      sq_retryHandler_retryReqQ_FULL_N) &&
	     sq_respHandleSQ_pendingPermQueryQ_FULL_N &&
	     sq_respHandleSQ_pendingRespQ_EMPTY_N ;
  assign _read_RL_sq_respHandleSQ_handleRespByType_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_handleRespByType ;
  assign _enq_RL_sq_respHandleSQ_handleRespByType_EN_sq_retryHandler_retryReqQ_wget =
	     sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd9 ||
	     sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd10 ;
  assign _enq_RL_sq_respHandleSQ_handleRespByType_EN_sq_retryHandler_retryReqQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_handleRespByType ;
  assign _i_notFull_RL_sq_respHandleSQ_handleRespByType_EN_sq_retryHandler_retryReqQ_wget =
	     (sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd9 ||
	      sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd10) &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) &&
	     sq_respHandleSQ_pendingPermQueryQ_FULL_N &&
	     sq_respHandleSQ_pendingRespQ_EMPTY_N ;
  assign _i_notFull_RL_sq_respHandleSQ_handleRespByType_EN_sq_retryHandler_retryReqQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_handleRespByType ;
  assign _first_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingRespQ_wget =
	     1'b1 ;
  assign _first_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_handleRespByType ;
  assign _deq_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingRespQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_handleRespByType ;
  assign _i_notEmpty_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingRespQ_wget =
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) &&
	     sq_respHandleSQ_pendingPermQueryQ_FULL_N &&
	     (sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd9 &&
	      sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd10 ||
	      sq_retryHandler_retryReqQ_FULL_N) ;
  assign _i_notEmpty_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_handleRespByType ;
  assign _enq_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingPermQueryQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingPermQueryQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_handleRespByType ;
  assign _i_notFull_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingPermQueryQ_wget =
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) &&
	     sq_respHandleSQ_pendingRespQ_EMPTY_N &&
	     (sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd9 &&
	      sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd10 ||
	      sq_retryHandler_retryReqQ_FULL_N) ;
  assign _i_notFull_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_pendingPermQueryQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_handleRespByType ;
  assign _read_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_preRdmaOpCodeReg_wget =
	     !IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4824 &&
	     sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd3 ;
  assign _read_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_preRdmaOpCodeReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_handleRespByType ;
  assign _write_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_preRdmaOpCodeReg_wget =
	     sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd3 &&
	     !sq_respHandleSQ_errOccurredReg &&
	     cntrl_stateReg != 4'd6 ;
  assign _write_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_preRdmaOpCodeReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_handleRespByType ;
  assign _write_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_recvErrRespReg_wget =
	     sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd3 &&
	     IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4844 ;
  assign _write_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_recvErrRespReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_handleRespByType ;
  assign _read_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_errOccurredReg_wget =
	     sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd3 &&
	     cntrl_stateReg != 4'd6 ;
  assign _read_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_errOccurredReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_handleRespByType ;
  assign _read_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_cntrl_stateReg_wget =
	     sq_respHandleSQ_pendingPermQueryQ_EMPTY_N &&
	     sq_respHandleSQ_pendingRetryCheckQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp ;
  assign _first_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermQueryQ_wget =
	     1'b1 ;
  assign _first_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermQueryQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp ;
  assign _deq_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermQueryQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermQueryQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp ;
  assign _i_notEmpty_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermQueryQ_wget =
	     sq_respHandleSQ_pendingRetryCheckQ_FULL_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign _i_notEmpty_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermQueryQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp ;
  assign _enq_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingRetryCheckQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingRetryCheckQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp ;
  assign _i_notFull_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingRetryCheckQ_wget =
	     sq_respHandleSQ_pendingPermQueryQ_EMPTY_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign _i_notFull_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingRetryCheckQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp ;
  assign _read_RL_sq_respHandleSQ_checkRetryErr_EN_cntrl_stateReg_wget =
	     (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd9 &&
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd10 ||
	      sq_retryHandler_retryRespQ_EMPTY_N) &&
	     sq_respHandleSQ_pendingPermCheckQ_FULL_N &&
	     sq_respHandleSQ_pendingRetryCheckQ_EMPTY_N &&
	     IF_sq_respHandleSQ_pendingRetryCheckQ_first__9_ETC___d5037 ;
  assign _read_RL_sq_respHandleSQ_checkRetryErr_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkRetryErr ;
  assign _first_RL_sq_respHandleSQ_checkRetryErr_EN_sq_retryHandler_retryRespQ_wget =
	     sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd9 ||
	     sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd10 ;
  assign _first_RL_sq_respHandleSQ_checkRetryErr_EN_sq_retryHandler_retryRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkRetryErr ;
  assign _deq_RL_sq_respHandleSQ_checkRetryErr_EN_sq_retryHandler_retryRespQ_wget =
	     _first_RL_sq_respHandleSQ_checkRetryErr_EN_sq_retryHandler_retryRespQ_wget ;
  assign _deq_RL_sq_respHandleSQ_checkRetryErr_EN_sq_retryHandler_retryRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkRetryErr ;
  assign _i_notEmpty_RL_sq_respHandleSQ_checkRetryErr_EN_sq_retryHandler_retryRespQ_wget =
	     (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd9 ||
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd10) &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) &&
	     sq_respHandleSQ_pendingRetryCheckQ_EMPTY_N &&
	     sq_respHandleSQ_pendingPermCheckQ_FULL_N ;
  assign _i_notEmpty_RL_sq_respHandleSQ_checkRetryErr_EN_sq_retryHandler_retryRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkRetryErr ;
  assign _first_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingRetryCheckQ_wget =
	     1'b1 ;
  assign _first_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingRetryCheckQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkRetryErr ;
  assign _deq_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingRetryCheckQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingRetryCheckQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkRetryErr ;
  assign _i_notEmpty_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingRetryCheckQ_wget =
	     cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6 ;
  assign _i_notEmpty_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingRetryCheckQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkRetryErr ;
  assign _enq_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingPermCheckQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingPermCheckQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkRetryErr ;
  assign _i_notFull_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingPermCheckQ_wget =
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) &&
	     (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd9 &&
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd10 ||
	      sq_retryHandler_retryRespQ_EMPTY_N) &&
	     sq_respHandleSQ_pendingRetryCheckQ_EMPTY_N &&
	     IF_sq_respHandleSQ_pendingRetryCheckQ_first__9_ETC___d5037 ;
  assign _i_notFull_RL_sq_respHandleSQ_checkRetryErr_EN_sq_respHandleSQ_pendingPermCheckQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkRetryErr ;
  assign _read_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_cntrl_stateReg_wget =
	     sq_respHandleSQ_pendingPermCheckQ_EMPTY_N &&
	     sq_respHandleSQ_pendingAddrCalcQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp ;
  assign _first_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermCheckQ_wget =
	     1'b1 ;
  assign _first_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermCheckQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp ;
  assign _deq_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermCheckQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermCheckQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp ;
  assign _i_notEmpty_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermCheckQ_wget =
	     sq_respHandleSQ_pendingAddrCalcQ_FULL_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign _i_notEmpty_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingPermCheckQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp ;
  assign _enq_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingAddrCalcQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingAddrCalcQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp ;
  assign _i_notFull_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingAddrCalcQ_wget =
	     sq_respHandleSQ_pendingPermCheckQ_EMPTY_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign _i_notFull_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp_EN_sq_respHandleSQ_pendingAddrCalcQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp ;
  assign _read_RL_sq_respHandleSQ_calcReadRespAddr_EN_cntrl_stateReg_wget =
	     sq_respHandleSQ_pendingAddrCalcQ_EMPTY_N &&
	     sq_respHandleSQ_pendingLenCalcQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_calcReadRespAddr_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespAddr ;
  assign _first_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingAddrCalcQ_wget =
	     1'b1 ;
  assign _first_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingAddrCalcQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespAddr ;
  assign _deq_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingAddrCalcQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingAddrCalcQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespAddr ;
  assign _i_notEmpty_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingAddrCalcQ_wget =
	     sq_respHandleSQ_pendingLenCalcQ_FULL_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign _i_notEmpty_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingAddrCalcQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespAddr ;
  assign _enq_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingLenCalcQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingLenCalcQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespAddr ;
  assign _i_notFull_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingLenCalcQ_wget =
	     sq_respHandleSQ_pendingAddrCalcQ_EMPTY_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign _i_notFull_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_pendingLenCalcQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespAddr ;
  assign _read_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_nextReadRespWriteAddrReg_wget =
	     1'b1 ;
  assign _read_RL_sq_respHandleSQ_calcReadRespAddr_EN_sq_respHandleSQ_nextReadRespWriteAddrReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespAddr ;
  assign _read_RL_sq_respHandleSQ_calcReadRespLen_EN_cntrl_stateReg_wget =
	     sq_respHandleSQ_pendingLenCalcQ_EMPTY_N &&
	     sq_respHandleSQ_pendingSpaceCalcQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_calcReadRespLen_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespLen ;
  assign _first_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingLenCalcQ_wget =
	     1'b1 ;
  assign _first_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingLenCalcQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespLen ;
  assign _deq_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingLenCalcQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingLenCalcQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespLen ;
  assign _i_notEmpty_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingLenCalcQ_wget =
	     sq_respHandleSQ_pendingSpaceCalcQ_FULL_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign _i_notEmpty_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingLenCalcQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespLen ;
  assign _enq_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingSpaceCalcQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingSpaceCalcQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespLen ;
  assign _i_notFull_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingSpaceCalcQ_wget =
	     sq_respHandleSQ_pendingLenCalcQ_EMPTY_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign _i_notFull_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_pendingSpaceCalcQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespLen ;
  assign _read_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_remainingReadRespLenReg_wget =
	     1'b1 ;
  assign _read_RL_sq_respHandleSQ_calcReadRespLen_EN_sq_respHandleSQ_remainingReadRespLenReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespLen ;
  assign _read_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_cntrl_stateReg_wget =
	     sq_respHandleSQ_pendingSpaceCalcQ_EMPTY_N &&
	     sq_respHandleSQ_pendingLenCheckQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcEnoughDmaSpace ;
  assign _first_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingSpaceCalcQ_wget =
	     1'b1 ;
  assign _first_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingSpaceCalcQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcEnoughDmaSpace ;
  assign _deq_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingSpaceCalcQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingSpaceCalcQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcEnoughDmaSpace ;
  assign _i_notEmpty_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingSpaceCalcQ_wget =
	     sq_respHandleSQ_pendingLenCheckQ_FULL_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign _i_notEmpty_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingSpaceCalcQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcEnoughDmaSpace ;
  assign _enq_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingLenCheckQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingLenCheckQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcEnoughDmaSpace ;
  assign _i_notFull_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingLenCheckQ_wget =
	     sq_respHandleSQ_pendingSpaceCalcQ_EMPTY_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign _i_notFull_RL_sq_respHandleSQ_calcEnoughDmaSpace_EN_sq_respHandleSQ_pendingLenCheckQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_calcEnoughDmaSpace ;
  assign _read_RL_sq_respHandleSQ_checkReadRespLen_EN_cntrl_stateReg_wget =
	     sq_respHandleSQ_pendingLenCheckQ_EMPTY_N &&
	     sq_respHandleSQ_pendingDmaReqQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_checkReadRespLen_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkReadRespLen ;
  assign _first_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingLenCheckQ_wget =
	     1'b1 ;
  assign _first_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingLenCheckQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkReadRespLen ;
  assign _deq_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingLenCheckQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingLenCheckQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkReadRespLen ;
  assign _i_notEmpty_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingLenCheckQ_wget =
	     sq_respHandleSQ_pendingDmaReqQ_FULL_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign _i_notEmpty_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingLenCheckQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkReadRespLen ;
  assign _enq_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingDmaReqQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingDmaReqQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkReadRespLen ;
  assign _i_notFull_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingDmaReqQ_wget =
	     sq_respHandleSQ_pendingLenCheckQ_EMPTY_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign _i_notFull_RL_sq_respHandleSQ_checkReadRespLen_EN_sq_respHandleSQ_pendingDmaReqQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkReadRespLen ;
  assign _read_RL_sq_respHandleSQ_issueDmaReq_EN_cntrl_stateReg_wget =
	     sq_respHandleSQ_pendingDmaReqQ_EMPTY_N &&
	     sq_respHandleSQ_pendingWorkCompQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_issueDmaReq_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_issueDmaReq ;
  assign _first_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingDmaReqQ_wget =
	     1'b1 ;
  assign _first_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingDmaReqQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_issueDmaReq ;
  assign _deq_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingDmaReqQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingDmaReqQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_issueDmaReq ;
  assign _i_notEmpty_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingDmaReqQ_wget =
	     sq_respHandleSQ_pendingWorkCompQ_FULL_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign _i_notEmpty_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingDmaReqQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_issueDmaReq ;
  assign _enq_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingWorkCompQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingWorkCompQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_issueDmaReq ;
  assign _i_notFull_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingWorkCompQ_wget =
	     sq_respHandleSQ_pendingDmaReqQ_EMPTY_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign _i_notFull_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_pendingWorkCompQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_issueDmaReq ;
  assign _port0__write_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_hasInternalErrReg_wget =
	     sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	     sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd0 ;
  assign _port0__write_RL_sq_respHandleSQ_issueDmaReq_EN_sq_respHandleSQ_hasInternalErrReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_issueDmaReq ;
  assign _read_RL_sq_respHandleSQ_genWorkCompSQ_EN_cntrl_stateReg_wget =
	     sq_respHandleSQ_pendingWorkCompQ_EMPTY_N &&
	     (!sq_respHandleSQ_pendingWorkCompQ_D_OUT[633] &&
	      !sq_respHandleSQ_pendingWorkCompQ_D_OUT[31] ||
	      sq_respHandleSQ_workCompGenReqOutQ_FULL_N) ;
  assign _read_RL_sq_respHandleSQ_genWorkCompSQ_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_genWorkCompSQ ;
  assign _enq_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_wget =
	     sq_respHandleSQ_pendingWorkCompQ_D_OUT[633] ||
	     sq_respHandleSQ_pendingWorkCompQ_D_OUT[31] ;
  assign _enq_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_genWorkCompSQ ;
  assign _i_notFull_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_wget =
	     (sq_respHandleSQ_pendingWorkCompQ_D_OUT[633] ||
	      sq_respHandleSQ_pendingWorkCompQ_D_OUT[31]) &&
	     sq_respHandleSQ_pendingWorkCompQ_EMPTY_N &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign _i_notFull_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_genWorkCompSQ ;
  assign _first_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_pendingWorkCompQ_wget =
	     1'b1 ;
  assign _first_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_pendingWorkCompQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_genWorkCompSQ ;
  assign _deq_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_pendingWorkCompQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_pendingWorkCompQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_genWorkCompSQ ;
  assign _i_notEmpty_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_pendingWorkCompQ_wget =
	     (!sq_respHandleSQ_pendingWorkCompQ_D_OUT[633] &&
	      !sq_respHandleSQ_pendingWorkCompQ_D_OUT[31] ||
	      sq_respHandleSQ_workCompGenReqOutQ_FULL_N) &&
	     (cntrl_stateReg == 4'd3 || cntrl_stateReg == 4'd6) ;
  assign _i_notEmpty_RL_sq_respHandleSQ_genWorkCompSQ_EN_sq_respHandleSQ_pendingWorkCompQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_genWorkCompSQ ;
  assign _read_RL_sq_respHandleSQ_discardGhostResp_EN_cntrl_stateReg_wget =
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     respPktPipe_metaDataQ_EMPTY_N &&
	     sq_respHandleSQ_incomingRespQ_FULL_N &&
	     sq_pendingWorkReqBuf_emptyReg ;
  assign _read_RL_sq_respHandleSQ_discardGhostResp_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_discardGhostResp ;
  assign _first_RL_sq_respHandleSQ_discardGhostResp_EN_respPktPipe_metaDataQ_wget =
	     1'b1 ;
  assign _first_RL_sq_respHandleSQ_discardGhostResp_EN_respPktPipe_metaDataQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_discardGhostResp ;
  assign _deq_RL_sq_respHandleSQ_discardGhostResp_EN_respPktPipe_metaDataQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_respHandleSQ_discardGhostResp_EN_respPktPipe_metaDataQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_discardGhostResp ;
  assign _notEmpty_RL_sq_respHandleSQ_discardGhostResp_EN_respPktPipe_metaDataQ_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     sq_respHandleSQ_incomingRespQ_FULL_N &&
	     sq_pendingWorkReqBuf_emptyReg &&
	     respPktPipe_metaDataQ_EMPTY_N ;
  assign _notEmpty_RL_sq_respHandleSQ_discardGhostResp_EN_respPktPipe_metaDataQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_discardGhostResp ;
  assign _i_notEmpty_RL_sq_respHandleSQ_discardGhostResp_EN_respPktPipe_metaDataQ_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     respPktPipe_metaDataQ_EMPTY_N &&
	     sq_pendingWorkReqBuf_emptyReg &&
	     sq_respHandleSQ_incomingRespQ_FULL_N ;
  assign _i_notEmpty_RL_sq_respHandleSQ_discardGhostResp_EN_respPktPipe_metaDataQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_discardGhostResp ;
  assign _read_RL_sq_respHandleSQ_discardGhostResp_EN_sq_pendingWorkReqBuf_emptyReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     respPktPipe_metaDataQ_EMPTY_N &&
	     sq_respHandleSQ_incomingRespQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_discardGhostResp_EN_sq_pendingWorkReqBuf_emptyReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_discardGhostResp ;
  assign _enq_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_incomingRespQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_incomingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_discardGhostResp ;
  assign _i_notFull_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_incomingRespQ_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     respPktPipe_metaDataQ_EMPTY_N &&
	     sq_pendingWorkReqBuf_emptyReg ;
  assign _i_notFull_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_incomingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_discardGhostResp ;
  assign _read_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_recvErrRespReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     respPktPipe_metaDataQ_EMPTY_N &&
	     sq_respHandleSQ_incomingRespQ_FULL_N &&
	     sq_pendingWorkReqBuf_emptyReg ;
  assign _read_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_recvErrRespReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_discardGhostResp ;
  assign _read_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_errOccurredReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     respPktPipe_metaDataQ_EMPTY_N &&
	     sq_respHandleSQ_incomingRespQ_FULL_N &&
	     sq_pendingWorkReqBuf_emptyReg ;
  assign _read_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_errOccurredReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_discardGhostResp ;
  assign _read_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_retryFlushReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     respPktPipe_metaDataQ_EMPTY_N &&
	     sq_respHandleSQ_incomingRespQ_FULL_N &&
	     sq_pendingWorkReqBuf_emptyReg ;
  assign _read_RL_sq_respHandleSQ_discardGhostResp_EN_sq_respHandleSQ_retryFlushReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_discardGhostResp ;
  assign _read_RL_sq_respHandleSQ_checkTimeOutErr_EN_cntrl_stateReg_wget =
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     sq_retryHandler_timeOutNotificationQ_EMPTY_N &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign _read_RL_sq_respHandleSQ_checkTimeOutErr_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkTimeOutErr ;
  assign _first_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_retryHandler_timeOutNotificationQ_wget =
	     1'b1 ;
  assign _first_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_retryHandler_timeOutNotificationQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkTimeOutErr ;
  assign _deq_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_retryHandler_timeOutNotificationQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_retryHandler_timeOutNotificationQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkTimeOutErr ;
  assign _i_notEmpty_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_retryHandler_timeOutNotificationQ_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     !sq_respHandleSQ_errOccurredReg ;
  assign _i_notEmpty_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_retryHandler_timeOutNotificationQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkTimeOutErr ;
  assign _read_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_respHandleSQ_recvErrRespReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_retryFlushReg &&
	     sq_retryHandler_timeOutNotificationQ_EMPTY_N &&
	     !sq_respHandleSQ_errOccurredReg ;
  assign _read_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_respHandleSQ_recvErrRespReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkTimeOutErr ;
  assign _port0__write_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_respHandleSQ_hasTimeOutErrReg_wget =
	     sq_retryHandler_timeOutNotificationQ_D_OUT ;
  assign _port0__write_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_respHandleSQ_hasTimeOutErrReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkTimeOutErr ;
  assign _read_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_respHandleSQ_errOccurredReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_retryFlushReg &&
	     sq_retryHandler_timeOutNotificationQ_EMPTY_N &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign _read_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_respHandleSQ_errOccurredReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkTimeOutErr ;
  assign _read_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_respHandleSQ_retryFlushReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_errOccurredReg &&
	     sq_retryHandler_timeOutNotificationQ_EMPTY_N &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign _read_RL_sq_respHandleSQ_checkTimeOutErr_EN_sq_respHandleSQ_retryFlushReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_checkTimeOutErr ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_cntrl_stateReg_wget =
	     !sq_pendingWorkReqBuf_emptyReg &&
	     (sq_respHandleSQ_recvErrRespReg ||
	      sq_respHandleSQ_errOccurredReg) &&
	     (sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	     sq_respHandleSQ_incomingRespQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_dataVec_0_wget =
	     sq_pendingWorkReqBuf_deqPtrReg == 2'd0 ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_dataVec_0_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_dataVec_1_wget =
	     sq_pendingWorkReqBuf_deqPtrReg == 2'd1 ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_dataVec_1_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_dataVec_2_wget =
	     sq_pendingWorkReqBuf_deqPtrReg == 2'd2 ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_dataVec_2_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_dataVec_3_wget =
	     sq_pendingWorkReqBuf_deqPtrReg == 2'd3 ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_dataVec_3_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_deqPtrReg_wget =
	     1'b1 ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_deqPtrReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_scanStateReg_wget =
	     !sq_pendingWorkReqBuf_emptyReg &&
	     sq_respHandleSQ_incomingRespQ_FULL_N &&
	     (cntrl_stateReg == 4'd3 &&
	      (sq_respHandleSQ_recvErrRespReg ||
	       sq_respHandleSQ_errOccurredReg) ||
	      cntrl_stateReg == 4'd6) ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_scanStateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_emptyReg_wget =
	     (cntrl_stateReg == 4'd3 &&
	      (sq_respHandleSQ_recvErrRespReg ||
	       sq_respHandleSQ_errOccurredReg) ||
	      cntrl_stateReg == 4'd6) &&
	     (sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	     sq_respHandleSQ_incomingRespQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_emptyReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign _port0__write_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_popReg_wget =
	     1'd1 ;
  assign _port0__write_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_popReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign _port1__read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_scanStartReg_wget =
	     1'b1 ;
  assign _port1__read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_scanStartReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign _port1__read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_preScanRestartReg_wget =
	     1'b1 ;
  assign _port1__read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_pendingWorkReqBuf_preScanRestartReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign _enq_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_incomingRespQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_incomingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign _i_notFull_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_incomingRespQ_wget =
	     !sq_pendingWorkReqBuf_emptyReg &&
	     (sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	     (cntrl_stateReg == 4'd3 &&
	      (sq_respHandleSQ_recvErrRespReg ||
	       sq_respHandleSQ_errOccurredReg) ||
	      cntrl_stateReg == 4'd6) ;
  assign _i_notFull_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_incomingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_recvErrRespReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_errOccurredReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     (sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	     sq_respHandleSQ_incomingRespQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_recvErrRespReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign _port0__write_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_hasTimeOutErrReg_wget =
	     1'd1 ;
  assign _port0__write_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_hasTimeOutErrReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign _port0__read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_hasTimeOutErrReg_wget =
	     1'b1 ;
  assign _port0__read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_hasTimeOutErrReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_errOccurredReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_recvErrRespReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     (sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	      sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	     sq_respHandleSQ_incomingRespQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_errFlushWorkReq_EN_sq_respHandleSQ_errOccurredReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign _read_RL_sq_respHandleSQ_errFlushIncomingResp_EN_cntrl_stateReg_wget =
	     (sq_respHandleSQ_recvErrRespReg ||
	      sq_respHandleSQ_errOccurredReg) &&
	     sq_respHandleSQ_incomingRespQ_FULL_N &&
	     sq_pendingWorkReqBuf_emptyReg &&
	     respPktPipe_metaDataQ_EMPTY_N ;
  assign _read_RL_sq_respHandleSQ_errFlushIncomingResp_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp ;
  assign _first_RL_sq_respHandleSQ_errFlushIncomingResp_EN_respPktPipe_metaDataQ_wget =
	     1'b1 ;
  assign _first_RL_sq_respHandleSQ_errFlushIncomingResp_EN_respPktPipe_metaDataQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp ;
  assign _deq_RL_sq_respHandleSQ_errFlushIncomingResp_EN_respPktPipe_metaDataQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_respHandleSQ_errFlushIncomingResp_EN_respPktPipe_metaDataQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp ;
  assign _i_notEmpty_RL_sq_respHandleSQ_errFlushIncomingResp_EN_respPktPipe_metaDataQ_wget =
	     (cntrl_stateReg == 4'd3 &&
	      (sq_respHandleSQ_recvErrRespReg ||
	       sq_respHandleSQ_errOccurredReg) ||
	      cntrl_stateReg == 4'd6) &&
	     sq_pendingWorkReqBuf_emptyReg &&
	     sq_respHandleSQ_incomingRespQ_FULL_N ;
  assign _i_notEmpty_RL_sq_respHandleSQ_errFlushIncomingResp_EN_respPktPipe_metaDataQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp ;
  assign _read_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_pendingWorkReqBuf_emptyReg_wget =
	     (cntrl_stateReg == 4'd3 &&
	      (sq_respHandleSQ_recvErrRespReg ||
	       sq_respHandleSQ_errOccurredReg) ||
	      cntrl_stateReg == 4'd6) &&
	     respPktPipe_metaDataQ_EMPTY_N &&
	     sq_respHandleSQ_incomingRespQ_FULL_N ;
  assign _read_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_pendingWorkReqBuf_emptyReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp ;
  assign _enq_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_respHandleSQ_incomingRespQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_respHandleSQ_incomingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp ;
  assign _i_notFull_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_respHandleSQ_incomingRespQ_wget =
	     (cntrl_stateReg == 4'd3 &&
	      (sq_respHandleSQ_recvErrRespReg ||
	       sq_respHandleSQ_errOccurredReg) ||
	      cntrl_stateReg == 4'd6) &&
	     sq_pendingWorkReqBuf_emptyReg &&
	     respPktPipe_metaDataQ_EMPTY_N ;
  assign _i_notFull_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_respHandleSQ_incomingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp ;
  assign _read_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_respHandleSQ_recvErrRespReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_errOccurredReg &&
	     sq_respHandleSQ_incomingRespQ_FULL_N &&
	     sq_pendingWorkReqBuf_emptyReg &&
	     respPktPipe_metaDataQ_EMPTY_N ;
  assign _read_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_respHandleSQ_recvErrRespReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp ;
  assign _read_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_respHandleSQ_errOccurredReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_recvErrRespReg &&
	     sq_respHandleSQ_incomingRespQ_FULL_N &&
	     sq_pendingWorkReqBuf_emptyReg &&
	     respPktPipe_metaDataQ_EMPTY_N ;
  assign _read_RL_sq_respHandleSQ_errFlushIncomingResp_EN_sq_respHandleSQ_errOccurredReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp ;
  assign _read_RL_sq_respHandleSQ_retryFlushDone_EN_cntrl_stateReg_wget =
	     !sq_respHandleSQ_errOccurredReg &&
	     sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign _read_RL_sq_respHandleSQ_retryFlushDone_EN_cntrl_stateReg_whas =
	     cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_retryF_ETC___d5690 ;
  assign _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_pendingWorkReqBuf_emptyReg_wget =
	     1'b1 ;
  assign _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_pendingWorkReqBuf_emptyReg_whas =
	     cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_retryF_ETC___d5690 ;
  assign _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_retryHandler_retryHandleStateReg_wget =
	     1'b1 ;
  assign _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_retryHandler_retryHandleStateReg_whas =
	     cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_retryF_ETC___d5690 ;
  assign _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_recvErrRespReg_wget =
	     cntrl_stateReg == 4'd3 && sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg ;
  assign _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_recvErrRespReg_whas =
	     cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_retryF_ETC___d5690 ;
  assign _write_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_recvRetryRespReg_wget =
	     sq_retryHandler_retryHandleStateReg == 3'd7 ;
  assign _write_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_recvRetryRespReg_whas =
	     cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_retryF_ETC___d5690 ;
  assign _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_errOccurredReg_wget =
	     cntrl_stateReg == 4'd3 && sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_errOccurredReg_whas =
	     cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_retryF_ETC___d5690 ;
  assign _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_retryFlushReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_recvErrRespReg &&
	     !sq_respHandleSQ_errOccurredReg ;
  assign _read_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_retryFlushReg_whas =
	     cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_retryF_ETC___d5690 ;
  assign _write_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_retryFlushReg_wget =
	     sq_retryHandler_retryHandleStateReg == 3'd7 ;
  assign _write_RL_sq_respHandleSQ_retryFlushDone_EN_sq_respHandleSQ_retryFlushReg_whas =
	     cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_retryF_ETC___d5690 ;
  assign _read_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_cntrl_stateReg_wget =
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     sq_respHandleSQ_retryFlushReg &&
	     (!respPktPipe_metaDataQ_EMPTY_N ||
	      sq_respHandleSQ_incomingRespQ_FULL_N) ;
  assign _read_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload ;
  assign _first_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_respPktPipe_metaDataQ_wget =
	     respPktPipe_metaDataQ_EMPTY_N ;
  assign _first_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_respPktPipe_metaDataQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload ;
  assign _deq_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_respPktPipe_metaDataQ_wget =
	     respPktPipe_metaDataQ_EMPTY_N ;
  assign _deq_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_respPktPipe_metaDataQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload ;
  assign _notEmpty_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_respPktPipe_metaDataQ_wget =
	     1'b1 ;
  assign _notEmpty_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_respPktPipe_metaDataQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload ;
  assign _i_notEmpty_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_respPktPipe_metaDataQ_wget =
	     cntrl_stateReg == 4'd3 && respPktPipe_metaDataQ_EMPTY_N &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     sq_respHandleSQ_retryFlushReg &&
	     sq_respHandleSQ_incomingRespQ_FULL_N ;
  assign _i_notEmpty_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_respPktPipe_metaDataQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload ;
  assign _enq_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_incomingRespQ_wget =
	     respPktPipe_metaDataQ_EMPTY_N ;
  assign _enq_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_incomingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload ;
  assign _i_notFull_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_incomingRespQ_wget =
	     cntrl_stateReg == 4'd3 && respPktPipe_metaDataQ_EMPTY_N &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     sq_respHandleSQ_retryFlushReg ;
  assign _i_notFull_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_incomingRespQ_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload ;
  assign _write_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_preStageStateReg_wget =
	     1'd1 ;
  assign _write_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_preStageStateReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload ;
  assign _read_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_recvErrRespReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_errOccurredReg &&
	     sq_respHandleSQ_retryFlushReg &&
	     (!respPktPipe_metaDataQ_EMPTY_N ||
	      sq_respHandleSQ_incomingRespQ_FULL_N) ;
  assign _read_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_recvErrRespReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload ;
  assign _read_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_errOccurredReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_recvErrRespReg &&
	     sq_respHandleSQ_retryFlushReg &&
	     (!respPktPipe_metaDataQ_EMPTY_N ||
	      sq_respHandleSQ_incomingRespQ_FULL_N) ;
  assign _read_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_errOccurredReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload ;
  assign _read_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_retryFlushReg_wget =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_errOccurredReg &&
	     (!respPktPipe_metaDataQ_EMPTY_N ||
	      sq_respHandleSQ_incomingRespQ_FULL_N) &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign _read_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload_EN_sq_respHandleSQ_retryFlushReg_whas =
	     CAN_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload ;
  assign _read_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_cntrl_preStateReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_workCompGenSQ_workCompGenStateReg == 2'd1 &&
	     IF_sq_reqGenSQ_workCompGenReqOutQ_notEmpty__69_ETC___d5707 &&
	     cntrl_stateReg != 4'd6 &&
	     sq_workCompGenSQ_workCompGenStateReg != 2'd2 ;
  assign _read_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_cntrl_preStateReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ ;
  assign _read_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_cntrl_stateReg_wget =
	     cntrl_preStateReg == 4'd3 &&
	     IF_sq_reqGenSQ_workCompGenReqOutQ_notEmpty__69_ETC___d5707 &&
	     sq_workCompGenSQ_workCompGenStateReg == 2'd1 ;
  assign _read_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ ;
  assign _first_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_reqGenSQ_workCompGenReqOutQ_wget =
	     sq_reqGenSQ_workCompGenReqOutQ_EMPTY_N ;
  assign _first_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_reqGenSQ_workCompGenReqOutQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ ;
  assign _deq_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_reqGenSQ_workCompGenReqOutQ_wget =
	     sq_reqGenSQ_workCompGenReqOutQ_EMPTY_N ;
  assign _deq_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_reqGenSQ_workCompGenReqOutQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ ;
  assign _notEmpty_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_reqGenSQ_workCompGenReqOutQ_wget =
	     1'b1 ;
  assign _notEmpty_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_reqGenSQ_workCompGenReqOutQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ ;
  assign _i_notEmpty_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_reqGenSQ_workCompGenReqOutQ_wget =
	     (cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 &&
	      sq_workCompGenSQ_workCompGenStateReg == 2'd1 ||
	      cntrl_stateReg == 4'd6 ||
	      sq_workCompGenSQ_workCompGenStateReg == 2'd2) &&
	     sq_reqGenSQ_workCompGenReqOutQ_EMPTY_N &&
	     sq_workCompGenSQ_pendingWorkCompQ4SQ_FULL_N ;
  assign _i_notEmpty_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_reqGenSQ_workCompGenReqOutQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ ;
  assign _first_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_wget =
	     sq_respHandleSQ_workCompGenReqOutQ_EMPTY_N &&
	     !sq_reqGenSQ_workCompGenReqOutQ_EMPTY_N ;
  assign _first_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ ;
  assign _deq_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_wget =
	     !sq_reqGenSQ_workCompGenReqOutQ_EMPTY_N &&
	     sq_respHandleSQ_workCompGenReqOutQ_EMPTY_N ;
  assign _deq_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ ;
  assign _notEmpty_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_wget =
	     !sq_reqGenSQ_workCompGenReqOutQ_EMPTY_N ;
  assign _notEmpty_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ ;
  assign _i_notEmpty_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_wget =
	     !sq_reqGenSQ_workCompGenReqOutQ_EMPTY_N &&
	     sq_respHandleSQ_workCompGenReqOutQ_EMPTY_N &&
	     sq_workCompGenSQ_pendingWorkCompQ4SQ_FULL_N &&
	     (cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 &&
	      sq_workCompGenSQ_workCompGenStateReg == 2'd1 ||
	      cntrl_stateReg == 4'd6 ||
	      sq_workCompGenSQ_workCompGenStateReg == 2'd2) ;
  assign _i_notEmpty_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_respHandleSQ_workCompGenReqOutQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ ;
  assign _enq_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_wget =
	     sq_reqGenSQ_workCompGenReqOutQ_EMPTY_N ||
	     sq_respHandleSQ_workCompGenReqOutQ_EMPTY_N ;
  assign _enq_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ ;
  assign _i_notFull_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_wget =
	     sq_reqGenSQ_workCompGenReqOutQ_EMPTY_N &&
	     (cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 &&
	      sq_workCompGenSQ_workCompGenStateReg == 2'd1 ||
	      cntrl_stateReg == 4'd6 ||
	      sq_workCompGenSQ_workCompGenStateReg == 2'd2) ;
  assign _i_notFull_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ ;
  assign _read_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_workCompGenSQ_workCompGenStateReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     IF_sq_reqGenSQ_workCompGenReqOutQ_notEmpty__69_ETC___d5707 &&
	     cntrl_preStateReg == 4'd3 ;
  assign _read_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ_EN_sq_workCompGenSQ_workCompGenStateReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ ;
  assign _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_preStateReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_workCompGenSQ_workCompGenStateReg == 2'd1 &&
	     cntrl_stateReg != 4'd6 &&
	     sq_workCompGenSQ_workCompGenStateReg != 2'd2 &&
	     (sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[30:29] != 2'd0 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[561] ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd4 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd5 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd6 ||
	      cntrl_stateReg != 4'd0 && cntrl_stateReg != 4'd7) &&
	     sq_workCompGenSQ_pendingWorkCompQ4SQ_EMPTY_N &&
	     (sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10 ||
	      cntrl_stateReg != 4'd0 && cntrl_stateReg != 4'd7) &&
	     sq_workCompGenSQ_dmaWaitingQ_FULL_N ;
  assign _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_preStateReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ ;
  assign _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_stateReg_wget =
	     (sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd0 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd1 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd2 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd3 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd4 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd5 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd6 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd7 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd8 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd9 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd10) &&
	     sq_workCompGenSQ_dmaWaitingQ_FULL_N &&
	     sq_workCompGenSQ_pendingWorkCompQ4SQ_EMPTY_N ;
  assign _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ ;
  assign _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_sqSigAllReg_wget =
	     !sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[561] &&
	     sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	     sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	     sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	     sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[30:29] == 2'd0 ;
  assign _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_sqSigAllReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ ;
  assign _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_sqpnReg_wget =
	     1'b1 ;
  assign _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_sqpnReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ ;
  assign _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_pkeyReg_wget =
	     1'b1 ;
  assign _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_cntrl_pkeyReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ ;
  assign _enq_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_dmaWaitingQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_dmaWaitingQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ ;
  assign _i_notFull_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_dmaWaitingQ_wget =
	     (cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 &&
	      sq_workCompGenSQ_workCompGenStateReg == 2'd1 ||
	      cntrl_stateReg == 4'd6 ||
	      sq_workCompGenSQ_workCompGenStateReg == 2'd2) &&
	     (sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[30:29] != 2'd0 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[561] ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd4 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd5 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd6 ||
	      cntrl_stateReg != 4'd0 && cntrl_stateReg != 4'd7) &&
	     (sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10 ||
	      cntrl_stateReg != 4'd0 && cntrl_stateReg != 4'd7) &&
	     sq_workCompGenSQ_pendingWorkCompQ4SQ_EMPTY_N ;
  assign _i_notFull_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_dmaWaitingQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ ;
  assign _first_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_wget =
	     1'b1 ;
  assign _first_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ ;
  assign _deq_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ ;
  assign _i_notEmpty_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_wget =
	     (cntrl_preStateReg == 4'd3 && cntrl_stateReg == 4'd3 &&
	      sq_workCompGenSQ_workCompGenStateReg == 2'd1 ||
	      cntrl_stateReg == 4'd6 ||
	      sq_workCompGenSQ_workCompGenStateReg == 2'd2) &&
	     (sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[30:29] != 2'd0 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[561] ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd4 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd5 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd6 ||
	      cntrl_stateReg != 4'd0 && cntrl_stateReg != 4'd7) &&
	     (sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10 ||
	      cntrl_stateReg != 4'd0 && cntrl_stateReg != 4'd7) &&
	     sq_workCompGenSQ_dmaWaitingQ_FULL_N ;
  assign _i_notEmpty_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_pendingWorkCompQ4SQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ ;
  assign _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_workCompGenStateReg_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     (sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[30:29] != 2'd0 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[561] ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd4 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd5 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd6 ||
	      cntrl_stateReg != 4'd0 && cntrl_stateReg != 4'd7) &&
	     sq_workCompGenSQ_pendingWorkCompQ4SQ_EMPTY_N &&
	     (sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10 ||
	      cntrl_stateReg != 4'd0 && cntrl_stateReg != 4'd7) &&
	     sq_workCompGenSQ_dmaWaitingQ_FULL_N ;
  assign _read_RL_sq_workCompGenSQ_genPendingWorkCompSQ_EN_sq_workCompGenSQ_workCompGenStateReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ ;
  assign _read_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_cntrl_preStateReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_workCompGenSQ_workCompGenStateReg == 2'd1 &&
	     sq_workCompGenSQ_dmaWaitingQ_EMPTY_N &&
	     sq_workCompGenSQ_genWorkCompQ_FULL_N ;
  assign _read_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_cntrl_preStateReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ ;
  assign _read_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_cntrl_stateReg_wget =
	     cntrl_preStateReg == 4'd3 &&
	     sq_workCompGenSQ_workCompGenStateReg == 2'd1 &&
	     sq_workCompGenSQ_dmaWaitingQ_EMPTY_N &&
	     sq_workCompGenSQ_genWorkCompQ_FULL_N ;
  assign _read_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ ;
  assign _first_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_dmaWaitingQ_wget =
	     1'b1 ;
  assign _first_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_dmaWaitingQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ ;
  assign _deq_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_dmaWaitingQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_dmaWaitingQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ ;
  assign _i_notEmpty_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_dmaWaitingQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_workCompGenSQ_genWorkCompQ_FULL_N &&
	     sq_workCompGenSQ_workCompGenStateReg == 2'd1 ;
  assign _i_notEmpty_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_dmaWaitingQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ ;
  assign _enq_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_genWorkCompQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_genWorkCompQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ ;
  assign _i_notFull_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_genWorkCompQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_workCompGenSQ_dmaWaitingQ_EMPTY_N &&
	     sq_workCompGenSQ_workCompGenStateReg == 2'd1 ;
  assign _i_notFull_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_genWorkCompQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ ;
  assign _read_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_workCompGenStateReg_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_workCompGenSQ_dmaWaitingQ_EMPTY_N &&
	     sq_workCompGenSQ_genWorkCompQ_FULL_N ;
  assign _read_RL_sq_workCompGenSQ_waitDmaDoneSQ_EN_sq_workCompGenSQ_workCompGenStateReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ ;
  assign _read_RL_sq_workCompGenSQ_genWorkCompSQ_EN_cntrl_preStateReg_wget =
	     cntrl_stateReg == 4'd3 &&
	     sq_workCompGenSQ_workCompGenStateReg == 2'd1 &&
	     sq_workCompGenSQ_genWorkCompQ_EMPTY_N &&
	     IF_sq_workCompGenSQ_genWorkCompQ_first__802_BI_ETC___d5808 ;
  assign _read_RL_sq_workCompGenSQ_genWorkCompSQ_EN_cntrl_preStateReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ ;
  assign _read_RL_sq_workCompGenSQ_genWorkCompSQ_EN_cntrl_stateReg_wget =
	     cntrl_preStateReg == 4'd3 &&
	     sq_workCompGenSQ_workCompGenStateReg == 2'd1 &&
	     sq_workCompGenSQ_genWorkCompQ_EMPTY_N &&
	     IF_sq_workCompGenSQ_genWorkCompQ_first__802_BI_ETC___d5808 ;
  assign _read_RL_sq_workCompGenSQ_genWorkCompSQ_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ ;
  assign _enq_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_workCompOutQ4SQ_wget =
	     sq_workCompGenSQ_genWorkCompQ_D_OUT[0] ||
	     !sq_workCompGenSQ_genWorkCompQ_D_OUT[1] ;
  assign _enq_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_workCompOutQ4SQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ ;
  assign _i_notFull_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_workCompOutQ4SQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_workCompGenSQ_workCompGenStateReg == 2'd1 &&
	     sq_workCompGenSQ_genWorkCompQ_EMPTY_N &&
	     sq_workCompGenSQ_genWorkCompQ_D_OUT[0] ;
  assign _i_notFull_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_workCompOutQ4SQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ ;
  assign _first_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_genWorkCompQ_wget =
	     1'b1 ;
  assign _first_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_genWorkCompQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ ;
  assign _deq_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_genWorkCompQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_genWorkCompQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ ;
  assign _i_notEmpty_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_genWorkCompQ_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     IF_sq_workCompGenSQ_genWorkCompQ_first__802_BI_ETC___d5808 &&
	     sq_workCompGenSQ_workCompGenStateReg == 2'd1 ;
  assign _i_notEmpty_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_genWorkCompQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ ;
  assign _read_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_workCompGenStateReg_wget =
	     cntrl_stateReg == 4'd3 && cntrl_preStateReg == 4'd3 &&
	     sq_workCompGenSQ_genWorkCompQ_EMPTY_N &&
	     IF_sq_workCompGenSQ_genWorkCompQ_first__802_BI_ETC___d5808 ;
  assign _read_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_workCompGenStateReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ ;
  assign _write_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_workCompGenStateReg_wget =
	     !sq_workCompGenSQ_genWorkCompQ_D_OUT[1] ;
  assign _write_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_workCompGenStateReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ ;
  assign _write_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_wget =
	     !sq_workCompGenSQ_genWorkCompQ_D_OUT[1] ;
  assign _write_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ ;
  assign _write_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg_wget =
	     !sq_workCompGenSQ_genWorkCompQ_D_OUT[1] ;
  assign _write_RL_sq_workCompGenSQ_genWorkCompSQ_EN_sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ ;
  assign _read_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_cntrl_stateReg_wget =
	     sq_workCompGenSQ_workCompGenStateReg != 2'd2 &&
	     sq_workCompGenSQ_dmaWaitingQ_EMPTY_N &&
	     sq_workCompGenSQ_genWorkCompQ_FULL_N ;
  assign _read_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_cntrl_stateReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ ;
  assign _first_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_dmaWaitingQ_wget =
	     1'b1 ;
  assign _first_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_dmaWaitingQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ ;
  assign _deq_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_dmaWaitingQ_wget =
	     1'd1 ;
  assign _deq_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_dmaWaitingQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ ;
  assign _i_notEmpty_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_dmaWaitingQ_wget =
	     (cntrl_stateReg == 4'd6 ||
	      sq_workCompGenSQ_workCompGenStateReg == 2'd2) &&
	     sq_workCompGenSQ_genWorkCompQ_FULL_N ;
  assign _i_notEmpty_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_dmaWaitingQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ ;
  assign _enq_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_genWorkCompQ_wget =
	     1'd1 ;
  assign _enq_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_genWorkCompQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ ;
  assign _i_notFull_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_genWorkCompQ_wget =
	     (cntrl_stateReg == 4'd6 ||
	      sq_workCompGenSQ_workCompGenStateReg == 2'd2) &&
	     sq_workCompGenSQ_dmaWaitingQ_EMPTY_N ;
  assign _i_notFull_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_genWorkCompQ_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ ;
  assign _read_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_workCompGenStateReg_wget =
	     cntrl_stateReg != 4'd6 && sq_workCompGenSQ_dmaWaitingQ_EMPTY_N &&
	     sq_workCompGenSQ_genWorkCompQ_FULL_N ;
  assign _read_RL_sq_workCompGenSQ_noDmaWaitSQ_EN_sq_workCompGenSQ_workCompGenStateReg_whas =
	     CAN_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ ;
  assign payloadGenerator4SQ_payloadBufQ_pwDequeue_whas =
	     CAN_FIRE_RL_payloadGenerator4SQ_bramQ2PipeOut_mkConnectionGetPut ;
  assign payloadGenerator4SQ_payloadBufQ_pwEnqueue_whas =
	     CAN_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding ;
  assign payloadGenerator4SQ_payloadBufQ_pwClear_whas =
	     cntrl_stateReg == 4'd0 ;
  assign cntrl_setStateErrReg_port0__read = cntrl_setStateErrReg ;
  assign cntrl_setStateErrReg_EN_port0__write = CAN_FIRE_RL_errTrigger ;
  assign cntrl_setStateErrReg_port0__write_1 = 1'd1 ;
  assign cntrl_setStateErrReg_port1__read =
	     CAN_FIRE_RL_errTrigger || cntrl_setStateErrReg ;
  assign cntrl_setStateErrReg_EN_port1__write = 1'd1 ;
  assign cntrl_setStateErrReg_port1__write_1 = 1'd0 ;
  assign cntrl_setStateErrReg_port2__read = 1'd0 ;
  assign cntrl_setStateErrReg_EN_port2__write = 1'b0 ;
  assign cntrl_setStateErrReg_port2__write_1 = 1'b0 ;
  assign cntrl_setStateErrReg_port3__read = 1'd0 ;
  assign cntrl_setStateErrReg_EN_port3__write = 1'b0 ;
  assign cntrl_setStateErrReg_port3__write_1 = 1'b0 ;
  assign cntrl_setStateErrReg_port4__read = 1'd0 ;
  assign cntrl_setStateErrReg_EN_port4__write = 1'b0 ;
  assign cntrl_setStateErrReg_port4__write_1 = 1'b0 ;
  assign cntrl_qpDestroyReg_port0__read = cntrl_qpDestroyReg ;
  assign cntrl_qpDestroyReg_EN_port0__write = 1'b0 ;
  assign cntrl_qpDestroyReg_port0__write_1 = 1'b0 ;
  assign cntrl_qpDestroyReg_port1__read = cntrl_qpDestroyReg ;
  assign cntrl_qpDestroyReg_EN_port1__write = 1'b0 ;
  assign cntrl_qpDestroyReg_port1__write_1 = 1'b0 ;
  assign cntrl_qpDestroyReg_port2__read = cntrl_qpDestroyReg ;
  assign cntrl_qpDestroyReg_EN_port2__write = 1'b0 ;
  assign cntrl_qpDestroyReg_port2__write_1 = 1'b0 ;
  assign cntrl_qpDestroyReg_port3__read = cntrl_qpDestroyReg ;
  assign cntrl_qpDestroyReg_EN_port3__write = 1'b0 ;
  assign cntrl_qpDestroyReg_port3__write_1 = 1'b0 ;
  assign cntrl_qpDestroyReg_port4__read = cntrl_qpDestroyReg ;
  assign cntrl_qpDestroyReg_EN_port4__write = 1'b0 ;
  assign cntrl_qpDestroyReg_port4__write_1 = 1'b0 ;
  assign cntrl_nextStateReg_port0__read = cntrl_nextStateReg ;
  assign cntrl_nextStateReg_EN_port0__write =
	     WILL_FIRE_RL_cntrl_onReset &&
	     cntrl_reqQ_D_OUT[300:299] == 2'd0 ||
	     WILL_FIRE_RL_cntrl_onCreate &&
	     cntrl_reqQ_D_OUT[300:299] == 2'd2 &&
	     cntrl_reqQ_D_OUT[216:213] == 4'd1 &&
	     { 21'd0,
	       cntrl_reqQ_D_OUT[221:220],
	       2'd0,
	       cntrl_reqQ_D_OUT[217] } ==
	     26'd25 ||
	     WILL_FIRE_RL_cntrl_onINIT && cntrl_reqQ_D_OUT[300:299] == 2'd2 &&
	     cntrl_reqQ_D_OUT[216:213] == 4'd2 &&
	     { 5'd0,
	       cntrl_reqQ_D_OUT[237],
	       2'd0,
	       cntrl_reqQ_D_OUT[234],
	       1'd0,
	       cntrl_reqQ_D_OUT[232],
	       2'd0,
	       cntrl_reqQ_D_OUT[229],
	       3'd0,
	       cntrl_reqQ_D_OUT[225],
	       7'd0,
	       cntrl_reqQ_D_OUT[217] } ==
	     26'd1216769 ||
	     WILL_FIRE_RL_cntrl_onRTR && cntrl_reqQ_D_OUT[300:299] == 2'd2 &&
	     (cntrl_reqQ_D_OUT[216:213] == 4'd6 && cntrl_reqQ_D_OUT[217] ||
	      cntrl_reqQ_D_OUT[216:213] == 4'd3 &&
	      { 9'd0,
		cntrl_reqQ_D_OUT[233],
		2'd0,
		cntrl_reqQ_D_OUT[230],
		1'd0,
		cntrl_reqQ_D_OUT[228:226],
		8'd0,
		cntrl_reqQ_D_OUT[217] } ==
	      26'd77313) ||
	     WILL_FIRE_RL_cntrl_onRTS && cntrl_reqQ_D_OUT[300:299] == 2'd2 &&
	     (cntrl_reqQ_D_OUT[216:213] == 4'd4 ||
	      cntrl_reqQ_D_OUT[216:213] == 4'd6) &&
	     cntrl_reqQ_D_OUT[217] ||
	     WILL_FIRE_RL_cntrl_onSQD && cntrl_reqQ_D_OUT[300:299] == 2'd2 &&
	     (cntrl_reqQ_D_OUT[216:213] == 4'd6 ||
	      cntrl_reqQ_D_OUT[216:213] == 4'd3) &&
	     cntrl_reqQ_D_OUT[217] ||
	     WILL_FIRE_RL_cntrl_onERR &&
	     (cntrl_reqQ_D_OUT[300:299] == 2'd1 ||
	      cntrl_reqQ_D_OUT[300:299] == 2'd2 &&
	      cntrl_reqQ_D_OUT[216:213] == 4'd0 &&
	      cntrl_reqQ_D_OUT[217]) ;
  always@(MUX_cntrl_nextStateReg_port0__write_1__SEL_1 or
	  MUX_cntrl_nextStateReg_port0__write_1__SEL_2 or
	  MUX_cntrl_nextStateReg_port0__write_1__VAL_2 or
	  MUX_cntrl_nextStateReg_port0__write_1__SEL_3 or
	  MUX_cntrl_nextStateReg_port0__write_1__SEL_4 or
	  MUX_cntrl_nextStateReg_port0__write_1__SEL_5 or
	  MUX_cntrl_nextStateReg_port0__write_1__SEL_6 or
	  MUX_cntrl_nextStateReg_port0__write_1__SEL_7 or
	  MUX_cntrl_nextStateReg_port0__write_1__VAL_7)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cntrl_nextStateReg_port0__write_1__SEL_1:
	  cntrl_nextStateReg_port0__write_1 = 5'd24;
      MUX_cntrl_nextStateReg_port0__write_1__SEL_2:
	  cntrl_nextStateReg_port0__write_1 =
	      MUX_cntrl_nextStateReg_port0__write_1__VAL_2;
      MUX_cntrl_nextStateReg_port0__write_1__SEL_3:
	  cntrl_nextStateReg_port0__write_1 =
	      MUX_cntrl_nextStateReg_port0__write_1__VAL_2;
      MUX_cntrl_nextStateReg_port0__write_1__SEL_4:
	  cntrl_nextStateReg_port0__write_1 =
	      MUX_cntrl_nextStateReg_port0__write_1__VAL_2;
      MUX_cntrl_nextStateReg_port0__write_1__SEL_5:
	  cntrl_nextStateReg_port0__write_1 =
	      MUX_cntrl_nextStateReg_port0__write_1__VAL_2;
      MUX_cntrl_nextStateReg_port0__write_1__SEL_6:
	  cntrl_nextStateReg_port0__write_1 =
	      MUX_cntrl_nextStateReg_port0__write_1__VAL_2;
      MUX_cntrl_nextStateReg_port0__write_1__SEL_7:
	  cntrl_nextStateReg_port0__write_1 =
	      MUX_cntrl_nextStateReg_port0__write_1__VAL_7;
      default: cntrl_nextStateReg_port0__write_1 =
		   5'b01010 /* unspecified value */ ;
    endcase
  end
  assign cntrl_nextStateReg_port1__read =
	     cntrl_nextStateReg_EN_port0__write ?
	       cntrl_nextStateReg_port0__write_1 :
	       cntrl_nextStateReg ;
  assign cntrl_nextStateReg_EN_port1__write = 1'd1 ;
  assign cntrl_nextStateReg_port1__write_1 = 5'd10 ;
  assign cntrl_nextStateReg_port2__read = 5'd10 ;
  assign cntrl_nextStateReg_EN_port2__write = 1'b0 ;
  assign cntrl_nextStateReg_port2__write_1 = 5'h0 ;
  assign cntrl_nextStateReg_port3__read = 5'd10 ;
  assign cntrl_nextStateReg_EN_port3__write = 1'b0 ;
  assign cntrl_nextStateReg_port3__write_1 = 5'h0 ;
  assign cntrl_nextStateReg_port4__read = 5'd10 ;
  assign cntrl_nextStateReg_EN_port4__write = 1'b0 ;
  assign cntrl_nextStateReg_port4__write_1 = 5'h0 ;
  assign cntrl_preReqOpCodeReg_port0__read = cntrl_preReqOpCodeReg ;
  assign cntrl_preReqOpCodeReg_EN_port0__write = cntrl_stateReg == 4'd0 ;
  assign cntrl_preReqOpCodeReg_port0__write_1 = 5'd4 ;
  assign cntrl_preReqOpCodeReg_port1__read =
	     (cntrl_stateReg == 4'd0) ? 5'd4 : cntrl_preReqOpCodeReg ;
  assign cntrl_preReqOpCodeReg_EN_port1__write = CAN_FIRE_RL_cntrl_restore ;
  assign cntrl_preReqOpCodeReg_port1__write_1 = cntrl_restoreQ_D_OUT[28:24] ;
  assign cntrl_preReqOpCodeReg_port2__read =
	     CAN_FIRE_RL_cntrl_restore ?
	       cntrl_restoreQ_D_OUT[28:24] :
	       cntrl_preReqOpCodeReg_port1__read ;
  assign cntrl_preReqOpCodeReg_EN_port2__write = 1'b0 ;
  assign cntrl_preReqOpCodeReg_port2__write_1 = 5'h0 ;
  assign cntrl_preReqOpCodeReg_port3__read =
	     cntrl_preReqOpCodeReg_port2__read ;
  assign cntrl_preReqOpCodeReg_EN_port3__write = 1'b0 ;
  assign cntrl_preReqOpCodeReg_port3__write_1 = 5'h0 ;
  assign cntrl_preReqOpCodeReg_port4__read =
	     cntrl_preReqOpCodeReg_port2__read ;
  assign cntrl_preReqOpCodeReg_EN_port4__write = 1'b0 ;
  assign cntrl_preReqOpCodeReg_port4__write_1 = 5'h0 ;
  assign cntrl_epsnReg_port0__read = cntrl_epsnReg ;
  assign cntrl_epsnReg_EN_port0__write =
	     WILL_FIRE_RL_cntrl_onINIT && cntrl_reqQ_D_OUT[300:299] == 2'd2 ;
  assign cntrl_epsnReg_port0__write_1 = cntrl_reqQ_D_OUT[173:150] ;
  assign cntrl_epsnReg_port1__read =
	     cntrl_epsnReg_EN_port0__write ?
	       cntrl_reqQ_D_OUT[173:150] :
	       cntrl_epsnReg ;
  assign cntrl_epsnReg_EN_port1__write = CAN_FIRE_RL_cntrl_restore ;
  assign cntrl_epsnReg_port1__write_1 = cntrl_restoreQ_D_OUT[23:0] ;
  assign cntrl_epsnReg_port2__read =
	     CAN_FIRE_RL_cntrl_restore ?
	       cntrl_restoreQ_D_OUT[23:0] :
	       cntrl_epsnReg_port1__read ;
  assign cntrl_epsnReg_EN_port2__write = 1'b0 ;
  assign cntrl_epsnReg_port2__write_1 = 24'h0 ;
  assign cntrl_epsnReg_port3__read = cntrl_epsnReg_port2__read ;
  assign cntrl_epsnReg_EN_port3__write = 1'b0 ;
  assign cntrl_epsnReg_port3__write_1 = 24'h0 ;
  assign cntrl_epsnReg_port4__read = cntrl_epsnReg_port2__read ;
  assign cntrl_epsnReg_EN_port4__write = 1'b0 ;
  assign cntrl_epsnReg_port4__write_1 = 24'h0 ;
  assign dmaReadCntrl4SQ_gracefulStopReg_port0__read =
	     dmaReadCntrl4SQ_gracefulStopReg ;
  assign dmaReadCntrl4SQ_gracefulStopReg_EN_port0__write =
	     CAN_FIRE_RL_cancelDmaReadSQ ;
  assign dmaReadCntrl4SQ_gracefulStopReg_port0__write_1 = 1'd0 ;
  assign dmaReadCntrl4SQ_gracefulStopReg_port1__read =
	     !CAN_FIRE_RL_cancelDmaReadSQ && dmaReadCntrl4SQ_gracefulStopReg ;
  assign dmaReadCntrl4SQ_gracefulStopReg_EN_port1__write =
	     WILL_FIRE_RL_dmaReadCntrl4SQ_resetAndClear ||
	     WILL_FIRE_RL_dmaReadCntrl4SQ_setGracefulStop ;
  assign dmaReadCntrl4SQ_gracefulStopReg_port1__write_1 =
	     !WILL_FIRE_RL_dmaReadCntrl4SQ_resetAndClear ;
  assign dmaReadCntrl4SQ_gracefulStopReg_port2__read =
	     dmaReadCntrl4SQ_gracefulStopReg_EN_port1__write ?
	       !WILL_FIRE_RL_dmaReadCntrl4SQ_resetAndClear :
	       dmaReadCntrl4SQ_gracefulStopReg_port1__read ;
  assign dmaReadCntrl4SQ_gracefulStopReg_EN_port2__write = 1'b0 ;
  assign dmaReadCntrl4SQ_gracefulStopReg_port2__write_1 = 1'b0 ;
  assign dmaReadCntrl4SQ_gracefulStopReg_port3__read =
	     dmaReadCntrl4SQ_gracefulStopReg_port2__read ;
  assign dmaReadCntrl4SQ_gracefulStopReg_EN_port3__write = 1'b0 ;
  assign dmaReadCntrl4SQ_gracefulStopReg_port3__write_1 = 1'b0 ;
  assign dmaReadCntrl4SQ_gracefulStopReg_port4__read =
	     dmaReadCntrl4SQ_gracefulStopReg_port2__read ;
  assign dmaReadCntrl4SQ_gracefulStopReg_EN_port4__write = 1'b0 ;
  assign dmaReadCntrl4SQ_gracefulStopReg_port4__write_1 = 1'b0 ;
  assign dmaReadCntrl4SQ_cancelReg_port0__read = dmaReadCntrl4SQ_cancelReg ;
  assign dmaReadCntrl4SQ_cancelReg_EN_port0__write =
	     CAN_FIRE_RL_cancelDmaReadSQ ;
  assign dmaReadCntrl4SQ_cancelReg_port0__write_1 = 1'd1 ;
  assign dmaReadCntrl4SQ_cancelReg_port1__read =
	     CAN_FIRE_RL_cancelDmaReadSQ || dmaReadCntrl4SQ_cancelReg ;
  assign dmaReadCntrl4SQ_cancelReg_EN_port1__write = cntrl_stateReg == 4'd0 ;
  assign dmaReadCntrl4SQ_cancelReg_port1__write_1 = 1'd0 ;
  assign dmaReadCntrl4SQ_cancelReg_port2__read =
	     cntrl_stateReg != 4'd0 && dmaReadCntrl4SQ_cancelReg_port1__read ;
  assign dmaReadCntrl4SQ_cancelReg_EN_port2__write = 1'b0 ;
  assign dmaReadCntrl4SQ_cancelReg_port2__write_1 = 1'b0 ;
  assign dmaReadCntrl4SQ_cancelReg_port3__read =
	     dmaReadCntrl4SQ_cancelReg_port2__read ;
  assign dmaReadCntrl4SQ_cancelReg_EN_port3__write = 1'b0 ;
  assign dmaReadCntrl4SQ_cancelReg_port3__write_1 = 1'b0 ;
  assign dmaReadCntrl4SQ_cancelReg_port4__read =
	     dmaReadCntrl4SQ_cancelReg_port2__read ;
  assign dmaReadCntrl4SQ_cancelReg_EN_port4__write = 1'b0 ;
  assign dmaReadCntrl4SQ_cancelReg_port4__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_pushReg_port0__read =
	     sq_pendingWorkReqBuf_pushReg ;
  assign sq_pendingWorkReqBuf_pushReg_EN_port0__write =
	     CAN_FIRE_RL_sq_pendingWorkReq2Q_mkConnectionGetPut ;
  assign sq_pendingWorkReqBuf_pushReg_port0__write_1 =
	     { 1'd1, sq_reqGenSQ_pendingWorkReqOutQ_D_OUT } ;
  assign sq_pendingWorkReqBuf_pushReg_port1__read =
	     CAN_FIRE_RL_sq_pendingWorkReq2Q_mkConnectionGetPut ?
	       sq_pendingWorkReqBuf_pushReg_port0__write_1 :
	       sq_pendingWorkReqBuf_pushReg ;
  assign sq_pendingWorkReqBuf_pushReg_EN_port1__write =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;
  assign sq_pendingWorkReqBuf_pushReg_port1__write_1 =
	     680'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ;
  assign sq_pendingWorkReqBuf_pushReg_port2__read =
	     sq_pendingWorkReqBuf_pushReg_EN_port1__write ?
	       680'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       sq_pendingWorkReqBuf_pushReg_port1__read ;
  assign sq_pendingWorkReqBuf_pushReg_EN_port2__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_pushReg_port2__write_1 = 680'h0 ;
  assign sq_pendingWorkReqBuf_pushReg_port3__read =
	     sq_pendingWorkReqBuf_pushReg_port2__read ;
  assign sq_pendingWorkReqBuf_pushReg_EN_port3__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_pushReg_port3__write_1 = 680'h0 ;
  assign sq_pendingWorkReqBuf_pushReg_port4__read =
	     sq_pendingWorkReqBuf_pushReg_port2__read ;
  assign sq_pendingWorkReqBuf_pushReg_EN_port4__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_pushReg_port4__write_1 = 680'h0 ;
  assign sq_pendingWorkReqBuf_popReg_port0__read =
	     sq_pendingWorkReqBuf_popReg ;
  assign sq_pendingWorkReqBuf_popReg_EN_port0__write =
	     WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	     sq_respHandleSQ_preStageDeqPendingWorkReqReg ||
	     WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign sq_pendingWorkReqBuf_popReg_port0__write_1 = 1'd1 ;
  assign sq_pendingWorkReqBuf_popReg_port1__read =
	     sq_pendingWorkReqBuf_popReg_EN_port0__write ?
	       1'd1 :
	       sq_pendingWorkReqBuf_popReg ;
  assign sq_pendingWorkReqBuf_popReg_EN_port1__write =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;
  assign sq_pendingWorkReqBuf_popReg_port1__write_1 = 1'd0 ;
  assign sq_pendingWorkReqBuf_popReg_port2__read =
	     !sq_pendingWorkReqBuf_popReg_EN_port1__write &&
	     sq_pendingWorkReqBuf_popReg_port1__read ;
  assign sq_pendingWorkReqBuf_popReg_EN_port2__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_popReg_port2__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_popReg_port3__read =
	     sq_pendingWorkReqBuf_popReg_port2__read ;
  assign sq_pendingWorkReqBuf_popReg_EN_port3__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_popReg_port3__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_popReg_port4__read =
	     sq_pendingWorkReqBuf_popReg_port2__read ;
  assign sq_pendingWorkReqBuf_popReg_EN_port4__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_popReg_port4__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_clearReg_port0__read =
	     sq_pendingWorkReqBuf_clearReg ;
  assign sq_pendingWorkReqBuf_clearReg_EN_port0__write =
	     WILL_FIRE_RL_sq_resetAndClear ||
	     WILL_FIRE_RL_sq_retryHandler_resetAndClear ;
  assign sq_pendingWorkReqBuf_clearReg_port0__write_1 = 1'd1 ;
  assign sq_pendingWorkReqBuf_clearReg_port1__read =
	     CAN_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;
  assign sq_pendingWorkReqBuf_clearReg_EN_port1__write =
	     CAN_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;
  assign sq_pendingWorkReqBuf_clearReg_port1__write_1 = 1'd0 ;
  assign sq_pendingWorkReqBuf_clearReg_port2__read =
	     !CAN_FIRE_RL_sq_pendingWorkReqBuf_clearAll &&
	     CAN_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;
  assign sq_pendingWorkReqBuf_clearReg_EN_port2__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_clearReg_port2__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_clearReg_port3__read =
	     sq_pendingWorkReqBuf_clearReg_port2__read ;
  assign sq_pendingWorkReqBuf_clearReg_EN_port3__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_clearReg_port3__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_clearReg_port4__read =
	     sq_pendingWorkReqBuf_clearReg_port2__read ;
  assign sq_pendingWorkReqBuf_clearReg_EN_port4__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_clearReg_port4__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_preScanStartReg_port0__read =
	     sq_pendingWorkReqBuf_preScanStartReg ;
  assign sq_pendingWorkReqBuf_preScanStartReg_EN_port0__write =
	     WILL_FIRE_RL_sq_retryHandler_startPreRetry &&
	     sq_pendingWorkReqBuf_scanStateReg == 2'd0 ;
  assign sq_pendingWorkReqBuf_preScanStartReg_port0__write_1 = 1'd1 ;
  assign sq_pendingWorkReqBuf_preScanStartReg_port1__read =
	     sq_pendingWorkReqBuf_preScanStartReg_EN_port0__write ||
	     sq_pendingWorkReqBuf_preScanStartReg ;
  assign sq_pendingWorkReqBuf_preScanStartReg_EN_port1__write =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;
  assign sq_pendingWorkReqBuf_preScanStartReg_port1__write_1 = 1'd0 ;
  assign sq_pendingWorkReqBuf_preScanStartReg_port2__read =
	     !sq_pendingWorkReqBuf_preScanStartReg_EN_port1__write &&
	     sq_pendingWorkReqBuf_preScanStartReg_port1__read ;
  assign sq_pendingWorkReqBuf_preScanStartReg_EN_port2__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_preScanStartReg_port2__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_preScanStartReg_port3__read =
	     sq_pendingWorkReqBuf_preScanStartReg_port2__read ;
  assign sq_pendingWorkReqBuf_preScanStartReg_EN_port3__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_preScanStartReg_port3__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_preScanStartReg_port4__read =
	     sq_pendingWorkReqBuf_preScanStartReg_port2__read ;
  assign sq_pendingWorkReqBuf_preScanStartReg_EN_port4__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_preScanStartReg_port4__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanStartReg_port0__read =
	     sq_pendingWorkReqBuf_scanStartReg ;
  assign sq_pendingWorkReqBuf_scanStartReg_EN_port0__write =
	     CAN_FIRE_RL_sq_retryHandler_startRetry ;
  assign sq_pendingWorkReqBuf_scanStartReg_port0__write_1 = 1'd1 ;
  assign sq_pendingWorkReqBuf_scanStartReg_port1__read =
	     CAN_FIRE_RL_sq_retryHandler_startRetry ||
	     sq_pendingWorkReqBuf_scanStartReg ;
  assign sq_pendingWorkReqBuf_scanStartReg_EN_port1__write =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;
  assign sq_pendingWorkReqBuf_scanStartReg_port1__write_1 = 1'd0 ;
  assign sq_pendingWorkReqBuf_scanStartReg_port2__read =
	     !sq_pendingWorkReqBuf_scanStartReg_EN_port1__write &&
	     sq_pendingWorkReqBuf_scanStartReg_port1__read ;
  assign sq_pendingWorkReqBuf_scanStartReg_EN_port2__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanStartReg_port2__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanStartReg_port3__read =
	     sq_pendingWorkReqBuf_scanStartReg_port2__read ;
  assign sq_pendingWorkReqBuf_scanStartReg_EN_port3__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanStartReg_port3__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanStartReg_port4__read =
	     sq_pendingWorkReqBuf_scanStartReg_port2__read ;
  assign sq_pendingWorkReqBuf_scanStartReg_EN_port4__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanStartReg_port4__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanStopReg_port0__read =
	     sq_pendingWorkReqBuf_scanStopReg ;
  assign sq_pendingWorkReqBuf_scanStopReg_EN_port0__write =
	     CAN_FIRE_RL_sq_retryHandler_stopScanQ ;
  assign sq_pendingWorkReqBuf_scanStopReg_port0__write_1 = 1'd1 ;
  assign sq_pendingWorkReqBuf_scanStopReg_port1__read =
	     CAN_FIRE_RL_sq_retryHandler_stopScanQ ||
	     sq_pendingWorkReqBuf_scanStopReg ;
  assign sq_pendingWorkReqBuf_scanStopReg_EN_port1__write =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;
  assign sq_pendingWorkReqBuf_scanStopReg_port1__write_1 = 1'd0 ;
  assign sq_pendingWorkReqBuf_scanStopReg_port2__read =
	     !sq_pendingWorkReqBuf_scanStopReg_EN_port1__write &&
	     sq_pendingWorkReqBuf_scanStopReg_port1__read ;
  assign sq_pendingWorkReqBuf_scanStopReg_EN_port2__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanStopReg_port2__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanStopReg_port3__read =
	     sq_pendingWorkReqBuf_scanStopReg_port2__read ;
  assign sq_pendingWorkReqBuf_scanStopReg_EN_port3__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanStopReg_port3__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanStopReg_port4__read =
	     sq_pendingWorkReqBuf_scanStopReg_port2__read ;
  assign sq_pendingWorkReqBuf_scanStopReg_EN_port4__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanStopReg_port4__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_preScanRestartReg_port0__read =
	     sq_pendingWorkReqBuf_preScanRestartReg ;
  assign sq_pendingWorkReqBuf_preScanRestartReg_EN_port0__write =
	     WILL_FIRE_RL_sq_retryHandler_startPreRetry &&
	     sq_pendingWorkReqBuf_scanStateReg != 2'd0 ;
  assign sq_pendingWorkReqBuf_preScanRestartReg_port0__write_1 = 1'd1 ;
  assign sq_pendingWorkReqBuf_preScanRestartReg_port1__read =
	     sq_pendingWorkReqBuf_preScanRestartReg_EN_port0__write ||
	     sq_pendingWorkReqBuf_preScanRestartReg ;
  assign sq_pendingWorkReqBuf_preScanRestartReg_EN_port1__write =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;
  assign sq_pendingWorkReqBuf_preScanRestartReg_port1__write_1 = 1'd0 ;
  assign sq_pendingWorkReqBuf_preScanRestartReg_port2__read =
	     !sq_pendingWorkReqBuf_preScanRestartReg_EN_port1__write &&
	     sq_pendingWorkReqBuf_preScanRestartReg_port1__read ;
  assign sq_pendingWorkReqBuf_preScanRestartReg_EN_port2__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_preScanRestartReg_port2__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_preScanRestartReg_port3__read =
	     sq_pendingWorkReqBuf_preScanRestartReg_port2__read ;
  assign sq_pendingWorkReqBuf_preScanRestartReg_EN_port3__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_preScanRestartReg_port3__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_preScanRestartReg_port4__read =
	     sq_pendingWorkReqBuf_preScanRestartReg_port2__read ;
  assign sq_pendingWorkReqBuf_preScanRestartReg_EN_port4__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_preScanRestartReg_port4__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanDoneReg_port0__read =
	     sq_pendingWorkReqBuf_scanDoneReg ;
  assign sq_pendingWorkReqBuf_scanDoneReg_EN_port0__write =
	     CAN_FIRE_RL_sq_pendingWorkReqBuf_scanNext ;
  assign sq_pendingWorkReqBuf_scanDoneReg_port0__write_1 =
	     sq_pendingWorkReqBuf_scanAlmostDoneReg ;
  assign sq_pendingWorkReqBuf_scanDoneReg_port1__read =
	     CAN_FIRE_RL_sq_pendingWorkReqBuf_scanNext ?
	       sq_pendingWorkReqBuf_scanAlmostDoneReg :
	       sq_pendingWorkReqBuf_scanDoneReg ;
  assign sq_pendingWorkReqBuf_scanDoneReg_EN_port1__write =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;
  assign sq_pendingWorkReqBuf_scanDoneReg_port1__write_1 = 1'd0 ;
  assign sq_pendingWorkReqBuf_scanDoneReg_port2__read =
	     !sq_pendingWorkReqBuf_scanDoneReg_EN_port1__write &&
	     sq_pendingWorkReqBuf_scanDoneReg_port1__read ;
  assign sq_pendingWorkReqBuf_scanDoneReg_EN_port2__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanDoneReg_port2__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanDoneReg_port3__read =
	     sq_pendingWorkReqBuf_scanDoneReg_port2__read ;
  assign sq_pendingWorkReqBuf_scanDoneReg_EN_port3__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanDoneReg_port3__write_1 = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanDoneReg_port4__read =
	     sq_pendingWorkReqBuf_scanDoneReg_port2__read ;
  assign sq_pendingWorkReqBuf_scanDoneReg_EN_port4__write = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanDoneReg_port4__write_1 = 1'b0 ;
  assign sq_retryHandler_retryCntrlStateReg_port0__read =
	     sq_retryHandler_retryCntrlStateReg ;
  assign sq_retryHandler_retryCntrlStateReg_EN_port0__write =
	     WILL_FIRE_RL_sq_retryHandler_waitRetryFinish &&
	     sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	     WILL_FIRE_RL_sq_retryHandler_resetAndClear ||
	     WILL_FIRE_RL_sq_retryHandler_initRetry ;
  assign sq_retryHandler_retryCntrlStateReg_port0__write_1 =
	     (MUX_sq_retryHandler_retryCntrlStateReg_port0__write_1__SEL_1 ||
	      WILL_FIRE_RL_sq_retryHandler_resetAndClear) ?
	       2'd0 :
	       2'd3 ;
  assign sq_retryHandler_retryCntrlStateReg_port1__read =
	     sq_retryHandler_retryCntrlStateReg_EN_port0__write ?
	       sq_retryHandler_retryCntrlStateReg_port0__write_1 :
	       sq_retryHandler_retryCntrlStateReg ;
  assign sq_retryHandler_retryCntrlStateReg_EN_port1__write =
	     MUX_sq_retryHandler_pauseRetryHandleReg_write_1__SEL_1 ;
  assign sq_retryHandler_retryCntrlStateReg_port1__write_1 =
	     IF_IF_sq_retryHandler_updateRetryCntQ_first__3_ETC___d1388 ?
	       2'd1 :
	       2'd2 ;
  assign sq_retryHandler_retryCntrlStateReg_port2__read =
	     MUX_sq_retryHandler_pauseRetryHandleReg_write_1__SEL_1 ?
	       sq_retryHandler_retryCntrlStateReg_port1__write_1 :
	       sq_retryHandler_retryCntrlStateReg_port1__read ;
  assign sq_retryHandler_retryCntrlStateReg_EN_port2__write = 1'b0 ;
  assign sq_retryHandler_retryCntrlStateReg_port2__write_1 = 2'h0 ;
  assign sq_retryHandler_retryCntrlStateReg_port3__read =
	     sq_retryHandler_retryCntrlStateReg_port2__read ;
  assign sq_retryHandler_retryCntrlStateReg_EN_port3__write = 1'b0 ;
  assign sq_retryHandler_retryCntrlStateReg_port3__write_1 = 2'h0 ;
  assign sq_retryHandler_retryCntrlStateReg_port4__read =
	     sq_retryHandler_retryCntrlStateReg_port2__read ;
  assign sq_retryHandler_retryCntrlStateReg_EN_port4__write = 1'b0 ;
  assign sq_retryHandler_retryCntrlStateReg_port4__write_1 = 2'h0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port0__read =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_EN_port0__write =
	     cntrl_stateReg == 4'd0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port0__write_1 =
	     9'd256 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port1__read =
	     (cntrl_stateReg == 4'd0) ?
	       9'd256 :
	       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_EN_port1__write =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_write ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port1__write_1 =
	     9'd170 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port2__read =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port1__read[8] ?
	       9'd170 :
	       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port1__read ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_EN_port2__write =
	     1'b0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port2__write_1 =
	     9'h0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port3__read =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port2__read ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_EN_port3__write =
	     1'b0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port3__write_1 =
	     9'h0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port4__read =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port2__read ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_EN_port4__write =
	     1'b0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port4__write_1 =
	     9'h0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port0__read =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_EN_port0__write =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_increment ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port0__write_1 =
	     1'd1 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port1__read =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_increment ||
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_EN_port1__write =
	     WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrAndDecr ||
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port1__read[8] ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port1__write_1 =
	     1'd0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port2__read =
	     !sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_EN_port1__write &&
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port1__read ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_EN_port2__write =
	     1'b0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port2__write_1 =
	     1'b0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port3__read =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port2__read ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_EN_port3__write =
	     1'b0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port3__write_1 =
	     1'b0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port4__read =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port2__read ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_EN_port4__write =
	     1'b0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port4__write_1 =
	     1'b0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port0__read =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_EN_port0__write =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrement ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port0__write_1 =
	     1'd1 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port1__read =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrement ||
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_EN_port1__write =
	     WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrAndDecr ||
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port1__read[8] ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port1__write_1 =
	     1'd0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port2__read =
	     !sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_EN_port1__write &&
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port1__read ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_EN_port2__write =
	     1'b0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port2__write_1 =
	     1'b0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port3__read =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port2__read ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_EN_port3__write =
	     1'b0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port3__write_1 =
	     1'b0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port4__read =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port2__read ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_EN_port4__write =
	     1'b0 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port4__write_1 =
	     1'b0 ;
  assign sq_respHandleSQ_hasInternalErrReg_port0__read =
	     sq_respHandleSQ_hasInternalErrReg ;
  assign sq_respHandleSQ_hasInternalErrReg_EN_port0__write =
	     WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	     sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	     sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd0 ||
	     WILL_FIRE_RL_sq_respHandleSQ_resetAndClear ;
  assign sq_respHandleSQ_hasInternalErrReg_port0__write_1 =
	     MUX_sq_respHandleSQ_hasInternalErrReg_port0__write_1__SEL_1 ;
  assign sq_respHandleSQ_hasInternalErrReg_port1__read =
	     sq_respHandleSQ_hasInternalErrReg_EN_port0__write ?
	       MUX_sq_respHandleSQ_hasInternalErrReg_port0__write_1__SEL_1 :
	       sq_respHandleSQ_hasInternalErrReg ;
  assign sq_respHandleSQ_hasInternalErrReg_EN_port1__write =
	     CAN_FIRE_RL_sq_respHandleSQ_canonicalize ;
  assign sq_respHandleSQ_hasInternalErrReg_port1__write_1 = 1'd0 ;
  assign sq_respHandleSQ_hasInternalErrReg_port2__read =
	     !CAN_FIRE_RL_sq_respHandleSQ_canonicalize &&
	     sq_respHandleSQ_hasInternalErrReg_port1__read ;
  assign sq_respHandleSQ_hasInternalErrReg_EN_port2__write = 1'b0 ;
  assign sq_respHandleSQ_hasInternalErrReg_port2__write_1 = 1'b0 ;
  assign sq_respHandleSQ_hasInternalErrReg_port3__read =
	     sq_respHandleSQ_hasInternalErrReg_port2__read ;
  assign sq_respHandleSQ_hasInternalErrReg_EN_port3__write = 1'b0 ;
  assign sq_respHandleSQ_hasInternalErrReg_port3__write_1 = 1'b0 ;
  assign sq_respHandleSQ_hasInternalErrReg_port4__read =
	     sq_respHandleSQ_hasInternalErrReg_port2__read ;
  assign sq_respHandleSQ_hasInternalErrReg_EN_port4__write = 1'b0 ;
  assign sq_respHandleSQ_hasInternalErrReg_port4__write_1 = 1'b0 ;
  assign sq_respHandleSQ_hasTimeOutErrReg_port0__read =
	     sq_respHandleSQ_hasTimeOutErrReg ;
  assign sq_respHandleSQ_hasTimeOutErrReg_EN_port0__write =
	     WILL_FIRE_RL_sq_respHandleSQ_checkTimeOutErr &&
	     sq_retryHandler_timeOutNotificationQ_D_OUT ||
	     WILL_FIRE_RL_sq_respHandleSQ_resetAndClear ||
	     WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign sq_respHandleSQ_hasTimeOutErrReg_port0__write_1 =
	     MUX_sq_respHandleSQ_hasTimeOutErrReg_port0__write_1__SEL_1 ;
  assign sq_respHandleSQ_hasTimeOutErrReg_port1__read =
	     sq_respHandleSQ_hasTimeOutErrReg_EN_port0__write ?
	       MUX_sq_respHandleSQ_hasTimeOutErrReg_port0__write_1__SEL_1 :
	       sq_respHandleSQ_hasTimeOutErrReg ;
  assign sq_respHandleSQ_hasTimeOutErrReg_EN_port1__write = 1'b0 ;
  assign sq_respHandleSQ_hasTimeOutErrReg_port1__write_1 = 1'b0 ;
  assign sq_respHandleSQ_hasTimeOutErrReg_port2__read =
	     sq_respHandleSQ_hasTimeOutErrReg_port1__read ;
  assign sq_respHandleSQ_hasTimeOutErrReg_EN_port2__write = 1'b0 ;
  assign sq_respHandleSQ_hasTimeOutErrReg_port2__write_1 = 1'b0 ;
  assign sq_respHandleSQ_hasTimeOutErrReg_port3__read =
	     sq_respHandleSQ_hasTimeOutErrReg_port1__read ;
  assign sq_respHandleSQ_hasTimeOutErrReg_EN_port3__write = 1'b0 ;
  assign sq_respHandleSQ_hasTimeOutErrReg_port3__write_1 = 1'b0 ;
  assign sq_respHandleSQ_hasTimeOutErrReg_port4__read =
	     sq_respHandleSQ_hasTimeOutErrReg_port1__read ;
  assign sq_respHandleSQ_hasTimeOutErrReg_EN_port4__write = 1'b0 ;
  assign sq_respHandleSQ_hasTimeOutErrReg_port4__write_1 = 1'b0 ;

  // register cntrl_dqpnReg
  assign cntrl_dqpnReg_D_IN = cntrl_reqQ_D_OUT[125:102] ;
  assign cntrl_dqpnReg_EN =
	     WILL_FIRE_RL_cntrl_onINIT && cntrl_reqQ_D_OUT[300:299] == 2'd2 ;

  // register cntrl_epsnReg
  assign cntrl_epsnReg_D_IN = cntrl_epsnReg_port2__read ;
  assign cntrl_epsnReg_EN = 1'b1 ;

  // register cntrl_errFlushDoneReg
  assign cntrl_errFlushDoneReg_D_IN = !WILL_FIRE_RL_errTrigger ;
  assign cntrl_errFlushDoneReg_EN =
	     WILL_FIRE_RL_errTrigger || WILL_FIRE_RL_waitGracefulStop ;

  // register cntrl_maxRetryCntReg
  assign cntrl_maxRetryCntReg_D_IN = cntrl_reqQ_D_OUT[10:8] ;
  assign cntrl_maxRetryCntReg_EN = MUX_cntrl_npsnReg_write_1__SEL_1 ;

  // register cntrl_maxRnrCntReg
  assign cntrl_maxRnrCntReg_D_IN = cntrl_reqQ_D_OUT[7:5] ;
  assign cntrl_maxRnrCntReg_EN = MUX_cntrl_npsnReg_write_1__SEL_1 ;

  // register cntrl_maxTimeOutReg
  assign cntrl_maxTimeOutReg_D_IN = cntrl_reqQ_D_OUT[15:11] ;
  assign cntrl_maxTimeOutReg_EN = MUX_cntrl_npsnReg_write_1__SEL_1 ;

  // register cntrl_minRnrTimerReg
  assign cntrl_minRnrTimerReg_D_IN = cntrl_reqQ_D_OUT[20:16] ;
  assign cntrl_minRnrTimerReg_EN =
	     WILL_FIRE_RL_cntrl_onINIT && cntrl_reqQ_D_OUT[300:299] == 2'd2 ;

  // register cntrl_nextStateReg
  assign cntrl_nextStateReg_D_IN = 5'd10 ;
  assign cntrl_nextStateReg_EN = 1'b1 ;

  // register cntrl_npsnReg
  assign cntrl_npsnReg_D_IN =
	     MUX_cntrl_npsnReg_write_1__SEL_1 ?
	       cntrl_reqQ_D_OUT[149:126] :
	       nextPktSeqNum__h56056 ;
  assign cntrl_npsnReg_EN =
	     WILL_FIRE_RL_cntrl_onRTR && cntrl_reqQ_D_OUT[300:299] == 2'd2 ||
	     WILL_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq &&
	     sq_reqGenSQ_workReqPsnQ_D_OUT[4] ;

  // register cntrl_pendingDestReadAtomicReqNumReg
  assign cntrl_pendingDestReadAtomicReqNumReg_D_IN = cntrl_reqQ_D_OUT[28:21] ;
  assign cntrl_pendingDestReadAtomicReqNumReg_EN =
	     WILL_FIRE_RL_cntrl_onINIT && cntrl_reqQ_D_OUT[300:299] == 2'd2 ;

  // register cntrl_pendingReadAtomicReqNumReg
  assign cntrl_pendingReadAtomicReqNumReg_D_IN = cntrl_reqQ_D_OUT[36:29] ;
  assign cntrl_pendingReadAtomicReqNumReg_EN =
	     MUX_cntrl_npsnReg_write_1__SEL_1 ;

  // register cntrl_pendingRecvReqNumReg
  assign cntrl_pendingRecvReqNumReg_D_IN = 8'd4 ;
  assign cntrl_pendingRecvReqNumReg_EN = cntrl_stateReg == 4'd0 ;

  // register cntrl_pendingWorkReqNumReg
  assign cntrl_pendingWorkReqNumReg_D_IN = 8'd4 ;
  assign cntrl_pendingWorkReqNumReg_EN = cntrl_stateReg == 4'd0 ;

  // register cntrl_pkeyReg
  assign cntrl_pkeyReg_D_IN = cntrl_reqQ_D_OUT[53:38] ;
  assign cntrl_pkeyReg_EN =
	     WILL_FIRE_RL_cntrl_onCreate &&
	     cntrl_reqQ_D_OUT[300:299] == 2'd2 ;

  // register cntrl_pmtuReg
  assign cntrl_pmtuReg_D_IN = cntrl_reqQ_D_OUT[208:206] ;
  assign cntrl_pmtuReg_EN =
	     WILL_FIRE_RL_cntrl_onINIT && cntrl_reqQ_D_OUT[300:299] == 2'd2 ;

  // register cntrl_preReqOpCodeReg
  assign cntrl_preReqOpCodeReg_D_IN = cntrl_preReqOpCodeReg_port2__read ;
  assign cntrl_preReqOpCodeReg_EN = 1'b1 ;

  // register cntrl_preStateReg
  assign cntrl_preStateReg_D_IN = cntrl_stateReg ;
  assign cntrl_preStateReg_EN = 1'd1 ;

  // register cntrl_qkeyReg
  assign cntrl_qkeyReg_D_IN = 32'h0 ;
  assign cntrl_qkeyReg_EN = 1'b0 ;

  // register cntrl_qpAccessFlagsReg
  assign cntrl_qpAccessFlagsReg_D_IN = cntrl_reqQ_D_OUT[101:94] ;
  assign cntrl_qpAccessFlagsReg_EN =
	     WILL_FIRE_RL_cntrl_onCreate &&
	     cntrl_reqQ_D_OUT[300:299] == 2'd2 ;

  // register cntrl_qpDestroyReg
  assign cntrl_qpDestroyReg_D_IN = cntrl_qpDestroyReg ;
  assign cntrl_qpDestroyReg_EN = 1'b1 ;

  // register cntrl_setStateErrReg
  assign cntrl_setStateErrReg_D_IN = 1'd0 ;
  assign cntrl_setStateErrReg_EN = 1'b1 ;

  // register cntrl_sqSigAllReg
  assign cntrl_sqSigAllReg_D_IN = cntrl_reqQ_D_OUT[0] ;
  assign cntrl_sqSigAllReg_EN = CAN_FIRE_RL_cntrl_onReset ;

  // register cntrl_sqTypeReg
  assign cntrl_sqTypeReg_D_IN =
	     (cntrl_reqQ_D_OUT[4:1] == 4'd10) ? 4'd9 : cntrl_reqQ_D_OUT[4:1] ;
  assign cntrl_sqTypeReg_EN = CAN_FIRE_RL_cntrl_onReset ;

  // register cntrl_sqpnReg
  assign cntrl_sqpnReg_D_IN = cntrl_reqQ_D_OUT[266:243] ;
  assign cntrl_sqpnReg_EN = CAN_FIRE_RL_cntrl_onReset ;

  // register cntrl_stateReg
  assign cntrl_stateReg_D_IN =
	     cntrl_setStateErrReg_port1__read ?
	       4'd6 :
	       (cntrl_nextStateReg_port1__read[4] ?
		  cntrl_nextStateReg_port1__read[3:0] :
		  cntrl_stateReg) ;
  assign cntrl_stateReg_EN = 1'd1 ;

  // register dmaReadCntrl4SQ_addrChunkSrv_busyReg
  always@(WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_genResp or
	  MUX_dmaReadCntrl4SQ_addrChunkSrv_busyReg_write_1__VAL_1 or
	  WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_resetAndClear or
	  WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_genResp:
	  dmaReadCntrl4SQ_addrChunkSrv_busyReg_D_IN =
	      MUX_dmaReadCntrl4SQ_addrChunkSrv_busyReg_write_1__VAL_1;
      WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_resetAndClear:
	  dmaReadCntrl4SQ_addrChunkSrv_busyReg_D_IN = 1'd0;
      WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq:
	  dmaReadCntrl4SQ_addrChunkSrv_busyReg_D_IN = 1'd1;
      default: dmaReadCntrl4SQ_addrChunkSrv_busyReg_D_IN =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  assign dmaReadCntrl4SQ_addrChunkSrv_busyReg_EN =
	     WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_genResp ||
	     WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_resetAndClear ||
	     WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq ;

  // register dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg
  assign dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg_D_IN =
	     WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq ?
	       dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[98:35] :
	       MUX_dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg_write_1__VAL_2 ;
  assign dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg_EN =
	     WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq ||
	     WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_genResp ;

  // register dmaReadCntrl4SQ_addrChunkSrv_fullPktLenReg
  always@(dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT)
  begin
    case (dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[2:0])
      3'd1: dmaReadCntrl4SQ_addrChunkSrv_fullPktLenReg_D_IN = 13'd256;
      3'd2: dmaReadCntrl4SQ_addrChunkSrv_fullPktLenReg_D_IN = 13'd512;
      3'd3: dmaReadCntrl4SQ_addrChunkSrv_fullPktLenReg_D_IN = 13'd1024;
      3'd4: dmaReadCntrl4SQ_addrChunkSrv_fullPktLenReg_D_IN = 13'd2048;
      default: dmaReadCntrl4SQ_addrChunkSrv_fullPktLenReg_D_IN = 13'd4096;
    endcase
  end
  assign dmaReadCntrl4SQ_addrChunkSrv_fullPktLenReg_EN =
	     CAN_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq ;

  // register dmaReadCntrl4SQ_addrChunkSrv_isFirstReg
  assign dmaReadCntrl4SQ_addrChunkSrv_isFirstReg_D_IN =
	     !MUX_dmaReadCntrl4SQ_addrChunkSrv_isFirstReg_write_1__SEL_1 ;
  assign dmaReadCntrl4SQ_addrChunkSrv_isFirstReg_EN =
	     WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_genResp ||
	     WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_resetAndClear ||
	     WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq ;

  // register dmaReadCntrl4SQ_addrChunkSrv_isZeroResidueReg
  assign dmaReadCntrl4SQ_addrChunkSrv_isZeroResidueReg_D_IN =
	     !pmtuResidue__h9230[11] && pmtuResidue__h9230[10:9] == 2'd0 &&
	     !pmtuResidue__h9230[8] &&
	     pmtuResidue__h9230[7:6] == 2'd0 &&
	     !pmtuResidue__h9230[5] &&
	     pmtuResidue__h9230[4:3] == 2'd0 &&
	     !pmtuResidue__h9230[2] &&
	     pmtuResidue__h9230[1:0] == 2'd0 ;
  assign dmaReadCntrl4SQ_addrChunkSrv_isZeroResidueReg_EN =
	     CAN_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq ;

  // register dmaReadCntrl4SQ_addrChunkSrv_pktNumReg
  assign dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_D_IN =
	     WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq ?
	       MUX_dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_write_1__VAL_1 :
	       MUX_dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_write_1__VAL_2 ;
  assign dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_EN =
	     WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq ||
	     WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_genResp ;

  // register dmaReadCntrl4SQ_addrChunkSrv_pmtuReg
  assign dmaReadCntrl4SQ_addrChunkSrv_pmtuReg_D_IN =
	     dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[2:0] ;
  assign dmaReadCntrl4SQ_addrChunkSrv_pmtuReg_EN =
	     CAN_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq ;

  // register dmaReadCntrl4SQ_addrChunkSrv_residueReg
  assign dmaReadCntrl4SQ_addrChunkSrv_residueReg_D_IN = pmtuResidue__h9230 ;
  assign dmaReadCntrl4SQ_addrChunkSrv_residueReg_EN =
	     CAN_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq ;

  // register dmaReadCntrl4SQ_cancelReg
  assign dmaReadCntrl4SQ_cancelReg_D_IN =
	     dmaReadCntrl4SQ_cancelReg_port2__read ;
  assign dmaReadCntrl4SQ_cancelReg_EN = 1'b1 ;

  // register dmaReadCntrl4SQ_gracefulStopReg
  assign dmaReadCntrl4SQ_gracefulStopReg_D_IN =
	     dmaReadCntrl4SQ_gracefulStopReg_port2__read ;
  assign dmaReadCntrl4SQ_gracefulStopReg_EN = 1'b1 ;

  // register payloadGenerator4SQ_isNormalStateReg
  assign payloadGenerator4SQ_isNormalStateReg_D_IN =
	     !WILL_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding ||
	     !dmaReadCntrl4SQ_respQ_D_OUT[292] ;
  assign payloadGenerator4SQ_isNormalStateReg_EN =
	     WILL_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding ||
	     WILL_FIRE_RL_payloadGenerator4SQ_resetAndClear ;

  // register payloadGenerator4SQ_payloadBufQ_rCache
  assign payloadGenerator4SQ_payloadBufQ_rCache_D_IN =
	     { 1'd1,
	       payloadGenerator4SQ_payloadBufQ_rWrPtr,
	       x__read_data__h12578,
	       x__read_byteEn__h12579,
	       CAN_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding &&
	       payloadGenerator4SQ_payloadBufQ_wDataIn_wget[1],
	       CAN_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding &&
	       payloadGenerator4SQ_payloadBufQ_wDataIn_wget[0] } ;
  assign payloadGenerator4SQ_payloadBufQ_rCache_EN =
	     cntrl_stateReg != 4'd0 &&
	     CAN_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding ;

  // register payloadGenerator4SQ_payloadBufQ_rRdPtr
  assign payloadGenerator4SQ_payloadBufQ_rRdPtr_D_IN =
	     (cntrl_stateReg == 4'd0) ? 10'd0 : x__h12913 ;
  assign payloadGenerator4SQ_payloadBufQ_rRdPtr_EN =
	     cntrl_stateReg == 4'd0 ||
	     CAN_FIRE_RL_payloadGenerator4SQ_bramQ2PipeOut_mkConnectionGetPut ;

  // register payloadGenerator4SQ_payloadBufQ_rWrPtr
  assign payloadGenerator4SQ_payloadBufQ_rWrPtr_D_IN =
	     (cntrl_stateReg == 4'd0) ? 10'd0 : x__h12662 ;
  assign payloadGenerator4SQ_payloadBufQ_rWrPtr_EN =
	     cntrl_stateReg == 4'd0 ||
	     CAN_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding ;

  // register rqDmaReadCancelReg
  assign rqDmaReadCancelReg_D_IN = 1'd0 ;
  assign rqDmaReadCancelReg_EN = cntrl_stateReg == 4'd0 ;

  // register rqDmaWriteCancelReg
  assign rqDmaWriteCancelReg_D_IN = 1'd0 ;
  assign rqDmaWriteCancelReg_EN = cntrl_stateReg == 4'd0 ;

  // register sqDmaReadCancelReg
  assign sqDmaReadCancelReg_D_IN = !WILL_FIRE_RL_resetAndClear ;
  assign sqDmaReadCancelReg_EN =
	     WILL_FIRE_RL_resetAndClear || WILL_FIRE_RL_cancelDmaReadSQ ;

  // register sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg_D_IN =
	     MUX_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg_write_1__SEL_1 ?
	       MUX_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg_write_1__VAL_1 :
	       sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port1__read[7:0] ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg_EN =
	     WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrAndDecr &&
	     (sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port1__read &&
	      !sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port1__read ||
	      !sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port1__read &&
	      sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port1__read) ||
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port1__read[8] ;

  // register sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_D_IN =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_port2__read ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_EN = 1'b1 ;

  // register sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_D_IN =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_port2__read ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_EN = 1'b1 ;

  // register sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_D_IN =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_port2__read ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_EN = 1'b1 ;

  // register sq_pendingWorkReqBuf_clearReg
  assign sq_pendingWorkReqBuf_clearReg_D_IN =
	     sq_pendingWorkReqBuf_clearReg_port2__read ;
  assign sq_pendingWorkReqBuf_clearReg_EN = 1'b1 ;

  // register sq_pendingWorkReqBuf_dataVec_0
  assign sq_pendingWorkReqBuf_dataVec_0_D_IN =
	     sq_pendingWorkReqBuf_pushReg_port1__read[678:0] ;
  assign sq_pendingWorkReqBuf_dataVec_0_EN =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize &&
	     sq_pendingWorkReqBuf_enqPtrReg == 2'd0 &&
	     sq_pendingWorkReqBuf_pushReg_port1__read[679] ;

  // register sq_pendingWorkReqBuf_dataVec_1
  assign sq_pendingWorkReqBuf_dataVec_1_D_IN =
	     sq_pendingWorkReqBuf_pushReg_port1__read[678:0] ;
  assign sq_pendingWorkReqBuf_dataVec_1_EN =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize &&
	     sq_pendingWorkReqBuf_enqPtrReg == 2'd1 &&
	     sq_pendingWorkReqBuf_pushReg_port1__read[679] ;

  // register sq_pendingWorkReqBuf_dataVec_2
  assign sq_pendingWorkReqBuf_dataVec_2_D_IN =
	     sq_pendingWorkReqBuf_pushReg_port1__read[678:0] ;
  assign sq_pendingWorkReqBuf_dataVec_2_EN =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize &&
	     sq_pendingWorkReqBuf_enqPtrReg == 2'd2 &&
	     sq_pendingWorkReqBuf_pushReg_port1__read[679] ;

  // register sq_pendingWorkReqBuf_dataVec_3
  assign sq_pendingWorkReqBuf_dataVec_3_D_IN =
	     sq_pendingWorkReqBuf_pushReg_port1__read[678:0] ;
  assign sq_pendingWorkReqBuf_dataVec_3_EN =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize &&
	     sq_pendingWorkReqBuf_enqPtrReg == 2'd3 &&
	     sq_pendingWorkReqBuf_pushReg_port1__read[679] ;

  // register sq_pendingWorkReqBuf_deqPtrReg
  assign sq_pendingWorkReqBuf_deqPtrReg_D_IN =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize ?
	       MUX_sq_pendingWorkReqBuf_deqPtrReg_write_1__VAL_1 :
	       2'd0 ;
  assign sq_pendingWorkReqBuf_deqPtrReg_EN =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;

  // register sq_pendingWorkReqBuf_emptyReg
  assign sq_pendingWorkReqBuf_emptyReg_D_IN =
	     !WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize ||
	     MUX_sq_pendingWorkReqBuf_emptyReg_write_1__VAL_1 ;
  assign sq_pendingWorkReqBuf_emptyReg_EN =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;

  // register sq_pendingWorkReqBuf_enqPtrReg
  assign sq_pendingWorkReqBuf_enqPtrReg_D_IN =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize ?
	       MUX_sq_pendingWorkReqBuf_enqPtrReg_write_1__VAL_1 :
	       2'd0 ;
  assign sq_pendingWorkReqBuf_enqPtrReg_EN =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;

  // register sq_pendingWorkReqBuf_fullReg
  assign sq_pendingWorkReqBuf_fullReg_D_IN =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize &&
	     MUX_sq_pendingWorkReqBuf_fullReg_write_1__VAL_1 ;
  assign sq_pendingWorkReqBuf_fullReg_EN =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;

  // register sq_pendingWorkReqBuf_headReg
  assign sq_pendingWorkReqBuf_headReg_D_IN =
	     MUX_sq_pendingWorkReqBuf_headReg_write_1__SEL_1 ?
	       680'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       MUX_sq_pendingWorkReqBuf_headReg_write_1__VAL_2 ;
  assign sq_pendingWorkReqBuf_headReg_EN =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_scanNext ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode ||
	     WILL_FIRE_RL_sq_retryHandler_modifyPartialRetryWR ;

  // register sq_pendingWorkReqBuf_popReg
  assign sq_pendingWorkReqBuf_popReg_D_IN =
	     sq_pendingWorkReqBuf_popReg_port2__read ;
  assign sq_pendingWorkReqBuf_popReg_EN = 1'b1 ;

  // register sq_pendingWorkReqBuf_preScanRestartReg
  assign sq_pendingWorkReqBuf_preScanRestartReg_D_IN =
	     sq_pendingWorkReqBuf_preScanRestartReg_port2__read ;
  assign sq_pendingWorkReqBuf_preScanRestartReg_EN = 1'b1 ;

  // register sq_pendingWorkReqBuf_preScanStartReg
  assign sq_pendingWorkReqBuf_preScanStartReg_D_IN =
	     sq_pendingWorkReqBuf_preScanStartReg_port2__read ;
  assign sq_pendingWorkReqBuf_preScanStartReg_EN = 1'b1 ;

  // register sq_pendingWorkReqBuf_pushReg
  assign sq_pendingWorkReqBuf_pushReg_D_IN =
	     sq_pendingWorkReqBuf_pushReg_port2__read ;
  assign sq_pendingWorkReqBuf_pushReg_EN = 1'b1 ;

  // register sq_pendingWorkReqBuf_scanAlmostDoneReg
  assign sq_pendingWorkReqBuf_scanAlmostDoneReg_D_IN =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode ?
	       MUX_sq_pendingWorkReqBuf_scanAlmostDoneReg_write_1__VAL_1 :
	       MUX_sq_pendingWorkReqBuf_scanAlmostDoneReg_write_1__VAL_2 ;
  assign sq_pendingWorkReqBuf_scanAlmostDoneReg_EN =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_scanNext ;

  // register sq_pendingWorkReqBuf_scanDoneReg
  assign sq_pendingWorkReqBuf_scanDoneReg_D_IN =
	     sq_pendingWorkReqBuf_scanDoneReg_port2__read ;
  assign sq_pendingWorkReqBuf_scanDoneReg_EN = 1'b1 ;

  // register sq_pendingWorkReqBuf_scanPtrReg
  assign sq_pendingWorkReqBuf_scanPtrReg_D_IN =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode ?
	       sq_pendingWorkReqBuf_deqPtrReg :
	       MUX_sq_pendingWorkReqBuf_scanPtrReg_write_1__VAL_2 ;
  assign sq_pendingWorkReqBuf_scanPtrReg_EN =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_scanNext ;

  // register sq_pendingWorkReqBuf_scanStartReg
  assign sq_pendingWorkReqBuf_scanStartReg_D_IN =
	     sq_pendingWorkReqBuf_scanStartReg_port2__read ;
  assign sq_pendingWorkReqBuf_scanStartReg_EN = 1'b1 ;

  // register sq_pendingWorkReqBuf_scanStateReg
  always@(MUX_sq_pendingWorkReqBuf_scanStateReg_write_1__SEL_1 or
	  MUX_sq_pendingWorkReqBuf_scanStateReg_write_1__SEL_2 or
	  MUX_sq_pendingWorkReqBuf_scanStateReg_write_1__SEL_3 or
	  MUX_sq_pendingWorkReqBuf_scanStateReg_write_1__VAL_3 or
	  WILL_FIRE_RL_sq_pendingWorkReqBuf_clearAll)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_sq_pendingWorkReqBuf_scanStateReg_write_1__SEL_1:
	  sq_pendingWorkReqBuf_scanStateReg_D_IN = 2'd1;
      MUX_sq_pendingWorkReqBuf_scanStateReg_write_1__SEL_2:
	  sq_pendingWorkReqBuf_scanStateReg_D_IN = 2'd2;
      MUX_sq_pendingWorkReqBuf_scanStateReg_write_1__SEL_3:
	  sq_pendingWorkReqBuf_scanStateReg_D_IN =
	      MUX_sq_pendingWorkReqBuf_scanStateReg_write_1__VAL_3;
      WILL_FIRE_RL_sq_pendingWorkReqBuf_clearAll:
	  sq_pendingWorkReqBuf_scanStateReg_D_IN = 2'd0;
      default: sq_pendingWorkReqBuf_scanStateReg_D_IN =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign sq_pendingWorkReqBuf_scanStateReg_EN =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode &&
	     sq_pendingWorkReqBuf_preScanStartReg_port1__read ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode &&
	     sq_pendingWorkReqBuf_scanStartReg_port1__read ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange &&
	     (sq_pendingWorkReqBuf_scanStopReg_port1__read ||
	      sq_pendingWorkReqBuf_preScanRestartReg_port1__read ||
	      sq_pendingWorkReqBuf_scanDoneReg_port1__read) ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;

  // register sq_pendingWorkReqBuf_scanStopReg
  assign sq_pendingWorkReqBuf_scanStopReg_D_IN =
	     sq_pendingWorkReqBuf_scanStopReg_port2__read ;
  assign sq_pendingWorkReqBuf_scanStopReg_EN = 1'b1 ;

  // register sq_reqGenSQ_curPsnReg
  assign sq_reqGenSQ_curPsnReg_D_IN = curPSN__h61636 + 24'd1 ;
  assign sq_reqGenSQ_curPsnReg_EN = CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;

  // register sq_reqGenSQ_isFirstOrOnlyReqPktReg
  assign sq_reqGenSQ_isFirstOrOnlyReqPktReg_D_IN =
	     !WILL_FIRE_RL_sq_reqGenSQ_countReqPkt ||
	     MUX_sq_reqGenSQ_isFirstOrOnlyReqPktReg_write_1__VAL_1 ;
  assign sq_reqGenSQ_isFirstOrOnlyReqPktReg_EN =
	     WILL_FIRE_RL_sq_reqGenSQ_countReqPkt ||
	     WILL_FIRE_RL_sq_reqGenSQ_resetAndClear ;

  // register sq_reqGenSQ_isNormalStateReg
  assign sq_reqGenSQ_isNormalStateReg_D_IN =
	     !MUX_sq_reqGenSQ_isNormalStateReg_write_1__SEL_1 ;
  assign sq_reqGenSQ_isNormalStateReg_EN =
	     WILL_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp &&
	     (sq_reqGenSQ_reqHeaderGenQ_D_OUT[26] &&
	      sq_reqGenSQ_reqHeaderGenQ_D_OUT[24] ||
	      !sq_reqGenSQ_reqHeaderGenQ_D_OUT[620]) ||
	     WILL_FIRE_RL_sq_reqGenSQ_resetAndClear ;

  // register sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg
  assign sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg_D_IN =
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_outputHeader &&
	     MUX_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg_write_1__VAL_1 ;
  assign sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg_EN =
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_outputHeader ||
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_resetAndClear ;

  // register sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg
  assign sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg_D_IN =
	     { leftShiftHeaderData__h47318,
	       leftShiftHeaderByteEn__h47319,
	       IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1770 } ;
  assign sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg_EN =
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_outputHeader &&
	     IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1734 &&
	     IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1737 !=
	     2'd1 ;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg_D_IN =
	     MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg_write_1__SEL_1 ?
	       MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg_write_1__VAL_1 :
	       MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg_write_1__VAL_2 ;
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg_EN =
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader &&
	     !sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT[0] ||
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData ;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerHasPayloadReg
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerHasPayloadReg_D_IN =
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[1] ;
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerHasPayloadReg_EN =
	     CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData ;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidBitNumReg
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidBitNumReg_D_IN =
	     { headerLastFragInvalidByteNum__h47982, 3'd0 } ;
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidBitNumReg_EN =
	     CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData ;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidByteNumReg
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidByteNumReg_D_IN =
	     headerLastFragInvalidByteNum__h47982 ;
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidByteNumReg_EN =
	     CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData ;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidBitNumReg
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidBitNumReg_D_IN =
	     headerLastFragValidBitNum__h47980 ;
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidBitNumReg_EN =
	     CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData ;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidByteNumReg
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidByteNumReg_D_IN =
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[7:2] ;
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidByteNumReg_EN =
	     CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData ;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_isFirstReg
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_isFirstReg_D_IN =
	     !MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg_write_1__SEL_1 &&
	     !WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputData ;
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_isFirstReg_EN =
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader &&
	     !sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT[0] ||
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputData ||
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData ;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg_D_IN =
	     MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg_write_1__SEL_1 ?
	       MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg_write_1__VAL_1 :
	       payloadGenerator4SQ_bramQ2PipeOut_postBramQ_D_OUT ;
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg_EN =
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader &&
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT[0] ||
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputData ;

  // register sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg
  always@(MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg_write_1__SEL_1 or
	  MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__VAL_1 or
	  MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__SEL_2 or
	  MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__VAL_2 or
	  WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData or
	  MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__VAL_3 or
	  MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg_write_1__SEL_1:
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_D_IN =
	      MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__VAL_1;
      MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__SEL_2:
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_D_IN =
	      MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__VAL_2;
      WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData:
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_D_IN =
	      MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__VAL_3;
      MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_write_1__SEL_4:
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_D_IN =
	      2'd0;
      default: sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_D_IN =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_EN =
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader &&
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT[0] ||
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputData &&
	     payloadGenerator4SQ_bramQ2PipeOut_postBramQ_D_OUT[0] ||
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData ||
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_extraLastFrag ||
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_resetAndClear ;

  // register sq_reqGenSQ_remainingPktNumReg
  assign sq_reqGenSQ_remainingPktNumReg_D_IN =
	     sq_reqGenSQ_isFirstOrOnlyReqPktReg ?
	       _theResult___snd__h61670 :
	       ((!sq_reqGenSQ_reqCountQ_D_OUT[5] &&
		 sq_reqGenSQ_remainingPktNumReg != 25'd0) ?
		  remainingPktNum___1__h61739 :
		  sq_reqGenSQ_remainingPktNumReg) ;
  assign sq_reqGenSQ_remainingPktNumReg_EN =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;

  // register sq_respHandleSQ_errOccurredReg
  assign sq_respHandleSQ_errOccurredReg_D_IN =
	     !WILL_FIRE_RL_sq_respHandleSQ_resetAndClear ;
  assign sq_respHandleSQ_errOccurredReg_EN =
	     WILL_FIRE_RL_sq_respHandleSQ_resetAndClear ||
	     WILL_FIRE_RL_sq_respHandleSQ_canonicalize ;

  // register sq_respHandleSQ_hasInternalErrReg
  assign sq_respHandleSQ_hasInternalErrReg_D_IN =
	     sq_respHandleSQ_hasInternalErrReg_port2__read ;
  assign sq_respHandleSQ_hasInternalErrReg_EN = 1'b1 ;

  // register sq_respHandleSQ_hasTimeOutErrReg
  assign sq_respHandleSQ_hasTimeOutErrReg_D_IN =
	     sq_respHandleSQ_hasTimeOutErrReg_port1__read ;
  assign sq_respHandleSQ_hasTimeOutErrReg_EN = 1'b1 ;

  // register sq_respHandleSQ_nextReadRespWriteAddrReg
  assign sq_respHandleSQ_nextReadRespWriteAddrReg_D_IN = 64'h0 ;
  assign sq_respHandleSQ_nextReadRespWriteAddrReg_EN = 1'b0 ;

  // register sq_respHandleSQ_preRdmaOpCodeReg
  assign sq_respHandleSQ_preRdmaOpCodeReg_D_IN =
	     MUX_sq_respHandleSQ_preRdmaOpCodeReg_write_1__SEL_1 ?
	       sq_respHandleSQ_pendingRespQ_D_OUT[141:137] :
	       5'd17 ;
  assign sq_respHandleSQ_preRdmaOpCodeReg_EN =
	     WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	     sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd3 &&
	     !sq_respHandleSQ_errOccurredReg &&
	     cntrl_stateReg != 4'd6 ||
	     WILL_FIRE_RL_sq_respHandleSQ_resetAndClear ;

  // register sq_respHandleSQ_preStageDeqPendingWorkReqReg
  assign sq_respHandleSQ_preStageDeqPendingWorkReqReg_D_IN =
	     sq_respHandleSQ_preStagePktMetaDataReg[1] &&
	     IF_sq_respHandleSQ_preStageRespAndWorkReqRelat_ETC___d4271 ;
  assign sq_respHandleSQ_preStageDeqPendingWorkReqReg_EN =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;

  // register sq_respHandleSQ_preStageDeqPktMetaDataReg
  assign sq_respHandleSQ_preStageDeqPktMetaDataReg_D_IN =
	     !sq_respHandleSQ_preStagePktMetaDataReg[1] ||
	     sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	     4'b0100 ;
  assign sq_respHandleSQ_preStageDeqPktMetaDataReg_EN =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;

  // register sq_respHandleSQ_preStagePktMetaDataReg
  assign sq_respHandleSQ_preStagePktMetaDataReg_D_IN =
	     respPktPipe_metaDataQ_D_OUT ;
  assign sq_respHandleSQ_preStagePktMetaDataReg_EN =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;

  // register sq_respHandleSQ_preStageReqPktInfoReg
  assign sq_respHandleSQ_preStageReqPktInfoReg_D_IN =
	     { respPktPipe_metaDataQ_D_OUT[626:618],
	       1'd0,
	       respPktPipe_metaDataQ_D_OUT[616:615],
	       4'd0,
	       respPktPipe_metaDataQ_D_OUT[610:595],
	       8'd0,
	       respPktPipe_metaDataQ_D_OUT[586:562],
	       7'd0,
	       respPktPipe_metaDataQ_D_OUT[554:531],
	       1'd0,
	       respPktPipe_metaDataQ_D_OUT[529:499],
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd0 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd6 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd13 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd4 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd5 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd23 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd10 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd11 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd12 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd19 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd20 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd16 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd17 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd18,
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd2 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd3 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd22 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd8 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd9 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd15 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd4 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd5 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd23 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd10 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd11 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd12 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd19 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd20 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd16 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd17 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd18,
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd13 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd14 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd15 ||
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd16,
	       respPktPipe_metaDataQ_D_OUT[623:619] == 5'd18,
	       3'd0 } ;
  assign sq_respHandleSQ_preStageReqPktInfoReg_EN =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;

  // register sq_respHandleSQ_preStageRespAndWorkReqRelationReg
  assign sq_respHandleSQ_preStageRespAndWorkReqRelationReg_D_IN =
	     { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1521 ==
	       4'd4 ||
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1521 ==
	       4'd5 ||
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1521 ==
	       4'd6,
	       respPktPipe_metaDataQ_D_OUT[554:531] == value__h99966,
	       IF_IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_ETC___d4106,
	       respPktPipe_metaDataQ_D_OUT[554:531] == value__h99939,
	       IF_IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_ETC___d4116 } ;
  assign sq_respHandleSQ_preStageRespAndWorkReqRelationReg_EN =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;

  // register sq_respHandleSQ_preStageRespTypeReg
  always@(respPktPipe_metaDataQ_D_OUT or
	  CASE_respPktPipe_metaDataQD_OUT_BITS_529_TO_5_ETC__q30)
  begin
    case (respPktPipe_metaDataQ_D_OUT[623:619])
      5'd13, 5'd14, 5'd15, 5'd16, 5'd18:
	  sq_respHandleSQ_preStageRespTypeReg_D_IN = 2'd0;
      5'd17:
	  sq_respHandleSQ_preStageRespTypeReg_D_IN =
	      CASE_respPktPipe_metaDataQD_OUT_BITS_529_TO_5_ETC__q30;
      default: sq_respHandleSQ_preStageRespTypeReg_D_IN = 2'd3;
    endcase
  end
  assign sq_respHandleSQ_preStageRespTypeReg_EN =
	     CAN_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ;

  // register sq_respHandleSQ_preStageStateReg
  always@(MUX_sq_respHandleSQ_preStageStateReg_write_1__SEL_1 or
	  WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo or
	  WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_sq_respHandleSQ_preStageStateReg_write_1__SEL_1:
	  sq_respHandleSQ_preStageStateReg_D_IN = 2'd0;
      WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo:
	  sq_respHandleSQ_preStageStateReg_D_IN = 2'd1;
      WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo:
	  sq_respHandleSQ_preStageStateReg_D_IN = 2'd2;
      default: sq_respHandleSQ_preStageStateReg_D_IN =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign sq_respHandleSQ_preStageStateReg_EN =
	     WILL_FIRE_RL_sq_respHandleSQ_resetAndClear ||
	     WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload ||
	     WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ||
	     WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo ||
	     WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;

  // register sq_respHandleSQ_preStageWorkCompReqTypeReg
  assign sq_respHandleSQ_preStageWorkCompReqTypeReg_D_IN =
	     sq_respHandleSQ_preStagePktMetaDataReg[1] ?
	       CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q31 :
	       2'd0 ;
  assign sq_respHandleSQ_preStageWorkCompReqTypeReg_EN =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;

  // register sq_respHandleSQ_preStageWorkReqAckTypeReg
  assign sq_respHandleSQ_preStageWorkReqAckTypeReg_D_IN =
	     sq_respHandleSQ_preStagePktMetaDataReg[1] ?
	       CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q32 :
	       4'd10 ;
  assign sq_respHandleSQ_preStageWorkReqAckTypeReg_EN =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;

  // register sq_respHandleSQ_recvErrRespReg
  assign sq_respHandleSQ_recvErrRespReg_D_IN =
	     !WILL_FIRE_RL_sq_respHandleSQ_resetAndClear ;
  assign sq_respHandleSQ_recvErrRespReg_EN =
	     WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	     (sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd2 ||
	      sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd5 ||
	      sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd10) ||
	     WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	     sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd3 &&
	     IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4844 ||
	     WILL_FIRE_RL_sq_respHandleSQ_resetAndClear ;

  // register sq_respHandleSQ_recvRetryRespReg
  assign sq_respHandleSQ_recvRetryRespReg_D_IN =
	     !WILL_FIRE_RL_sq_respHandleSQ_resetAndClear &&
	     !MUX_sq_respHandleSQ_recvRetryRespReg_write_1__SEL_2 ;
  assign sq_respHandleSQ_recvRetryRespReg_EN =
	     WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	     sq_retryHandler_retryHandleStateReg == 3'd7 ||
	     WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	     (sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd1 ||
	      sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd4 ||
	      sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd7) ||
	     WILL_FIRE_RL_sq_respHandleSQ_resetAndClear ;

  // register sq_respHandleSQ_remainingReadRespLenReg
  assign sq_respHandleSQ_remainingReadRespLenReg_D_IN = 32'h0 ;
  assign sq_respHandleSQ_remainingReadRespLenReg_EN = 1'b0 ;

  // register sq_respHandleSQ_retryFlushReg
  assign sq_respHandleSQ_retryFlushReg_D_IN =
	     !WILL_FIRE_RL_sq_respHandleSQ_resetAndClear &&
	     !MUX_sq_respHandleSQ_recvRetryRespReg_write_1__SEL_2 ;
  assign sq_respHandleSQ_retryFlushReg_EN =
	     WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	     sq_retryHandler_retryHandleStateReg == 3'd7 ||
	     WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	     (sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd1 ||
	      sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd4 ||
	      sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd7) ||
	     WILL_FIRE_RL_sq_respHandleSQ_resetAndClear ;

  // register sq_respHandleSQ_retryResetReqReg
  assign sq_respHandleSQ_retryResetReqReg_D_IN =
	     sq_respHandleSQ_preStagePktMetaDataReg[1] &&
	     IF_sq_respHandleSQ_preStageRespAndWorkReqRelat_ETC___d4271 ;
  assign sq_respHandleSQ_retryResetReqReg_EN =
	     CAN_FIRE_RL_sq_respHandleSQ_preProcRespInfo ;

  // register sq_retryHandler_disableRetryCntReg
  assign sq_retryHandler_disableRetryCntReg_D_IN =
	     MUX_sq_retryHandler_disableRetryCntReg_write_1__SEL_1 ?
	       cntrl_maxRetryCntReg == 3'd7 :
	       cntrl_maxRetryCntReg == 3'd7 ;
  assign sq_retryHandler_disableRetryCntReg_EN =
	     WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	     !sq_retryHandler_updateRetryCntQ_D_OUT[3] ||
	     WILL_FIRE_RL_sq_retryHandler_initRetryCntAndTimeOutTimer ;

  // register sq_retryHandler_disableTimeOutReg
  assign sq_retryHandler_disableTimeOutReg_D_IN =
	     MUX_sq_retryHandler_disableTimeOutReg_write_1__SEL_1 ?
	       cntrl_maxTimeOutReg == 5'd0 :
	       cntrl_maxTimeOutReg == 5'd0 ;
  assign sq_retryHandler_disableTimeOutReg_EN =
	     WILL_FIRE_RL_sq_retryHandler_checkTimeOut &&
	     sq_retryHandler_resetTimeOutQ_notEmpty__176_OR_ETC___d1209 ||
	     WILL_FIRE_RL_sq_retryHandler_initRetryCntAndTimeOutTimer ;

  // register sq_retryHandler_isRnrWaitCntZeroReg
  assign sq_retryHandler_isRnrWaitCntZeroReg_D_IN =
	     MUX_sq_retryHandler_isRnrWaitCntZeroReg_write_1__SEL_1 &&
	     MUX_sq_retryHandler_isRnrWaitCntZeroReg_write_1__VAL_1 ;
  assign sq_retryHandler_isRnrWaitCntZeroReg_EN =
	     WILL_FIRE_RL_sq_retryHandler_rnrWait &&
	     !sq_retryHandler_isRnrWaitCntZeroReg ||
	     WILL_FIRE_RL_sq_retryHandler_rnrCheck ;

  // register sq_retryHandler_isTimeOutCntHighPartZeroReg
  assign sq_retryHandler_isTimeOutCntHighPartZeroReg_D_IN =
	     MUX_sq_retryHandler_isTimeOutCntHighPartZeroReg_write_1__SEL_1 &&
	     MUX_sq_retryHandler_isTimeOutCntHighPartZeroReg_write_1__VAL_1 ;
  assign sq_retryHandler_isTimeOutCntHighPartZeroReg_EN =
	     MUX_sq_retryHandler_isTimeOutCntHighPartZeroReg_write_1__SEL_1 ||
	     WILL_FIRE_RL_sq_retryHandler_initRetryCntAndTimeOutTimer ;

  // register sq_retryHandler_isTimeOutCntLowPartZeroReg
  assign sq_retryHandler_isTimeOutCntLowPartZeroReg_D_IN =
	     MUX_sq_retryHandler_isTimeOutCntHighPartZeroReg_write_1__SEL_1 &&
	     MUX_sq_retryHandler_isTimeOutCntLowPartZeroReg_write_1__VAL_1 ;
  assign sq_retryHandler_isTimeOutCntLowPartZeroReg_EN =
	     MUX_sq_retryHandler_isTimeOutCntHighPartZeroReg_write_1__SEL_1 ||
	     WILL_FIRE_RL_sq_retryHandler_initRetryCntAndTimeOutTimer ;

  // register sq_retryHandler_pauseRetryHandleReg
  assign sq_retryHandler_pauseRetryHandleReg_D_IN =
	     MUX_sq_retryHandler_pauseRetryHandleReg_write_1__SEL_1 ;
  assign sq_retryHandler_pauseRetryHandleReg_EN =
	     WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	     sq_retryHandler_updateRetryCntQ_D_OUT[3] ||
	     WILL_FIRE_RL_sq_retryHandler_initRetry ||
	     WILL_FIRE_RL_sq_retryHandler_resetAndClear ;

  // register sq_retryHandler_psnDiffReg
  assign sq_retryHandler_psnDiffReg_D_IN = x__h37628[23:0] ;
  assign sq_retryHandler_psnDiffReg_EN =
	     CAN_FIRE_RL_sq_retryHandler_checkPartialRetry ;

  // register sq_retryHandler_retryCntReg
  assign sq_retryHandler_retryCntReg_D_IN =
	     MUX_sq_retryHandler_retryCntReg_write_1__SEL_1 ?
	       MUX_sq_retryHandler_retryCntReg_write_1__VAL_1 :
	       cntrl_maxRetryCntReg ;
  assign sq_retryHandler_retryCntReg_EN =
	     WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	     IF_sq_retryHandler_updateRetryCntQ_first__309__ETC___d1340 ||
	     WILL_FIRE_RL_sq_retryHandler_initRetryCntAndTimeOutTimer ;

  // register sq_retryHandler_retryCntrlStateReg
  assign sq_retryHandler_retryCntrlStateReg_D_IN =
	     sq_retryHandler_retryCntrlStateReg_port2__read ;
  assign sq_retryHandler_retryCntrlStateReg_EN = 1'b1 ;

  // register sq_retryHandler_retryHandleStateReg
  always@(WILL_FIRE_RL_sq_retryHandler_startPreRetry or
	  MUX_sq_retryHandler_retryHandleStateReg_write_1__VAL_3 or
	  MUX_sq_retryHandler_retryHandleStateReg_write_1__SEL_2 or
	  WILL_FIRE_RL_sq_retryHandler_resetAndClear or
	  WILL_FIRE_RL_sq_retryHandler_initRetry or
	  WILL_FIRE_RL_sq_retryHandler_rnrCheck or
	  MUX_sq_retryHandler_retryHandleStateReg_write_1__SEL_1 or
	  WILL_FIRE_RL_sq_retryHandler_checkPartialRetry or
	  WILL_FIRE_RL_sq_retryHandler_modifyPartialRetryWR or
	  WILL_FIRE_RL_sq_retryHandler_startRetry)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_sq_retryHandler_startPreRetry:
	  sq_retryHandler_retryHandleStateReg_D_IN =
	      MUX_sq_retryHandler_retryHandleStateReg_write_1__VAL_3;
      MUX_sq_retryHandler_retryHandleStateReg_write_1__SEL_2 ||
      WILL_FIRE_RL_sq_retryHandler_resetAndClear:
	  sq_retryHandler_retryHandleStateReg_D_IN = 3'd0;
      WILL_FIRE_RL_sq_retryHandler_initRetry:
	  sq_retryHandler_retryHandleStateReg_D_IN = 3'd1;
      WILL_FIRE_RL_sq_retryHandler_rnrCheck:
	  sq_retryHandler_retryHandleStateReg_D_IN = 3'd3;
      MUX_sq_retryHandler_retryHandleStateReg_write_1__SEL_1:
	  sq_retryHandler_retryHandleStateReg_D_IN = 3'd4;
      WILL_FIRE_RL_sq_retryHandler_checkPartialRetry:
	  sq_retryHandler_retryHandleStateReg_D_IN = 3'd5;
      WILL_FIRE_RL_sq_retryHandler_modifyPartialRetryWR:
	  sq_retryHandler_retryHandleStateReg_D_IN = 3'd6;
      WILL_FIRE_RL_sq_retryHandler_startRetry:
	  sq_retryHandler_retryHandleStateReg_D_IN = 3'd7;
      default: sq_retryHandler_retryHandleStateReg_D_IN =
		   3'b010 /* unspecified value */ ;
    endcase
  end
  assign sq_retryHandler_retryHandleStateReg_EN =
	     WILL_FIRE_RL_sq_retryHandler_rnrWait &&
	     sq_retryHandler_isRnrWaitCntZeroReg ||
	     WILL_FIRE_RL_sq_retryHandler_waitRetryDone &&
	     sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	     WILL_FIRE_RL_sq_retryHandler_startPreRetry ||
	     WILL_FIRE_RL_sq_retryHandler_resetAndClear ||
	     WILL_FIRE_RL_sq_retryHandler_initRetry ||
	     WILL_FIRE_RL_sq_retryHandler_rnrCheck ||
	     WILL_FIRE_RL_sq_retryHandler_checkPartialRetry ||
	     WILL_FIRE_RL_sq_retryHandler_modifyPartialRetryWR ||
	     WILL_FIRE_RL_sq_retryHandler_startRetry ;

  // register sq_retryHandler_retryReasonReg
  assign sq_retryHandler_retryReasonReg_D_IN =
	     sq_retryHandler_retryActionQ_D_OUT[8:6] ;
  assign sq_retryHandler_retryReasonReg_EN =
	     WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	     sq_retryHandler_retryActionQ_D_OUT[97] ;

  // register sq_retryHandler_retryRnrTimerReg
  assign sq_retryHandler_retryRnrTimerReg_D_IN =
	     sq_retryHandler_retryActionQ_D_OUT[4:0] ;
  assign sq_retryHandler_retryRnrTimerReg_EN =
	     WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	     sq_retryHandler_retryActionQ_D_OUT[97] &&
	     sq_retryHandler_retryActionQ_D_OUT[8:6] == 3'd1 ;

  // register sq_retryHandler_retryStartPsnReg
  assign sq_retryHandler_retryStartPsnReg_D_IN =
	     sq_retryHandler_retryActionQ_D_OUT[32:9] ;
  assign sq_retryHandler_retryStartPsnReg_EN =
	     WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	     sq_retryHandler_retryActionQ_D_OUT[97] &&
	     sq_retryHandler_retryActionQ_D_OUT[8:6] != 3'd4 ;

  // register sq_retryHandler_retryWorkReqIdReg
  assign sq_retryHandler_retryWorkReqIdReg_D_IN =
	     sq_retryHandler_retryActionQ_D_OUT[96:33] ;
  assign sq_retryHandler_retryWorkReqIdReg_EN =
	     WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	     sq_retryHandler_retryActionQ_D_OUT[97] &&
	     sq_retryHandler_retryActionQ_D_OUT[8:6] != 3'd4 ;

  // register sq_retryHandler_rnrCntReg
  assign sq_retryHandler_rnrCntReg_D_IN =
	     MUX_sq_retryHandler_rnrCntReg_write_1__SEL_1 ?
	       MUX_sq_retryHandler_rnrCntReg_write_1__VAL_1 :
	       cntrl_maxRnrCntReg ;
  assign sq_retryHandler_rnrCntReg_EN =
	     MUX_sq_retryHandler_rnrCntReg_write_1__SEL_1 ||
	     WILL_FIRE_RL_sq_retryHandler_initRetryCntAndTimeOutTimer ;

  // register sq_retryHandler_rnrWaitCntReg
  assign sq_retryHandler_rnrWaitCntReg_D_IN =
	     MUX_sq_retryHandler_isRnrWaitCntZeroReg_write_1__SEL_1 ?
	       MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_1 :
	       MUX_sq_retryHandler_rnrWaitCntReg_write_1__VAL_2 ;
  assign sq_retryHandler_rnrWaitCntReg_EN =
	     WILL_FIRE_RL_sq_retryHandler_rnrWait &&
	     !sq_retryHandler_isRnrWaitCntZeroReg ||
	     WILL_FIRE_RL_sq_retryHandler_rnrCheck ;

  // register sq_retryHandler_timeOutCntReg
  assign sq_retryHandler_timeOutCntReg_D_IN =
	     MUX_sq_retryHandler_isTimeOutCntHighPartZeroReg_write_1__SEL_1 ?
	       MUX_sq_retryHandler_timeOutCntReg_write_1__VAL_1 :
	       x__h32835 ;
  assign sq_retryHandler_timeOutCntReg_EN =
	     MUX_sq_retryHandler_isTimeOutCntHighPartZeroReg_write_1__SEL_1 ||
	     WILL_FIRE_RL_sq_retryHandler_initRetryCntAndTimeOutTimer ;

  // register sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg
  assign sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg_D_IN =
	     sq_workCompGenSQ_genWorkCompQ_D_OUT[856:793] ;
  assign sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg_EN =
	     MUX_sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_write_1__SEL_2 ;

  // register sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg
  assign sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_D_IN =
	     !MUX_sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_write_1__SEL_1 &&
	     sq_workCompGenSQ_genWorkCompQ_D_OUT[254:253] == 2'd1 ;
  assign sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_EN =
	     WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ &&
	     sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg ||
	     WILL_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ &&
	     !sq_workCompGenSQ_genWorkCompQ_D_OUT[1] ;

  // register sq_workCompGenSQ_workCompGenStateReg
  always@(MUX_sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_write_1__SEL_2 or
	  WILL_FIRE_RL_sq_workCompGenSQ_resetAndClear or
	  WILL_FIRE_RL_sq_workCompGenSQ_start)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_write_1__SEL_2:
	  sq_workCompGenSQ_workCompGenStateReg_D_IN = 2'd2;
      WILL_FIRE_RL_sq_workCompGenSQ_resetAndClear:
	  sq_workCompGenSQ_workCompGenStateReg_D_IN = 2'd0;
      WILL_FIRE_RL_sq_workCompGenSQ_start:
	  sq_workCompGenSQ_workCompGenStateReg_D_IN = 2'd1;
      default: sq_workCompGenSQ_workCompGenStateReg_D_IN =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign sq_workCompGenSQ_workCompGenStateReg_EN =
	     WILL_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ &&
	     !sq_workCompGenSQ_genWorkCompQ_D_OUT[1] ||
	     WILL_FIRE_RL_sq_workCompGenSQ_resetAndClear ||
	     WILL_FIRE_RL_sq_workCompGenSQ_start ;

  // submodule cntrl_reqQ
  assign cntrl_reqQ_D_IN = srvPortQP_request_put ;
  assign cntrl_reqQ_ENQ = EN_srvPortQP_request_put ;
  assign cntrl_reqQ_DEQ =
	     WILL_FIRE_RL_cntrl_onERR || WILL_FIRE_RL_cntrl_onSQD ||
	     WILL_FIRE_RL_cntrl_onRTS ||
	     WILL_FIRE_RL_cntrl_onRTR ||
	     WILL_FIRE_RL_cntrl_onINIT ||
	     WILL_FIRE_RL_cntrl_onCreate ||
	     WILL_FIRE_RL_cntrl_onReset ;
  assign cntrl_reqQ_CLR = 1'b0 ;

  // submodule cntrl_respQ
  always@(WILL_FIRE_RL_cntrl_onReset or
	  MUX_cntrl_respQ_enq_1__VAL_1 or
	  WILL_FIRE_RL_cntrl_onCreate or
	  MUX_cntrl_respQ_enq_1__VAL_2 or
	  WILL_FIRE_RL_cntrl_onINIT or
	  MUX_cntrl_respQ_enq_1__VAL_3 or
	  WILL_FIRE_RL_cntrl_onRTR or
	  MUX_cntrl_respQ_enq_1__VAL_4 or
	  WILL_FIRE_RL_cntrl_onRTS or
	  MUX_cntrl_respQ_enq_1__VAL_5 or
	  WILL_FIRE_RL_cntrl_onSQD or
	  MUX_cntrl_respQ_enq_1__VAL_6 or
	  WILL_FIRE_RL_cntrl_onERR or MUX_cntrl_respQ_enq_1__VAL_7)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_cntrl_onReset:
	  cntrl_respQ_D_IN = MUX_cntrl_respQ_enq_1__VAL_1;
      WILL_FIRE_RL_cntrl_onCreate:
	  cntrl_respQ_D_IN = MUX_cntrl_respQ_enq_1__VAL_2;
      WILL_FIRE_RL_cntrl_onINIT:
	  cntrl_respQ_D_IN = MUX_cntrl_respQ_enq_1__VAL_3;
      WILL_FIRE_RL_cntrl_onRTR:
	  cntrl_respQ_D_IN = MUX_cntrl_respQ_enq_1__VAL_4;
      WILL_FIRE_RL_cntrl_onRTS:
	  cntrl_respQ_D_IN = MUX_cntrl_respQ_enq_1__VAL_5;
      WILL_FIRE_RL_cntrl_onSQD:
	  cntrl_respQ_D_IN = MUX_cntrl_respQ_enq_1__VAL_6;
      WILL_FIRE_RL_cntrl_onERR:
	  cntrl_respQ_D_IN = MUX_cntrl_respQ_enq_1__VAL_7;
      default: cntrl_respQ_D_IN =
		   274'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign cntrl_respQ_ENQ =
	     WILL_FIRE_RL_cntrl_onReset || WILL_FIRE_RL_cntrl_onCreate ||
	     WILL_FIRE_RL_cntrl_onINIT ||
	     WILL_FIRE_RL_cntrl_onRTR ||
	     WILL_FIRE_RL_cntrl_onRTS ||
	     WILL_FIRE_RL_cntrl_onSQD ||
	     WILL_FIRE_RL_cntrl_onERR ;
  assign cntrl_respQ_DEQ = EN_srvPortQP_response_get ;
  assign cntrl_respQ_CLR = 1'b0 ;

  // submodule cntrl_restoreQ
  assign cntrl_restoreQ_D_IN = 29'h0 ;
  assign cntrl_restoreQ_ENQ = 1'b0 ;
  assign cntrl_restoreQ_DEQ = CAN_FIRE_RL_cntrl_restore ;
  assign cntrl_restoreQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule dmaReadCntrl4SQ_addrChunkSrv_reqQ
  assign dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_IN =
	     { dmaReadCntrl4SQ_reqQ_D_OUT[99:4],
	       dmaReadCntrl4SQ_reqQ_D_OUT[2:0] } ;
  assign dmaReadCntrl4SQ_addrChunkSrv_reqQ_ENQ =
	     CAN_FIRE_RL_dmaReadCntrl4SQ_recvReq ;
  assign dmaReadCntrl4SQ_addrChunkSrv_reqQ_DEQ =
	     CAN_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq ;
  assign dmaReadCntrl4SQ_addrChunkSrv_reqQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule dmaReadCntrl4SQ_addrChunkSrv_respQ
  assign dmaReadCntrl4SQ_addrChunkSrv_respQ_D_IN =
	     { dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg,
	       addrChunkResp_chunkLen__h10586,
	       dmaReadCntrl4SQ_addrChunkSrv_isFirstReg,
	       dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_77_BITS_ETC___d366 &&
	       NOT_dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_77__ETC___d376 } ;
  assign dmaReadCntrl4SQ_addrChunkSrv_respQ_ENQ =
	     CAN_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_genResp ;
  assign dmaReadCntrl4SQ_addrChunkSrv_respQ_DEQ =
	     CAN_FIRE_RL_dmaReadCntrl4SQ_issueDmaReq ;
  assign dmaReadCntrl4SQ_addrChunkSrv_respQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule dmaReadCntrl4SQ_pendingDmaCntrlReqQ
  assign dmaReadCntrl4SQ_pendingDmaCntrlReqQ_D_IN =
	     dmaReadCntrl4SQ_reqQ_D_OUT ;
  assign dmaReadCntrl4SQ_pendingDmaCntrlReqQ_ENQ =
	     CAN_FIRE_RL_dmaReadCntrl4SQ_recvReq ;
  assign dmaReadCntrl4SQ_pendingDmaCntrlReqQ_DEQ =
	     WILL_FIRE_RL_dmaReadCntrl4SQ_issueDmaReq &&
	     dmaReadCntrl4SQ_addrChunkSrv_respQ_D_OUT[0] ;
  assign dmaReadCntrl4SQ_pendingDmaCntrlReqQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule dmaReadCntrl4SQ_pendingDmaReadReqQ
  assign dmaReadCntrl4SQ_pendingDmaReadReqQ_D_IN =
	     { dmaReadCntrl4SQ_pendingDmaCntrlReqQ_D_OUT[191:100],
	       dmaReadCntrl4SQ_addrChunkSrv_respQ_D_OUT[78:2],
	       dmaReadCntrl4SQ_pendingDmaCntrlReqQ_D_OUT[3],
	       dmaReadCntrl4SQ_addrChunkSrv_respQ_D_OUT[1:0] } ;
  assign dmaReadCntrl4SQ_pendingDmaReadReqQ_ENQ =
	     CAN_FIRE_RL_dmaReadCntrl4SQ_issueDmaReq ;
  assign dmaReadCntrl4SQ_pendingDmaReadReqQ_DEQ =
	     WILL_FIRE_RL_dmaReadCntrl4SQ_recvDmaResp &&
	     dmaReadProxy4SQ_respQ_D_OUT[0] ;
  assign dmaReadCntrl4SQ_pendingDmaReadReqQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule dmaReadCntrl4SQ_reqQ
  assign dmaReadCntrl4SQ_reqQ_D_IN =
	     { payloadGenerator4SQ_payloadGenReqQ_D_OUT[192:4],
	       payloadGenerator4SQ_payloadGenReqQ_D_OUT[2:0] } ;
  assign dmaReadCntrl4SQ_reqQ_ENQ =
	     CAN_FIRE_RL_payloadGenerator4SQ_recvPayloadGenReq ;
  assign dmaReadCntrl4SQ_reqQ_DEQ = CAN_FIRE_RL_dmaReadCntrl4SQ_recvReq ;
  assign dmaReadCntrl4SQ_reqQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule dmaReadCntrl4SQ_respQ
  assign dmaReadCntrl4SQ_respQ_D_IN =
	     { dmaReadProxy4SQ_respQ_D_OUT,
	       dmaReadProxy4SQ_respQ_D_OUT[1] &&
	       dmaReadCntrl4SQ_pendingDmaReadReqQ_D_OUT[1],
	       dmaReadProxy4SQ_respQ_D_OUT[0] &&
	       dmaReadCntrl4SQ_pendingDmaReadReqQ_D_OUT[0] } ;
  assign dmaReadCntrl4SQ_respQ_ENQ = CAN_FIRE_RL_dmaReadCntrl4SQ_recvDmaResp ;
  assign dmaReadCntrl4SQ_respQ_DEQ =
	     CAN_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding ;
  assign dmaReadCntrl4SQ_respQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule dmaReadProxy4SQ_reqQ
  assign dmaReadProxy4SQ_reqQ_D_IN =
	     { dmaReadCntrl4SQ_pendingDmaCntrlReqQ_D_OUT[191:100],
	       dmaReadCntrl4SQ_addrChunkSrv_respQ_D_OUT[78:2],
	       dmaReadCntrl4SQ_pendingDmaCntrlReqQ_D_OUT[3] } ;
  assign dmaReadProxy4SQ_reqQ_ENQ = CAN_FIRE_RL_dmaReadCntrl4SQ_issueDmaReq ;
  assign dmaReadProxy4SQ_reqQ_DEQ = EN_dmaReadClt4SQ_request_get ;
  assign dmaReadProxy4SQ_reqQ_CLR = 1'b0 ;

  // submodule dmaReadProxy4SQ_respQ
  assign dmaReadProxy4SQ_respQ_D_IN = dmaReadClt4SQ_response_put ;
  assign dmaReadProxy4SQ_respQ_ENQ = EN_dmaReadClt4SQ_response_put ;
  assign dmaReadProxy4SQ_respQ_DEQ = CAN_FIRE_RL_dmaReadCntrl4SQ_recvDmaResp ;
  assign dmaReadProxy4SQ_respQ_CLR = 1'b0 ;

  // submodule payloadGenerator4SQ_bramQ2PipeOut_postBramQ
  assign payloadGenerator4SQ_bramQ2PipeOut_postBramQ_D_IN =
	     payloadGenerator4SQ_payloadBufQ_wDataOut_wget ;
  assign payloadGenerator4SQ_bramQ2PipeOut_postBramQ_ENQ =
	     CAN_FIRE_RL_payloadGenerator4SQ_bramQ2PipeOut_mkConnectionGetPut ;
  assign payloadGenerator4SQ_bramQ2PipeOut_postBramQ_DEQ =
	     CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputData ;
  assign payloadGenerator4SQ_bramQ2PipeOut_postBramQ_CLR =
	     cntrl_stateReg == 4'd0 ;

  // submodule payloadGenerator4SQ_payloadBufQ_memory
  assign payloadGenerator4SQ_payloadBufQ_memory_ADDRA =
	     payloadGenerator4SQ_payloadBufQ_rWrPtr[8:0] ;
  assign payloadGenerator4SQ_payloadBufQ_memory_ADDRB =
	     CAN_FIRE_RL_payloadGenerator4SQ_bramQ2PipeOut_mkConnectionGetPut ?
	       x__h12913[8:0] :
	       payloadGenerator4SQ_payloadBufQ_rRdPtr[8:0] ;
  assign payloadGenerator4SQ_payloadBufQ_memory_DIA =
	     { x__read_data__h12578,
	       x__read_byteEn__h12579,
	       CAN_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding &&
	       payloadGenerator4SQ_payloadBufQ_wDataIn_wget[1],
	       CAN_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding &&
	       payloadGenerator4SQ_payloadBufQ_wDataIn_wget[0] } ;
  assign payloadGenerator4SQ_payloadBufQ_memory_DIB =
	     290'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */  ;
  assign payloadGenerator4SQ_payloadBufQ_memory_WEA =
	     CAN_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding ;
  assign payloadGenerator4SQ_payloadBufQ_memory_WEB = 1'd0 ;
  assign payloadGenerator4SQ_payloadBufQ_memory_ENA = cntrl_stateReg != 4'd0 ;
  assign payloadGenerator4SQ_payloadBufQ_memory_ENB = cntrl_stateReg != 4'd0 ;

  // submodule payloadGenerator4SQ_payloadGenReqQ
  assign payloadGenerator4SQ_payloadGenReqQ_D_IN =
	     { 4'd5,
	       cntrl_sqpnReg,
	       sq_reqGenSQ_workReqPayloadGenQ_D_OUT[719:656],
	       sq_reqGenSQ_workReqPayloadGenQ_D_OUT[518:455],
	       sq_reqGenSQ_workReqPayloadGenQ_D_OUT[550:519],
	       sq_reqGenSQ_workReqPayloadGenQ_D_OUT[454],
	       1'd1,
	       cntrl_pmtuReg } ;
  assign payloadGenerator4SQ_payloadGenReqQ_ENQ =
	     WILL_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq &&
	     sq_reqGenSQ_workReqPayloadGenQ_D_OUT[3] ;
  assign payloadGenerator4SQ_payloadGenReqQ_DEQ =
	     CAN_FIRE_RL_payloadGenerator4SQ_recvPayloadGenReq ;
  assign payloadGenerator4SQ_payloadGenReqQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule payloadGenerator4SQ_payloadGenRespQ
  assign payloadGenerator4SQ_payloadGenRespQ_D_IN =
	     { payloadGenerator4SQ_pendingGenReqQ_D_OUT[43],
	       dmaReadCntrl4SQ_respQ_D_OUT[292] } ;
  assign payloadGenerator4SQ_payloadGenRespQ_ENQ =
	     WILL_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding &&
	     (dmaReadCntrl4SQ_respQ_D_OUT[2] ||
	      dmaReadCntrl4SQ_respQ_D_OUT[292]) ;
  assign payloadGenerator4SQ_payloadGenRespQ_DEQ =
	     WILL_FIRE_RL_sq_reqGenSQ_genReqHeader &&
	     sq_reqGenSQ_pendingReqHeaderQ_D_OUT[544] &&
	     sq_reqGenSQ_pendingReqHeaderQ_D_OUT[545] ;
  assign payloadGenerator4SQ_payloadGenRespQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule payloadGenerator4SQ_pendingGenReqQ
  assign payloadGenerator4SQ_pendingGenReqQ_D_IN =
	     { payloadGenerator4SQ_payloadGenReqQ_D_OUT,
	       x__h14424,
	       x__h16825 } ;
  assign payloadGenerator4SQ_pendingGenReqQ_ENQ =
	     CAN_FIRE_RL_payloadGenerator4SQ_recvPayloadGenReq ;
  assign payloadGenerator4SQ_pendingGenReqQ_DEQ =
	     WILL_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding &&
	     dmaReadCntrl4SQ_respQ_D_OUT[0] ;
  assign payloadGenerator4SQ_pendingGenReqQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule respPktPipe_metaDataQ
  assign respPktPipe_metaDataQ_D_IN = respPktPipeIn_pktMetaData_put ;
  assign respPktPipe_metaDataQ_ENQ = EN_respPktPipeIn_pktMetaData_put ;
  assign respPktPipe_metaDataQ_DEQ =
	     WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	     sq_respHandleSQ_preStageDeqPktMetaDataReg ||
	     WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	     respPktPipe_metaDataQ_EMPTY_N ||
	     WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp ||
	     WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp ;
  assign respPktPipe_metaDataQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule respPktPipe_payloadQ
  assign respPktPipe_payloadQ_D_IN = respPktPipeIn_payload_put ;
  assign respPktPipe_payloadQ_ENQ = EN_respPktPipeIn_payload_put ;
  assign respPktPipe_payloadQ_DEQ = 1'b0 ;
  assign respPktPipe_payloadQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ
  assign sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_D_IN =
	     { workReqQ_D_OUT, 78'h1555554AAAAAA2AAAAA8 } ;
  assign sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_ENQ =
	     WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_genPendingWR ||
	     WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_flushWR ;
  assign sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_DEQ =
	     CAN_FIRE_RL_sq_pendingWorkReqPipeOut_outputPipeIn2 ;
  assign sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_CLR =
	     cntrl_stateReg == 4'd0 ;

  // submodule sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_D_IN = 1'd1 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_ENQ =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_decrPendingNewWorkReqCnt ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_DEQ =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrement ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrQ_CLR =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_write ;

  // submodule sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_D_IN = 1'd1 ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_ENQ =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_genPendingWR ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_DEQ =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_increment ;
  assign sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrQ_CLR =
	     CAN_FIRE_RL_sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_write ;

  // submodule sq_pendingWorkReqBuf_itemCnt
  assign sq_pendingWorkReqBuf_itemCnt_DATA_A = 3'd1 ;
  assign sq_pendingWorkReqBuf_itemCnt_DATA_B = 3'd7 ;
  assign sq_pendingWorkReqBuf_itemCnt_DATA_C = 3'h0 ;
  assign sq_pendingWorkReqBuf_itemCnt_DATA_F = 3'd0 ;
  assign sq_pendingWorkReqBuf_itemCnt_ADDA =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize &&
	     sq_pendingWorkReqBuf_pushReg_port1__read[679] &&
	     !sq_pendingWorkReqBuf_popReg_port1__read ;
  assign sq_pendingWorkReqBuf_itemCnt_ADDB =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_canonicalize &&
	     !sq_pendingWorkReqBuf_pushReg_port1__read[679] &&
	     sq_pendingWorkReqBuf_popReg_port1__read ;
  assign sq_pendingWorkReqBuf_itemCnt_SETC = 1'b0 ;
  assign sq_pendingWorkReqBuf_itemCnt_SETF =
	     CAN_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;

  // submodule sq_pendingWorkReqBuf_scanCnt
  assign sq_pendingWorkReqBuf_scanCnt_DATA_A = 3'h0 ;
  assign sq_pendingWorkReqBuf_scanCnt_DATA_B = 3'd7 ;
  assign sq_pendingWorkReqBuf_scanCnt_DATA_C = 3'h0 ;
  assign sq_pendingWorkReqBuf_scanCnt_DATA_F =
	     sq_pendingWorkReqBuf_itemCnt_Q_OUT ;
  assign sq_pendingWorkReqBuf_scanCnt_ADDA = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanCnt_ADDB =
	     CAN_FIRE_RL_sq_pendingWorkReqBuf_scanNext ;
  assign sq_pendingWorkReqBuf_scanCnt_SETC = 1'b0 ;
  assign sq_pendingWorkReqBuf_scanCnt_SETF =
	     CAN_FIRE_RL_sq_pendingWorkReqBuf_preScanMode ;

  // submodule sq_pendingWorkReqBuf_scanOutQ
  assign sq_pendingWorkReqBuf_scanOutQ_D_IN =
	     sq_pendingWorkReqBuf_headReg[679] ?
	       sq_pendingWorkReqBuf_headReg[678:0] :
	       { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d768,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d774,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d780,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d786,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d792,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d798,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d804,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d810,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d816,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d822,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d828,
		 SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d838,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d845,
		 SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d855,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d861,
		 SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d871,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d878,
		 SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d888,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d894,
		 SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d904,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d911,
		 SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d921,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d927,
		 SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d937,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d951,
		 SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d961,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d968,
		 SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d978,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d984,
		 SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d994,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1001,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1007 } ;
  assign sq_pendingWorkReqBuf_scanOutQ_ENQ =
	     CAN_FIRE_RL_sq_pendingWorkReqBuf_scanNext ;
  assign sq_pendingWorkReqBuf_scanOutQ_DEQ =
	     CAN_FIRE_RL_sq_pendingWorkReqPipeOut_outputPipeIn1 ;
  assign sq_pendingWorkReqBuf_scanOutQ_CLR =
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange &&
	     (sq_pendingWorkReqBuf_scanStopReg_port1__read ||
	      sq_pendingWorkReqBuf_preScanRestartReg_port1__read) ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode ||
	     WILL_FIRE_RL_sq_pendingWorkReqBuf_clearAll ;

  // submodule sq_pendingWorkReqPipeOut_pipeMuxOutQ
  assign sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_IN =
	     WILL_FIRE_RL_sq_pendingWorkReqPipeOut_outputPipeIn1 ?
	       sq_pendingWorkReqBuf_scanOutQ_D_OUT :
	       sq_newPendingWorkReqPiptOut_newPendingWorkReqOutQ_D_OUT ;
  assign sq_pendingWorkReqPipeOut_pipeMuxOutQ_ENQ =
	     WILL_FIRE_RL_sq_pendingWorkReqPipeOut_outputPipeIn1 ||
	     WILL_FIRE_RL_sq_pendingWorkReqPipeOut_outputPipeIn2 ;
  assign sq_pendingWorkReqPipeOut_pipeMuxOutQ_DEQ =
	     WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	     IF_cntrl_stateReg_EQ_3_AND_sq_pendingWorkReqPi_ETC___d2074 ;
  assign sq_pendingWorkReqPipeOut_pipeMuxOutQ_CLR = 1'b0 ;

  // submodule sq_reqGenSQ_pendingReqHeaderQ
  assign sq_reqGenSQ_pendingReqHeaderQ_D_IN =
	     { sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[685:7],
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[4:0],
	       IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3420,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686] } ;
  assign sq_reqGenSQ_pendingReqHeaderQ_ENQ =
	     CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen ;
  assign sq_reqGenSQ_pendingReqHeaderQ_DEQ =
	     CAN_FIRE_RL_sq_reqGenSQ_genReqHeader ;
  assign sq_reqGenSQ_pendingReqHeaderQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_reqGenSQ_pendingWorkReqOutQ
  assign sq_reqGenSQ_pendingWorkReqOutQ_D_IN =
	     MUX_sq_reqGenSQ_pendingWorkReqOutQ_enq_1__SEL_1 ?
	       sq_reqGenSQ_workReqOutQ_D_OUT[683:5] :
	       sq_reqGenSQ_workReqPayloadGenQ_D_OUT[719:41] ;
  assign sq_reqGenSQ_pendingWorkReqOutQ_ENQ =
	     WILL_FIRE_RL_sq_reqGenSQ_outputNewPendingWorkReq &&
	     sq_reqGenSQ_workReqOutQ_D_OUT[4] &&
	     sq_reqGenSQ_workReqOutQ_D_OUT[2] ||
	     WILL_FIRE_RL_sq_reqGenSQ_errFlushWR &&
	     sq_reqGenSQ_workReqPayloadGenQ_D_OUT[2] &&
	     sq_reqGenSQ_workReqPayloadGenQ_D_OUT[1] ;
  assign sq_reqGenSQ_pendingWorkReqOutQ_DEQ =
	     CAN_FIRE_RL_sq_pendingWorkReq2Q_mkConnectionGetPut ;
  assign sq_reqGenSQ_pendingWorkReqOutQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_reqGenSQ_psnReqOutQ
  assign sq_reqGenSQ_psnReqOutQ_D_IN = sq_reqGenSQ_reqHeaderGenQ_D_OUT[23:0] ;
  assign sq_reqGenSQ_psnReqOutQ_ENQ =
	     WILL_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp &&
	     sq_reqGenSQ_reqHeaderGenQ_D_OUT[620] &&
	     (!sq_reqGenSQ_reqHeaderGenQ_D_OUT[24] ||
	      !sq_reqGenSQ_reqHeaderGenQ_D_OUT[26]) ;
  assign sq_reqGenSQ_psnReqOutQ_DEQ =
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_connect &&
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_D_OUT[0] ;
  assign sq_reqGenSQ_psnReqOutQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ
  assign sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_IN =
	     { x__h47525[511:256],
	       x__h47528[63:32],
	       !sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg,
	       IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1742 ||
	       IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1737 ==
	       2'd1 } ;
  assign sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_ENQ =
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_outputHeader &&
	     IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1734 ;
  assign sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_DEQ =
	     CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader ;
  assign sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_CLR =
	     cntrl_stateReg == 4'd0 ;

  // submodule sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ
  assign sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_IN =
	     sq_reqGenSQ_reqHeaderOutQ_D_OUT[16:0] ;
  assign sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_ENQ =
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_outputHeader &&
	     !sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg ;
  assign sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_DEQ =
	     CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData ;
  assign sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_CLR =
	     cntrl_stateReg == 4'd0 ;

  // submodule sq_reqGenSQ_rdmaReqPipeOut_outputQ
  assign sq_reqGenSQ_rdmaReqPipeOut_outputQ_D_IN =
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_D_OUT ;
  assign sq_reqGenSQ_rdmaReqPipeOut_outputQ_ENQ =
	     CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_connect ;
  assign sq_reqGenSQ_rdmaReqPipeOut_outputQ_DEQ = EN_rdmaReqPipeOut_deq ;
  assign sq_reqGenSQ_rdmaReqPipeOut_outputQ_CLR = 1'b0 ;

  // submodule sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ
  always@(MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_enq_1__SEL_1 or
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT or
	  WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputData or
	  MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_enq_1__VAL_2 or
	  WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_extraLastFrag or
	  MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_enq_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_enq_1__SEL_1:
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_D_IN =
	      sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT;
      WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputData:
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_D_IN =
	      MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_enq_1__VAL_2;
      WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_extraLastFrag:
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_D_IN =
	      MUX_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_enq_1__VAL_3;
      default: sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_D_IN =
		   290'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_ENQ =
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader &&
	     (!sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerHasPayloadReg ||
	      !sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT[0]) ||
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputData ||
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_extraLastFrag ;
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_DEQ =
	     CAN_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_connect ;
  assign sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_CLR =
	     cntrl_stateReg == 4'd0 ;

  // submodule sq_reqGenSQ_reqCountQ
  assign sq_reqGenSQ_reqCountQ_D_IN = sq_reqGenSQ_workReqCheckQ_D_OUT ;
  assign sq_reqGenSQ_reqCountQ_ENQ =
	     WILL_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq &&
	     (!sq_reqGenSQ_workReqCheckQ_D_OUT[1] ||
	      sq_reqGenSQ_workReqCheckQ_D_OUT[5]) ;
  assign sq_reqGenSQ_reqCountQ_DEQ =
	     WILL_FIRE_RL_sq_reqGenSQ_countReqPkt &&
	     (sq_reqGenSQ_reqCountQ_D_OUT[5] ||
	      !sq_reqGenSQ_isFirstOrOnlyReqPktReg &&
	      sq_reqGenSQ_remainingPktNumReg == 25'd0) ;
  assign sq_reqGenSQ_reqCountQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_reqGenSQ_reqHeaderGenQ
  assign sq_reqGenSQ_reqHeaderGenQ_D_IN =
	     { sq_reqGenSQ_pendingReqHeaderQ_D_OUT[1228:550],
	       sq_reqGenSQ_pendingReqHeaderQ_D_OUT[544:32],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[0],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[1],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[2],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[3],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[4],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[5],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[6],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[7],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[8],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[9],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[10],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[11],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[12],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[13],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[14],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[15],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[16],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[17],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[18],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[19],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[20],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[21],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[22],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[23],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[24],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[25],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[26],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[27],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[28],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[29],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[30],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[31],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[32],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[33],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[34],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[35],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[36],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[37],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[38],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[39],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[40],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[41],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[42],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[43],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[44],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[45],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[46],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[47],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[48],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[49],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[50],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[51],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[52],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[53],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[54],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[55],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[56],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[57],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[58],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[59],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[60],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[61],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[62],
	       _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443[63],
	       sq_reqGenSQ_pendingReqHeaderQ_first__424_BITS__ETC___d3563,
	       sq_reqGenSQ_pendingReqHeaderQ_D_OUT[544] &&
	       sq_reqGenSQ_pendingReqHeaderQ_D_OUT[545],
	       payloadGenerator4SQ_payloadGenRespQ_D_OUT,
	       sq_reqGenSQ_pendingReqHeaderQ_D_OUT[23:0] } ;
  assign sq_reqGenSQ_reqHeaderGenQ_ENQ =
	     CAN_FIRE_RL_sq_reqGenSQ_genReqHeader ;
  assign sq_reqGenSQ_reqHeaderGenQ_DEQ =
	     CAN_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp ;
  assign sq_reqGenSQ_reqHeaderGenQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_reqGenSQ_reqHeaderOutQ
  assign sq_reqGenSQ_reqHeaderOutQ_D_IN =
	     sq_reqGenSQ_reqHeaderGenQ_D_OUT[619:27] ;
  assign sq_reqGenSQ_reqHeaderOutQ_ENQ =
	     WILL_FIRE_RL_sq_reqGenSQ_recvPayloadGenRespAndGenErrWorkComp &&
	     sq_reqGenSQ_reqHeaderGenQ_D_OUT[620] &&
	     (!sq_reqGenSQ_reqHeaderGenQ_D_OUT[24] ||
	      !sq_reqGenSQ_reqHeaderGenQ_D_OUT[26]) ;
  assign sq_reqGenSQ_reqHeaderOutQ_DEQ =
	     WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_outputHeader &&
	     (IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1742 ||
	      IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1737 ==
	      2'd1) ;
  assign sq_reqGenSQ_reqHeaderOutQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_reqGenSQ_reqHeaderPrepareQ
  assign sq_reqGenSQ_reqHeaderPrepareQ_D_IN =
	     { curPSN__h61636,
	       sq_reqGenSQ_reqCountQ_D_OUT[683:5],
	       sq_reqGenSQ_isFirstOrOnlyReqPktReg,
	       sq_reqGenSQ_reqCountQ_D_OUT[5] ||
	       !sq_reqGenSQ_isFirstOrOnlyReqPktReg &&
	       sq_reqGenSQ_remainingPktNumReg == 25'd0,
	       sq_reqGenSQ_reqCountQ_D_OUT[4:0] } ;
  assign sq_reqGenSQ_reqHeaderPrepareQ_ENQ =
	     CAN_FIRE_RL_sq_reqGenSQ_countReqPkt ;
  assign sq_reqGenSQ_reqHeaderPrepareQ_DEQ =
	     CAN_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen ;
  assign sq_reqGenSQ_reqHeaderPrepareQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_reqGenSQ_workCompGenReqOutQ
  assign sq_reqGenSQ_workCompGenReqOutQ_D_IN =
	     { sq_reqGenSQ_reqHeaderGenQ_D_OUT[1299:699],
	       3'd1,
	       sq_reqGenSQ_reqHeaderGenQ_D_OUT[23:0],
	       5'd2 } ;
  assign sq_reqGenSQ_workCompGenReqOutQ_ENQ =
	     MUX_sq_reqGenSQ_isNormalStateReg_write_1__SEL_1 ;
  assign sq_reqGenSQ_workCompGenReqOutQ_DEQ =
	     WILL_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ &&
	     sq_reqGenSQ_workCompGenReqOutQ_EMPTY_N ;
  assign sq_reqGenSQ_workCompGenReqOutQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_reqGenSQ_workReqCheckQ
  assign sq_reqGenSQ_workReqCheckQ_D_IN =
	     { sq_reqGenSQ_workReqPsnQ_D_OUT[683:83],
	       sq_reqGenSQ_workReqPsnQ_first__498_BIT_4_499_O_ETC___d2558,
	       sq_reqGenSQ_workReqPsnQ_D_OUT[4:0] } ;
  assign sq_reqGenSQ_workReqCheckQ_ENQ =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq ;
  assign sq_reqGenSQ_workReqCheckQ_DEQ =
	     CAN_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq ;
  assign sq_reqGenSQ_workReqCheckQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_reqGenSQ_workReqOutQ
  assign sq_reqGenSQ_workReqOutQ_D_IN = sq_reqGenSQ_workReqCheckQ_D_OUT ;
  assign sq_reqGenSQ_workReqOutQ_ENQ =
	     CAN_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq ;
  assign sq_reqGenSQ_workReqOutQ_DEQ =
	     CAN_FIRE_RL_sq_reqGenSQ_outputNewPendingWorkReq ;
  assign sq_reqGenSQ_workReqOutQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_reqGenSQ_workReqPayloadGenQ
  assign sq_reqGenSQ_workReqPayloadGenQ_D_IN =
	     { sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT,
	       x__h52242,
	       x__h52371,
	       (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd0 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd1 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd2 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd3 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] ==
		4'd9) &&
	       (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:508] != 2'd0 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[507:506] != 2'd0 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[505:504] != 2'd0 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[503:502] != 2'd0 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[501:500] != 2'd0 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[499:498] != 2'd0 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[497:496] != 2'd0 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[495:494] != 2'd0 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[493:492] != 2'd0 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[491:490] != 2'd0 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[489:488] != 2'd0 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[487:486] != 2'd0 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[485:484] != 2'd0 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[483:482] != 2'd0 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[481:480] != 2'd0 ||
		sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[479:478] != 2'd0),
	       !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[1],
	       cntrl_sqTypeReg == 4'd2 || cntrl_sqTypeReg == 4'd9,
	       cntrl_sqTypeReg == 4'd4 } ;
  assign sq_reqGenSQ_workReqPayloadGenQ_ENQ =
	     WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	     IF_cntrl_stateReg_EQ_3_AND_sq_pendingWorkReqPi_ETC___d2074 ;
  assign sq_reqGenSQ_workReqPayloadGenQ_DEQ =
	     WILL_FIRE_RL_sq_reqGenSQ_errFlushWR ||
	     WILL_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq ;
  assign sq_reqGenSQ_workReqPayloadGenQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_reqGenSQ_workReqPktNumQ
  assign sq_reqGenSQ_workReqPktNumQ_D_IN =
	     { sq_reqGenSQ_workReqPayloadGenQ_D_OUT[719:16],
	       sq_reqGenSQ_workReqPayloadGenQ_D_OUT[2],
	       sq_reqGenSQ_workReqPayloadGenQ_D_OUT[15:4] == 12'd0,
	       sq_reqGenSQ_workReqPayloadGenQ_D_OUT[1:0],
	       sq_reqGenSQ_workReqPayloadGenQ_D_OUT[3] } ;
  assign sq_reqGenSQ_workReqPktNumQ_ENQ =
	     CAN_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq ;
  assign sq_reqGenSQ_workReqPktNumQ_DEQ =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq ;
  assign sq_reqGenSQ_workReqPktNumQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_reqGenSQ_workReqPsnQ
  assign sq_reqGenSQ_workReqPsnQ_D_IN =
	     { sq_reqGenSQ_workReqPktNumQ_D_OUT[708:58],
	       sq_reqGenSQ_workReqPktNumQ_D_OUT[4] ||
	       sq_reqGenSQ_workReqPktNumQ_D_OUT[57],
	       sq_reqGenSQ_workReqPktNumQ_D_OUT[4] ?
		 totalPktNum__h55209 :
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[56:32],
	       sq_reqGenSQ_workReqPktNumQ_D_OUT[4] ||
	       sq_reqGenSQ_workReqPktNumQ_D_OUT[31],
	       sq_reqGenSQ_workReqPktNumQ_D_OUT[4] ?
		 totalPktNum__h55209[24:23] == 2'd0 &&
		 !totalPktNum__h55209[22] &&
		 totalPktNum__h55209[21:20] == 2'd0 &&
		 !totalPktNum__h55209[19] &&
		 totalPktNum__h55209[18:17] == 2'd0 &&
		 !totalPktNum__h55209[16] &&
		 totalPktNum__h55209[15:14] == 2'd0 &&
		 !totalPktNum__h55209[13] &&
		 totalPktNum__h55209[12:11] == 2'd0 &&
		 !totalPktNum__h55209[10] &&
		 totalPktNum__h55209[9:8] == 2'd0 &&
		 !totalPktNum__h55209[7] &&
		 totalPktNum__h55209[6:5] == 2'd0 &&
		 totalPktNum__h55209[4:3] == 2'd0 &&
		 totalPktNum__h55209[2:1] == 2'd0 :
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[30],
	       sq_reqGenSQ_workReqPktNumQ_D_OUT[4:0] } ;
  assign sq_reqGenSQ_workReqPsnQ_ENQ =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq ;
  assign sq_reqGenSQ_workReqPsnQ_DEQ =
	     CAN_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq ;
  assign sq_reqGenSQ_workReqPsnQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_respHandleSQ_incomingRespQ
  always@(MUX_sq_respHandleSQ_incomingRespQ_enq_1__SEL_1 or
	  MUX_sq_respHandleSQ_incomingRespQ_enq_1__VAL_1 or
	  WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp or
	  WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq or
	  MUX_sq_respHandleSQ_incomingRespQ_enq_1__VAL_3 or
	  WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp or
	  MUX_sq_respHandleSQ_incomingRespQ_enq_1__VAL_4 or
	  WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq or
	  MUX_sq_respHandleSQ_incomingRespQ_enq_1__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_sq_respHandleSQ_incomingRespQ_enq_1__SEL_1:
	  sq_respHandleSQ_incomingRespQ_D_IN =
	      MUX_sq_respHandleSQ_incomingRespQ_enq_1__VAL_1;
      WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp:
	  sq_respHandleSQ_incomingRespQ_D_IN =
	      MUX_sq_respHandleSQ_incomingRespQ_enq_1__VAL_1;
      WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq:
	  sq_respHandleSQ_incomingRespQ_D_IN =
	      MUX_sq_respHandleSQ_incomingRespQ_enq_1__VAL_3;
      WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp:
	  sq_respHandleSQ_incomingRespQ_D_IN =
	      MUX_sq_respHandleSQ_incomingRespQ_enq_1__VAL_4;
      WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq:
	  sq_respHandleSQ_incomingRespQ_D_IN =
	      MUX_sq_respHandleSQ_incomingRespQ_enq_1__VAL_5;
      default: sq_respHandleSQ_incomingRespQ_D_IN =
		   1470'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign sq_respHandleSQ_incomingRespQ_ENQ =
	     WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	     respPktPipe_metaDataQ_EMPTY_N ||
	     WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp ||
	     WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq ||
	     WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp ||
	     WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq ;
  assign sq_respHandleSQ_incomingRespQ_DEQ =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;
  assign sq_respHandleSQ_incomingRespQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_respHandleSQ_pendingAddrCalcQ
  assign sq_respHandleSQ_pendingAddrCalcQ_D_IN =
	     { sq_respHandleSQ_pendingPermCheckQ_D_OUT[1475:139],
	       1'd0,
	       sq_respHandleSQ_pendingPermCheckQ_D_OUT[137:136],
	       4'd0,
	       sq_respHandleSQ_pendingPermCheckQ_D_OUT[131:116],
	       8'd0,
	       sq_respHandleSQ_pendingPermCheckQ_D_OUT[107:83],
	       7'd0,
	       sq_respHandleSQ_pendingPermCheckQ_D_OUT[75:52],
	       1'd0,
	       sq_respHandleSQ_pendingPermCheckQ_D_OUT[50:1] } ;
  assign sq_respHandleSQ_pendingAddrCalcQ_ENQ =
	     CAN_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp ;
  assign sq_respHandleSQ_pendingAddrCalcQ_DEQ =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespAddr ;
  assign sq_respHandleSQ_pendingAddrCalcQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_respHandleSQ_pendingDmaReqQ
  assign sq_respHandleSQ_pendingDmaReqQ_D_IN =
	     { sq_respHandleSQ_pendingLenCheckQ_D_OUT[1572:236],
	       1'd0,
	       sq_respHandleSQ_pendingLenCheckQ_D_OUT[234:233],
	       4'd0,
	       sq_respHandleSQ_pendingLenCheckQ_D_OUT[228:213],
	       8'd0,
	       sq_respHandleSQ_pendingLenCheckQ_D_OUT[204:180],
	       7'd0,
	       sq_respHandleSQ_pendingLenCheckQ_D_OUT[172:149],
	       1'd0,
	       sq_respHandleSQ_pendingLenCheckQ_D_OUT[147:98],
	       sq_respHandleSQ_pendingLenCheckQ_D_OUT[95:32] } ;
  assign sq_respHandleSQ_pendingDmaReqQ_ENQ =
	     CAN_FIRE_RL_sq_respHandleSQ_checkReadRespLen ;
  assign sq_respHandleSQ_pendingDmaReqQ_DEQ =
	     CAN_FIRE_RL_sq_respHandleSQ_issueDmaReq ;
  assign sq_respHandleSQ_pendingDmaReqQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_respHandleSQ_pendingLenCalcQ
  assign sq_respHandleSQ_pendingLenCalcQ_D_IN =
	     { sq_respHandleSQ_pendingAddrCalcQ_D_OUT[1474:138],
	       1'd0,
	       sq_respHandleSQ_pendingAddrCalcQ_D_OUT[136:135],
	       4'd0,
	       sq_respHandleSQ_pendingAddrCalcQ_D_OUT[130:115],
	       8'd0,
	       sq_respHandleSQ_pendingAddrCalcQ_D_OUT[106:82],
	       7'd0,
	       sq_respHandleSQ_pendingAddrCalcQ_D_OUT[74:51],
	       1'd0,
	       sq_respHandleSQ_pendingAddrCalcQ_D_OUT[49:0],
	       sq_respHandleSQ_nextReadRespWriteAddrReg } ;
  assign sq_respHandleSQ_pendingLenCalcQ_ENQ =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespAddr ;
  assign sq_respHandleSQ_pendingLenCalcQ_DEQ =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespLen ;
  assign sq_respHandleSQ_pendingLenCalcQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_respHandleSQ_pendingLenCheckQ
  assign sq_respHandleSQ_pendingLenCheckQ_D_IN =
	     { sq_respHandleSQ_pendingSpaceCalcQ_D_OUT[1604:268],
	       1'd0,
	       sq_respHandleSQ_pendingSpaceCalcQ_D_OUT[266:265],
	       4'd0,
	       sq_respHandleSQ_pendingSpaceCalcQ_D_OUT[260:245],
	       8'd0,
	       sq_respHandleSQ_pendingSpaceCalcQ_D_OUT[236:212],
	       7'd0,
	       sq_respHandleSQ_pendingSpaceCalcQ_D_OUT[204:181],
	       1'd0,
	       sq_respHandleSQ_pendingSpaceCalcQ_D_OUT[179:130],
	       2'd2,
	       sq_respHandleSQ_pendingSpaceCalcQ_D_OUT[127:32] } ;
  assign sq_respHandleSQ_pendingLenCheckQ_ENQ =
	     CAN_FIRE_RL_sq_respHandleSQ_calcEnoughDmaSpace ;
  assign sq_respHandleSQ_pendingLenCheckQ_DEQ =
	     CAN_FIRE_RL_sq_respHandleSQ_checkReadRespLen ;
  assign sq_respHandleSQ_pendingLenCheckQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_respHandleSQ_pendingPermCheckQ
  assign sq_respHandleSQ_pendingPermCheckQ_D_IN =
	     { sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1469:133],
	       1'd0,
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[131:130],
	       4'd0,
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[125:110],
	       8'd0,
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[101:77],
	       7'd0,
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[69:46],
	       1'd0,
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:9],
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd0 ||
	       CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q25,
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd0 ||
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 ||
	       CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q27,
	       sq_respHandleSQ_pendingRetryCheckQ_first__949__ETC___d5187 } ;
  assign sq_respHandleSQ_pendingPermCheckQ_ENQ =
	     CAN_FIRE_RL_sq_respHandleSQ_checkRetryErr ;
  assign sq_respHandleSQ_pendingPermCheckQ_DEQ =
	     CAN_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp ;
  assign sq_respHandleSQ_pendingPermCheckQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_respHandleSQ_pendingPermQueryQ
  assign sq_respHandleSQ_pendingPermQueryQ_D_IN =
	     { sq_respHandleSQ_pendingRespQ_D_OUT[1472:136],
	       1'd0,
	       sq_respHandleSQ_pendingRespQ_D_OUT[134:133],
	       4'd0,
	       sq_respHandleSQ_pendingRespQ_D_OUT[128:113],
	       8'd0,
	       sq_respHandleSQ_pendingRespQ_D_OUT[104:80],
	       7'd0,
	       sq_respHandleSQ_pendingRespQ_D_OUT[72:49],
	       1'd0,
	       sq_respHandleSQ_pendingRespQ_D_OUT[47:13],
	       (sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd3) ?
		 IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4844 ||
		 sq_respHandleSQ_pendingRespQ_D_OUT[12] :
		 sq_respHandleSQ_pendingRespQ_D_OUT[12],
	       sq_respHandleSQ_pendingRespQ_D_OUT[11:10],
	       (sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd3) ?
		 (IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4844 ?
		    { 4'd0,
		      (sq_respHandleSQ_pendingRespQ_D_OUT[3:0] == 4'd3) ?
			2'd1 :
			2'd0 } :
		    sq_respHandleSQ_pendingRespQ_D_OUT[9:4]) :
		 sq_respHandleSQ_pendingRespQ_D_OUT[9:4] } ;
  assign sq_respHandleSQ_pendingPermQueryQ_ENQ =
	     CAN_FIRE_RL_sq_respHandleSQ_handleRespByType ;
  assign sq_respHandleSQ_pendingPermQueryQ_DEQ =
	     CAN_FIRE_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp ;
  assign sq_respHandleSQ_pendingPermQueryQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_respHandleSQ_pendingRespQ
  assign sq_respHandleSQ_pendingRespQ_D_IN =
	     { sq_respHandleSQ_incomingRespQ_D_OUT[1469:133],
	       1'd0,
	       sq_respHandleSQ_incomingRespQ_D_OUT[131:130],
	       4'd0,
	       sq_respHandleSQ_incomingRespQ_D_OUT[125:110],
	       8'd0,
	       sq_respHandleSQ_incomingRespQ_D_OUT[101:77],
	       7'd0,
	       sq_respHandleSQ_incomingRespQ_D_OUT[69:46],
	       1'd0,
	       sq_respHandleSQ_incomingRespQ_D_OUT[44:7],
	       CASE_sq_respHandleSQ_incomingRespQD_OUT_BITS__ETC__q28,
	       sq_respHandleSQ_incomingRespQ_D_OUT[5:0] } ;
  assign sq_respHandleSQ_pendingRespQ_ENQ =
	     CAN_FIRE_RL_sq_respHandleSQ_recvRespHeader ;
  assign sq_respHandleSQ_pendingRespQ_DEQ =
	     CAN_FIRE_RL_sq_respHandleSQ_handleRespByType ;
  assign sq_respHandleSQ_pendingRespQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_respHandleSQ_pendingRetryCheckQ
  assign sq_respHandleSQ_pendingRetryCheckQ_D_IN =
	     { sq_respHandleSQ_pendingPermQueryQ_D_OUT[1468:132],
	       1'd0,
	       sq_respHandleSQ_pendingPermQueryQ_D_OUT[130:129],
	       4'd0,
	       sq_respHandleSQ_pendingPermQueryQ_D_OUT[124:109],
	       8'd0,
	       sq_respHandleSQ_pendingPermQueryQ_D_OUT[100:76],
	       7'd0,
	       sq_respHandleSQ_pendingPermQueryQ_D_OUT[68:45],
	       1'd0,
	       sq_respHandleSQ_pendingPermQueryQ_D_OUT[43:0],
	       1'd0 } ;
  assign sq_respHandleSQ_pendingRetryCheckQ_ENQ =
	     CAN_FIRE_RL_sq_respHandleSQ_queryPerm4NormalReadAtomicResp ;
  assign sq_respHandleSQ_pendingRetryCheckQ_DEQ =
	     CAN_FIRE_RL_sq_respHandleSQ_checkRetryErr ;
  assign sq_respHandleSQ_pendingRetryCheckQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_respHandleSQ_pendingSpaceCalcQ
  assign sq_respHandleSQ_pendingSpaceCalcQ_D_IN =
	     { sq_respHandleSQ_pendingLenCalcQ_D_OUT[1538:202],
	       1'd0,
	       sq_respHandleSQ_pendingLenCalcQ_D_OUT[200:199],
	       4'd0,
	       sq_respHandleSQ_pendingLenCalcQ_D_OUT[194:179],
	       8'd0,
	       sq_respHandleSQ_pendingLenCalcQ_D_OUT[170:146],
	       7'd0,
	       sq_respHandleSQ_pendingLenCalcQ_D_OUT[138:115],
	       1'd0,
	       sq_respHandleSQ_pendingLenCalcQ_D_OUT[113:64],
	       2'd1,
	       sq_respHandleSQ_pendingLenCalcQ_D_OUT[63:0],
	       sq_respHandleSQ_remainingReadRespLenReg,
	       sq_respHandleSQ_remainingReadRespLenReg } ;
  assign sq_respHandleSQ_pendingSpaceCalcQ_ENQ =
	     CAN_FIRE_RL_sq_respHandleSQ_calcReadRespLen ;
  assign sq_respHandleSQ_pendingSpaceCalcQ_DEQ =
	     CAN_FIRE_RL_sq_respHandleSQ_calcEnoughDmaSpace ;
  assign sq_respHandleSQ_pendingSpaceCalcQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_respHandleSQ_pendingWorkCompQ
  assign sq_respHandleSQ_pendingWorkCompQ_D_IN =
	     { sq_respHandleSQ_pendingDmaReqQ_D_OUT[210:202],
	       1'd0,
	       sq_respHandleSQ_pendingDmaReqQ_D_OUT[200:199],
	       4'd0,
	       sq_respHandleSQ_pendingDmaReqQ_D_OUT[194:179],
	       8'd0,
	       sq_respHandleSQ_pendingDmaReqQ_D_OUT[170:146],
	       7'd0,
	       sq_respHandleSQ_pendingDmaReqQ_D_OUT[138:115],
	       1'd0,
	       sq_respHandleSQ_pendingDmaReqQ_D_OUT[113:76],
	       sq_respHandleSQ_pendingDmaReqQ_D_OUT[1538:938],
	       1'd0,
	       sq_respHandleSQ_pendingDmaReqQ_D_OUT[65:64],
	       sq_respHandleSQ_pendingDmaReqQ_D_OUT[138:115],
	       sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] ?
		 sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] :
		 5'd0 } ;
  assign sq_respHandleSQ_pendingWorkCompQ_ENQ =
	     CAN_FIRE_RL_sq_respHandleSQ_issueDmaReq ;
  assign sq_respHandleSQ_pendingWorkCompQ_DEQ =
	     CAN_FIRE_RL_sq_respHandleSQ_genWorkCompSQ ;
  assign sq_respHandleSQ_pendingWorkCompQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_respHandleSQ_workCompGenReqOutQ
  assign sq_respHandleSQ_workCompGenReqOutQ_D_IN =
	     sq_respHandleSQ_pendingWorkCompQ_D_OUT[632:0] ;
  assign sq_respHandleSQ_workCompGenReqOutQ_ENQ =
	     WILL_FIRE_RL_sq_respHandleSQ_genWorkCompSQ &&
	     (sq_respHandleSQ_pendingWorkCompQ_D_OUT[633] ||
	      sq_respHandleSQ_pendingWorkCompQ_D_OUT[31]) ;
  assign sq_respHandleSQ_workCompGenReqOutQ_DEQ =
	     WILL_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ &&
	     !sq_reqGenSQ_workCompGenReqOutQ_EMPTY_N &&
	     sq_respHandleSQ_workCompGenReqOutQ_EMPTY_N ;
  assign sq_respHandleSQ_workCompGenReqOutQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_retryHandler_prepareRetryRespQ
  assign sq_retryHandler_prepareRetryRespQ_D_IN =
	     { IF_IF_sq_retryHandler_updateRetryCntQ_first__3_ETC___d1388 ||
	       sq_retryHandler_retryCntrlStateReg_port1__read == 2'd1,
	       sq_retryHandler_updateRetryCntQ_D_OUT[2:0] } ;
  assign sq_retryHandler_prepareRetryRespQ_ENQ =
	     MUX_sq_retryHandler_pauseRetryHandleReg_write_1__SEL_1 ;
  assign sq_retryHandler_prepareRetryRespQ_DEQ =
	     CAN_FIRE_RL_sq_retryHandler_sendRetryResp ;
  assign sq_retryHandler_prepareRetryRespQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_retryHandler_resetReqQ
  assign sq_retryHandler_resetReqQ_D_IN =
	     sq_respHandleSQ_incomingRespQ_D_OUT[6] ;
  assign sq_retryHandler_resetReqQ_ENQ =
	     WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	     cntrl_preStateReg == 4'd3 &&
	     cntrl_stateReg == 4'd3 ;
  assign sq_retryHandler_resetReqQ_DEQ =
	     CAN_FIRE_RL_sq_retryHandler_recvResetReq ;
  assign sq_retryHandler_resetReqQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_retryHandler_resetRetryCntQ
  assign sq_retryHandler_resetRetryCntQ_D_IN = 1'd1 ;
  assign sq_retryHandler_resetRetryCntQ_ENQ =
	     WILL_FIRE_RL_sq_retryHandler_recvResetReq &&
	     sq_retryHandler_resetReqQ_D_OUT ;
  assign sq_retryHandler_resetRetryCntQ_DEQ =
	     WILL_FIRE_RL_sq_retryHandler_recvRetryReq &&
	     sq_retryHandler_resetRetryCntQ_EMPTY_N ;
  assign sq_retryHandler_resetRetryCntQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_retryHandler_resetTimeOutQ
  assign sq_retryHandler_resetTimeOutQ_D_IN = 1'd1 ;
  assign sq_retryHandler_resetTimeOutQ_ENQ =
	     CAN_FIRE_RL_sq_retryHandler_recvResetReq ;
  assign sq_retryHandler_resetTimeOutQ_DEQ =
	     WILL_FIRE_RL_sq_retryHandler_checkTimeOut &&
	     sq_retryHandler_resetTimeOutQ_EMPTY_N ;
  assign sq_retryHandler_resetTimeOutQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_retryHandler_retryActionQ
  assign sq_retryHandler_retryActionQ_D_IN =
	     { sq_retryHandler_retryNotificationQ_EMPTY_N ?
		 sq_retryHandler_retryNotificationQ_D_OUT[97] :
		 sq_retryHandler_timeOutTriggerQ_EMPTY_N,
	       sq_retryHandler_retryNotificationQ_D_OUT[96:9],
	       sq_retryHandler_retryNotificationQ_EMPTY_N ?
		 sq_retryHandler_retryNotificationQ_D_OUT[8:6] :
		 3'd4,
	       sq_retryHandler_retryNotificationQ_D_OUT[5:0] } ;
  assign sq_retryHandler_retryActionQ_ENQ =
	     WILL_FIRE_RL_sq_retryHandler_handleNotifiedRetryAndTimeOut &&
	     (sq_retryHandler_timeOutTriggerQ_EMPTY_N ||
	      sq_retryHandler_retryNotificationQ_EMPTY_N) ;
  assign sq_retryHandler_retryActionQ_DEQ =
	     CAN_FIRE_RL_sq_retryHandler_handleRetryAction ;
  assign sq_retryHandler_retryActionQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_retryHandler_retryNotificationQ
  assign sq_retryHandler_retryNotificationQ_D_IN =
	     { sq_retryHandler_retryReqQ_EMPTY_N,
	       sq_retryHandler_retryReqQ_D_OUT } ;
  assign sq_retryHandler_retryNotificationQ_ENQ =
	     WILL_FIRE_RL_sq_retryHandler_recvRetryReq &&
	     (sq_retryHandler_retryReqQ_EMPTY_N ||
	      sq_retryHandler_resetRetryCntQ_EMPTY_N) ;
  assign sq_retryHandler_retryNotificationQ_DEQ =
	     WILL_FIRE_RL_sq_retryHandler_handleNotifiedRetryAndTimeOut &&
	     sq_retryHandler_retryNotificationQ_EMPTY_N ;
  assign sq_retryHandler_retryNotificationQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_retryHandler_retryReqQ
  assign sq_retryHandler_retryReqQ_D_IN =
	     { sq_respHandleSQ_pendingRespQ_D_OUT[1472:1409],
	       sq_respHandleSQ_pendingRespQ_D_OUT[72:49],
	       (sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd10) ?
		 3'd3 :
		 CASE_sq_respHandleSQ_pendingRespQD_OUT_BITS_4_ETC__q33,
	       sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd10 &&
	       sq_respHandleSQ_pendingRespQ_D_OUT[47:46] == 2'd1,
	       sq_respHandleSQ_pendingRespQ_D_OUT[45:41] } ;
  assign sq_retryHandler_retryReqQ_ENQ =
	     WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	     (sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd9 ||
	      sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd10) ;
  assign sq_retryHandler_retryReqQ_DEQ =
	     WILL_FIRE_RL_sq_retryHandler_recvRetryReq &&
	     sq_retryHandler_retryReqQ_EMPTY_N ;
  assign sq_retryHandler_retryReqQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_retryHandler_retryRespQ
  assign sq_retryHandler_retryRespQ_D_IN =
	     sq_retryHandler_prepareRetryRespQ_D_OUT[3] ;
  assign sq_retryHandler_retryRespQ_ENQ =
	     WILL_FIRE_RL_sq_retryHandler_sendRetryResp &&
	     sq_retryHandler_prepareRetryRespQ_D_OUT[2:0] != 3'd4 ;
  assign sq_retryHandler_retryRespQ_DEQ =
	     WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	     (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd9 ||
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd10) ;
  assign sq_retryHandler_retryRespQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_retryHandler_timeOutNotificationQ
  assign sq_retryHandler_timeOutNotificationQ_D_IN =
	     sq_retryHandler_prepareRetryRespQ_D_OUT[3] ;
  assign sq_retryHandler_timeOutNotificationQ_ENQ =
	     WILL_FIRE_RL_sq_retryHandler_sendRetryResp &&
	     sq_retryHandler_prepareRetryRespQ_D_OUT[2:0] == 3'd4 ;
  assign sq_retryHandler_timeOutNotificationQ_DEQ =
	     CAN_FIRE_RL_sq_respHandleSQ_checkTimeOutErr ;
  assign sq_retryHandler_timeOutNotificationQ_CLR =
	     WILL_FIRE_RL_sq_retryHandler_initRetryCntAndTimeOutTimer ||
	     WILL_FIRE_RL_sq_retryHandler_resetAndClear ;

  // submodule sq_retryHandler_timeOutTriggerQ
  assign sq_retryHandler_timeOutTriggerQ_D_IN = 1'd1 ;
  assign sq_retryHandler_timeOutTriggerQ_ENQ =
	     WILL_FIRE_RL_sq_retryHandler_checkTimeOut &&
	     NOT_sq_retryHandler_resetTimeOutQ_notEmpty__17_ETC___d1219 ;
  assign sq_retryHandler_timeOutTriggerQ_DEQ =
	     WILL_FIRE_RL_sq_retryHandler_handleNotifiedRetryAndTimeOut &&
	     sq_retryHandler_timeOutTriggerQ_EMPTY_N ;
  assign sq_retryHandler_timeOutTriggerQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_retryHandler_updateRetryCntQ
  assign sq_retryHandler_updateRetryCntQ_D_IN =
	     { sq_retryHandler_retryActionQ_D_OUT[97],
	       sq_retryHandler_retryActionQ_D_OUT[8:6] } ;
  assign sq_retryHandler_updateRetryCntQ_ENQ =
	     CAN_FIRE_RL_sq_retryHandler_handleRetryAction ;
  assign sq_retryHandler_updateRetryCntQ_DEQ =
	     CAN_FIRE_RL_sq_retryHandler_handleRetryCntUpdate ;
  assign sq_retryHandler_updateRetryCntQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_workCompGenSQ_dmaWaitingQ
  assign sq_workCompGenSQ_dmaWaitingQ_D_IN =
	     { sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT,
	       sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[632:569],
	       CASE_sq_workCompGenSQ_pendingWorkCompQ4SQD_OU_ETC__q34,
	       7'd0,
	       sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[4:0],
	       sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[463:432],
	       cntrl_pkeyReg,
	       cntrl_sqpnReg,
	       66'h155555554AAAAAAAA,
	       sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[4:0] == 5'd0,
	       sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[30:29] == 2'd0 &&
	       (sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[561] ||
		sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd4 ||
		sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd5 ||
		sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd6 ||
		cntrl_sqSigAllReg) } ;
  assign sq_workCompGenSQ_dmaWaitingQ_ENQ =
	     CAN_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ ;
  assign sq_workCompGenSQ_dmaWaitingQ_DEQ =
	     WILL_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ ||
	     WILL_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ ;
  assign sq_workCompGenSQ_dmaWaitingQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_workCompGenSQ_genWorkCompQ
  assign sq_workCompGenSQ_genWorkCompQ_D_IN =
	     sq_workCompGenSQ_dmaWaitingQ_D_OUT ;
  assign sq_workCompGenSQ_genWorkCompQ_ENQ =
	     WILL_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ ||
	     WILL_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ ;
  assign sq_workCompGenSQ_genWorkCompQ_DEQ =
	     WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ ||
	     WILL_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ ;
  assign sq_workCompGenSQ_genWorkCompQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_workCompGenSQ_pendingWorkCompQ4SQ
  assign sq_workCompGenSQ_pendingWorkCompQ4SQ_D_IN =
	     sq_reqGenSQ_workCompGenReqOutQ_EMPTY_N ?
	       sq_reqGenSQ_workCompGenReqOutQ_D_OUT :
	       sq_respHandleSQ_workCompGenReqOutQ_D_OUT ;
  assign sq_workCompGenSQ_pendingWorkCompQ4SQ_ENQ =
	     WILL_FIRE_RL_sq_workCompGenSQ_recvWorkCompGenReqSQ &&
	     (sq_reqGenSQ_workCompGenReqOutQ_EMPTY_N ||
	      sq_respHandleSQ_workCompGenReqOutQ_EMPTY_N) ;
  assign sq_workCompGenSQ_pendingWorkCompQ4SQ_DEQ =
	     CAN_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ ;
  assign sq_workCompGenSQ_pendingWorkCompQ4SQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule sq_workCompGenSQ_workCompOutQ4SQ
  assign sq_workCompGenSQ_workCompOutQ4SQ_D_IN =
	     MUX_sq_workCompGenSQ_workCompOutQ4SQ_enq_1__SEL_1 ?
	       sq_workCompGenSQ_genWorkCompQ_D_OUT[223:2] :
	       MUX_sq_workCompGenSQ_workCompOutQ4SQ_enq_1__VAL_2 ;
  assign sq_workCompGenSQ_workCompOutQ4SQ_ENQ =
	     WILL_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ &&
	     (sq_workCompGenSQ_genWorkCompQ_D_OUT[0] ||
	      !sq_workCompGenSQ_genWorkCompQ_D_OUT[1]) ||
	     WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ &&
	     !sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg ;
  assign sq_workCompGenSQ_workCompOutQ4SQ_DEQ = EN_workCompPipeOutSQ_deq ;
  assign sq_workCompGenSQ_workCompOutQ4SQ_CLR = cntrl_stateReg == 4'd0 ;

  // submodule workReqQ
  assign workReqQ_D_IN = workReqIn_put ;
  assign workReqQ_ENQ = EN_workReqIn_put ;
  assign workReqQ_DEQ =
	     WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_genPendingWR ||
	     WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_flushWR ;
  assign workReqQ_CLR = cntrl_stateReg == 4'd0 ;

  // remaining internal signals
  assign IF_IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_ETC___d1515 =
	     IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d1501 ?
	       NOT_IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVe_ETC___d1503 ||
	       NOT_IF_sq_retryHandler_retryReasonReg_431_EQ_4_ETC___d1505 :
	       NOT_IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVe_ETC___d1514 ;
  assign IF_IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_ETC___d4106 =
	     (value__h99966[23] == cntrl_npsnReg[23]) ?
	       IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d4097 &&
	       respPktPipe_metaDataQ_first__626_BITS_554_TO_5_ETC___d4098 :
	       IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d4105 ;
  assign IF_IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_ETC___d4116 =
	     IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d1501 ?
	       IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d4108 &&
	       respPktPipe_metaDataQ_first__626_BITS_554_TO_5_ETC___d4109 :
	       IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d4115 ;
  assign IF_IF_sq_retryHandler_updateRetryCntQ_first__3_ETC___d1388 =
	     (sq_retryHandler_updateRetryCntQ_D_OUT[2:0] == 3'd1) ?
	       sq_retryHandler_rnrCntReg == 3'd0 :
	       (sq_retryHandler_updateRetryCntQ_D_OUT[2:0] == 3'd2 ||
		sq_retryHandler_updateRetryCntQ_D_OUT[2:0] == 3'd3 ||
		sq_retryHandler_updateRetryCntQ_D_OUT[2:0] == 3'd4) &&
	       sq_retryHandler_retryCntReg == 3'd0 ;
  assign IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d1501 =
	     value__h99939[23] == value__h99966[23] ;
  assign IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d4097 =
	     value__h99966 < respPktPipe_metaDataQ_D_OUT[554:531] ;
  assign IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d4105 =
	     IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d4097 &&
	     value__h99966[23] == respPktPipe_metaDataQ_D_OUT[554] ||
	     respPktPipe_metaDataQ_first__626_BITS_554_TO_5_ETC___d4098 &&
	     respPktPipe_metaDataQ_D_OUT[554] == cntrl_npsnReg[23] ;
  assign IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d4108 =
	     value__h99939 < respPktPipe_metaDataQ_D_OUT[554:531] ;
  assign IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d4115 =
	     IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0__ETC___d4108 &&
	     value__h99939[23] == respPktPipe_metaDataQ_D_OUT[554] ||
	     respPktPipe_metaDataQ_first__626_BITS_554_TO_5_ETC___d4109 &&
	     respPktPipe_metaDataQ_D_OUT[554] == value__h99966[23] ;
  assign IF_cntrl_npsnReg_41_BIT_23_518_EQ_IF_IF_sq_req_ETC___d2534 =
	     (cntrl_npsnReg[23] == nextPktSeqNum__h56056[23]) ?
	       NOT_cntrl_npsnReg_41_ULT_IF_IF_sq_reqGenSQ_wor_ETC___d2522 ||
	       NOT_IF_IF_sq_reqGenSQ_workReqPsnQ_first__498_B_ETC___d2524 :
	       NOT_cntrl_npsnReg_41_ULT_IF_IF_sq_reqGenSQ_wor_ETC___d2533 ;
  assign IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_12_ELSE_16___d3346 =
	     (cntrl_sqTypeReg == 4'd2) ? 7'd12 : 7'd16 ;
  assign IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_IF_cntrl__ETC___d3311 =
	     (cntrl_sqTypeReg == 4'd2) ? a__h69887 : a__h69889 ;
  assign IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_IF_sq_req_ETC___d3316 =
	     (cntrl_sqTypeReg == 4'd2) ? a__h69891 : a__h69893 ;
  assign IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_IF_sq_req_ETC___d3349 =
	     (cntrl_sqTypeReg == 4'd2) ? b__h69892 : b__h69894 ;
  assign IF_cntrl_stateReg_EQ_3_AND_sq_pendingWorkReqPi_ETC___d1880 =
	     (cntrl_stateReg == 4'd3 &&
	      sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[606]) ?
	       !sq_pendingWorkReqBuf_emptyReg :
	       cntrl_stateReg == 4'd4 ;
  assign IF_cntrl_stateReg_EQ_3_AND_sq_pendingWorkReqPi_ETC___d2074 =
	     (cntrl_stateReg == 4'd3 &&
	      sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[606]) ?
	       sq_pendingWorkReqBuf_emptyReg :
	       cntrl_stateReg != 4'd4 ;
  assign IF_sq_pendingWorkReqBuf_pushReg_port1__read__7_ETC___d702 =
	     (sq_pendingWorkReqBuf_pushReg_port1__read[679] &&
	      !sq_pendingWorkReqBuf_popReg_port1__read) ?
	       sq_pendingWorkReqBuf_itemCnt_Q_OUT[1:0] == 2'd3 :
	       sq_pendingWorkReqBuf_fullReg ;
  assign IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1734 =
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg ?
	       !sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg[0] :
	       !sq_reqGenSQ_reqHeaderOutQ_D_OUT[0] ;
  assign IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1737 =
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg ?
	       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg[9:8] :
	       sq_reqGenSQ_reqHeaderOutQ_D_OUT[9:8] ;
  assign IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1742 =
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg ?
	       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg[0] :
	       sq_reqGenSQ_reqHeaderOutQ_D_OUT[0] ;
  assign IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1745 =
	     (IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1734 &&
	      IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1737 !=
	      2'd1 ||
	      sq_reqGenSQ_reqHeaderOutQ_EMPTY_N) &&
	     (IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1742 ||
	      sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_FULL_N) ;
  assign IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1770 =
	     { remainingHeaderLen__h47316,
	       remainingHeaderFragNum__h47317,
	       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg ?
		 sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg[7:0] :
		 sq_reqGenSQ_reqHeaderOutQ_D_OUT[7:0] } ;
  assign IF_sq_reqGenSQ_reqHeaderGenQ_first__570_BIT_24_ETC___d3578 =
	     sq_reqGenSQ_reqHeaderGenQ_D_OUT[24] ?
	       sq_reqGenSQ_workCompGenReqOutQ_FULL_N :
	       sq_reqGenSQ_reqHeaderOutQ_FULL_N &&
	       sq_reqGenSQ_psnReqOutQ_FULL_N ;
  assign IF_sq_reqGenSQ_reqHeaderGenQ_first__570_BIT_26_ETC___d3579 =
	     sq_reqGenSQ_reqHeaderGenQ_D_OUT[26] ?
	       IF_sq_reqGenSQ_reqHeaderGenQ_first__570_BIT_24_ETC___d3578 :
	       sq_reqGenSQ_reqHeaderOutQ_FULL_N &&
	       sq_reqGenSQ_psnReqOutQ_FULL_N ;
  assign IF_sq_reqGenSQ_reqHeaderGenQ_first__570_BIT_62_ETC___d3580 =
	     sq_reqGenSQ_reqHeaderGenQ_D_OUT[620] ?
	       IF_sq_reqGenSQ_reqHeaderGenQ_first__570_BIT_26_ETC___d3579 :
	       sq_reqGenSQ_workCompGenReqOutQ_FULL_N ;
  assign IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2724 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] ?
	       NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 :
	       NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 ;
  assign IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2730 =
	     (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd2) ?
	       cntrl_sqTypeReg != 4'd4 ||
	       cntrl_stateReg != 4'd0 && cntrl_stateReg != 4'd7 :
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd3 ||
	       cntrl_sqTypeReg != 4'd4 ||
	       cntrl_stateReg != 4'd0 && cntrl_stateReg != 4'd7 ;
  assign IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2734 =
	     IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2724 ||
	     !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] ||
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd0 ||
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd1 ||
	     IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2730 ;
  assign IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3420 =
	     { sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] ?
		 (cntrl_sqTypeReg == 4'd2 || cntrl_sqTypeReg == 4'd3 ||
		  cntrl_sqTypeReg == 4'd9 ||
		  cntrl_sqTypeReg == 4'd4 &&
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[142]) &&
		 CASE_sq_reqGenSQ_reqHeaderPrepareQD_OUT_BITS__ETC__q18 :
		 CASE_sq_reqGenSQ_reqHeaderPrepareQD_OUT_BITS__ETC__q19,
	       x__h74169,
	       x__h81436,
	       !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] ||
	       (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd0 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd1 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd2 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd3 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd9) &&
	       (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[516:515] != 2'd0 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[514:513] != 2'd0 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[512:511] != 2'd0 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[510:509] != 2'd0 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[508:507] != 2'd0 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[506:505] != 2'd0 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[504:503] != 2'd0 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[502:501] != 2'd0 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[500:499] != 2'd0 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[498:497] != 2'd0 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[496:495] != 2'd0 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[494:493] != 2'd0 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[492:491] != 2'd0 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[490:489] != 2'd0 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[488:487] != 2'd0 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[486:485] != 2'd0) &&
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd4 &&
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd5 &&
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd6 } ;
  assign IF_sq_reqGenSQ_workCompGenReqOutQ_notEmpty__69_ETC___d5707 =
	     sq_reqGenSQ_workCompGenReqOutQ_EMPTY_N ?
	       sq_reqGenSQ_workCompGenReqOutQ_EMPTY_N &&
	       sq_workCompGenSQ_pendingWorkCompQ4SQ_FULL_N :
	       !sq_respHandleSQ_workCompGenReqOutQ_EMPTY_N ||
	       sq_workCompGenSQ_pendingWorkCompQ4SQ_FULL_N ;
  assign IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4844 =
	     IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4824 ||
	     CASE_sq_respHandleSQ_preRdmaOpCodeReg_13_NOT_s_ETC__q14 ;
  assign IF_sq_respHandleSQ_pendingRetryCheckQ_first__9_ETC___d5037 =
	     IF_sq_respHandleSQ_pendingRetryCheckQ_first__9_ETC___d4989 &&
	     CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q17 ||
	     sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd9 &&
	     sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd10 ||
	     sq_retryHandler_retryRespQ_EMPTY_N ;
  assign IF_sq_retryHandler_resetTimeOutQ_notEmpty__176_ETC___d1197 =
	     (sq_retryHandler_resetTimeOutQ_EMPTY_N ||
	      sq_retryHandler_retryCntrlStateReg != 2'd0) ?
	       cntrl_stateReg != 4'd0 && cntrl_stateReg != 4'd7 :
	       sq_retryHandler_disableTimeOutReg ||
	       sq_pendingWorkReqBuf_emptyReg ||
	       !sq_retryHandler_isTimeOutCntHighPartZeroReg ||
	       !sq_retryHandler_isTimeOutCntLowPartZeroReg ||
	       cntrl_stateReg != 4'd0 && cntrl_stateReg != 4'd7 &&
	       sq_retryHandler_timeOutTriggerQ_FULL_N ;
  assign IF_sq_retryHandler_retryRespQ_first__023_THEN__ETC___d5182 =
	     sq_retryHandler_retryRespQ_D_OUT ?
	       2'd1 :
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[2:1] ;
  assign IF_sq_retryHandler_updateRetryCntQ_first__309__ETC___d1340 =
	     (sq_retryHandler_updateRetryCntQ_D_OUT[2:0] == 3'd2 ||
	      sq_retryHandler_updateRetryCntQ_D_OUT[2:0] == 3'd3 ||
	      sq_retryHandler_updateRetryCntQ_D_OUT[2:0] == 3'd4) &&
	     !sq_retryHandler_disableRetryCntReg &&
	     sq_retryHandler_retryCntReg != 3'd0 ||
	     !sq_retryHandler_updateRetryCntQ_D_OUT[3] ;
  assign IF_sq_workCompGenSQ_genWorkCompQ_first__802_BI_ETC___d5808 =
	     sq_workCompGenSQ_genWorkCompQ_D_OUT[1] ?
	       !sq_workCompGenSQ_genWorkCompQ_D_OUT[0] ||
	       sq_workCompGenSQ_workCompOutQ4SQ_FULL_N :
	       sq_workCompGenSQ_workCompOutQ4SQ_FULL_N ;
  assign NOT_IF_IF_sq_reqGenSQ_workReqPsnQ_first__498_B_ETC___d2524 =
	     endPktSeqNum__h56057 >= nextPktSeqNum__h56056 ;
  assign NOT_IF_IF_sq_reqGenSQ_workReqPsnQ_first__498_B_ETC___d2536 =
	     x__h56104 != nextPktSeqNum__h56056 ||
	     endPktSeqNum__h56057 != cntrl_npsnReg &&
	     IF_cntrl_npsnReg_41_BIT_23_518_EQ_IF_IF_sq_req_ETC___d2534 ;
  assign NOT_IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVe_ETC___d1503 =
	     value__h99939 >= v__h37423 ;
  assign NOT_IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVe_ETC___d1514 =
	     (NOT_IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVe_ETC___d1503 ||
	      value__h99939[23] != v__h37423[23]) &&
	     (NOT_IF_sq_retryHandler_retryReasonReg_431_EQ_4_ETC___d1505 ||
	      v__h37423[23] != value__h99966[23]) ;
  assign NOT_IF_sq_retryHandler_retryReasonReg_431_EQ_4_ETC___d1505 =
	     v__h37423 >= value__h99966 ;
  assign NOT_IF_sq_retryHandler_retryReasonReg_431_EQ_4_ETC___d1516 =
	     v__h37423 != value__h99939 && v__h37423 != value__h99966 &&
	     IF_IF_SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_ETC___d1515 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1474 ||
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1492 ||
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1649 ||
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1652 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3783 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3794 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3806 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3822 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3836 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3851 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3867 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3861 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3870 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3867 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3884 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3861 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3878 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3887 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3884 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3902 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3861 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3878 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3896 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3905 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3902 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3921 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3861 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3878 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3896 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3915 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3927 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3921 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3941 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3861 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3878 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3896 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3915 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3935 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3947 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 &&
	     NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3941 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3956 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3861 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3878 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3896 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3915 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3935 ;
  assign NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3962 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 &&
	     NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3956 ;
  assign NOT_cntrl_npsnReg_41_ULT_IF_IF_sq_reqGenSQ_wor_ETC___d2522 =
	     cntrl_npsnReg >= endPktSeqNum__h56057 ;
  assign NOT_cntrl_npsnReg_41_ULT_IF_IF_sq_reqGenSQ_wor_ETC___d2533 =
	     (NOT_cntrl_npsnReg_41_ULT_IF_IF_sq_reqGenSQ_wor_ETC___d2522 ||
	      cntrl_npsnReg[23] != endPktSeqNum__h56057[23]) &&
	     (NOT_IF_IF_sq_reqGenSQ_workReqPsnQ_first__498_B_ETC___d2524 ||
	      endPktSeqNum__h56057[23] != nextPktSeqNum__h56056[23]) ;
  assign NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd0 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd1 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd2 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd3 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd9 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd4 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd5 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd6 ||
	     cntrl_sqTypeReg != 4'd2 && cntrl_sqTypeReg != 4'd3 &&
	     cntrl_sqTypeReg != 4'd9 &&
	     (cntrl_sqTypeReg != 4'd4 ||
	      !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[142]) ||
	     IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2711 ;
  assign NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd0 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd1 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd2 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd3 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd9 ||
	     cntrl_sqTypeReg != 4'd2 && cntrl_sqTypeReg != 4'd3 &&
	     cntrl_sqTypeReg != 4'd9 &&
	     (cntrl_sqTypeReg != 4'd4 ||
	      !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[142]) ||
	     IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2722 ;
  assign NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2742 =
	     cntrl_sqTypeReg != 4'd2 && cntrl_sqTypeReg != 4'd3 &&
	     cntrl_sqTypeReg != 4'd9 &&
	     (cntrl_sqTypeReg != 4'd4 ||
	      !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[142]) ||
	     IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2711 ;
  assign NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2882 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd0 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd1 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd2 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd3 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd9 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd4 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd5 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd6 ||
	     cntrl_sqTypeReg != 4'd2 && cntrl_sqTypeReg != 4'd3 &&
	     cntrl_sqTypeReg != 4'd9 &&
	     cntrl_sqTypeReg != 4'd4 ||
	     IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2711 ;
  assign NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2889 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd0 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd1 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd2 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd3 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd9 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd4 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd5 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd6 ||
	     cntrl_sqTypeReg != 4'd2 && cntrl_sqTypeReg != 4'd3 &&
	     cntrl_sqTypeReg != 4'd9 ||
	     IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2711 ;
  assign NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2902 =
	     cntrl_sqTypeReg != 4'd2 && cntrl_sqTypeReg != 4'd3 &&
	     cntrl_sqTypeReg != 4'd9 &&
	     (cntrl_sqTypeReg != 4'd4 ||
	      !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[142]) ||
	     IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2722 ;
  assign NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2973 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd0 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd1 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd2 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd3 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd9 ||
	     cntrl_sqTypeReg != 4'd2 && cntrl_sqTypeReg != 4'd3 &&
	     cntrl_sqTypeReg != 4'd9 &&
	     cntrl_sqTypeReg != 4'd4 ||
	     IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2722 ;
  assign NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2978 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd0 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd1 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd2 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd3 &&
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd9 ||
	     cntrl_sqTypeReg != 4'd2 && cntrl_sqTypeReg != 4'd3 &&
	     cntrl_sqTypeReg != 4'd9 ||
	     IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2722 ;
  assign NOT_dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_77__ETC___d376 =
	     !dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[13] &&
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[12:11] == 2'd0 &&
	     !dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[10] &&
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[9:8] == 2'd0 &&
	     !dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[7] &&
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[6:5] == 2'd0 &&
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[4:3] == 2'd0 &&
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[2:1] == 2'd0 ;
  assign NOT_sq_newPendingWorkReqPiptOut_pendingNewWork_ETC___d1707 =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg > 8'd4 ;
  assign NOT_sq_pendingWorkReqPipeOut_pipeMuxOutQ_first_ETC___d1919 =
	     sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[381:358] !=
	     cntrl_sqpnReg ;
  assign NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686] !=
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[58:35] ;
  assign NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 =
	     sq_respHandleSQ_preStageWorkReqAckTypeReg != 4'd8 &&
	     !sq_respHandleSQ_recvRetryRespReg &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ;
  assign NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4479 =
	     NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	     !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd0 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd1 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd2 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd3 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd4 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd5 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd6 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd7 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd8 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd9 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd10 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd11 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd12 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd13 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd14 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd15 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd16 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd17 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd18 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd19 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd20 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd21 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[131:127] != 5'd22 ;
  assign NOT_sq_respHandleSQ_retryFlushReg_616_617_OR_s_ETC___d4756 =
	     (!sq_respHandleSQ_retryFlushReg ||
	      sq_respHandleSQ_errOccurredReg ||
	      sq_respHandleSQ_recvErrRespReg) &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd0 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd3 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd1 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd4 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd2 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd5 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd6 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd7 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd8 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd11 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd9 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd10 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd12 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd13 ;
  assign NOT_sq_retryHandler_resetTimeOutQ_notEmpty__17_ETC___d1219 =
	     !sq_retryHandler_resetTimeOutQ_EMPTY_N &&
	     sq_retryHandler_retryCntrlStateReg == 2'd0 &&
	     !sq_retryHandler_disableTimeOutReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     sq_retryHandler_isTimeOutCntHighPartZeroReg &&
	     sq_retryHandler_isTimeOutCntLowPartZeroReg ;
  assign NOT_sq_retryHandler_retryReasonReg_431_EQ_4_46_ETC___d1656 =
	     { sq_retryHandler_retryReasonReg != 3'd4 ||
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1474,
	       (sq_retryHandler_retryReasonReg == 3'd4) ?
		 value__h99939 :
		 sq_retryHandler_retryStartPsnReg,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1492,
	       value__h99966,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1649,
	       SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d1650,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1652,
	       SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1653 } ;
  assign _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577 =
	     (32'd1 << lastFragValidByteNumWithPadding__h13828) - 32'd1 ;
  assign _1_SL_sq_reqGenSQ_pendingReqHeaderQ_first__424__ETC___d3443 =
	     (64'd1 << sq_reqGenSQ_pendingReqHeaderQ_D_OUT[31:25]) - 64'd1 ;
  assign __duses1049 =
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd13 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd12 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd11 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd10 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd9 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd8 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd7 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd6 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd5 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd4 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd3 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd2 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd1 &&
	     sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd0 ;
  assign __duses1054 =
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd13 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd12 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd11 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd10 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd9 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd8 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd7 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd6 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd5 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd4 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd3 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd2 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd1 &&
	     sq_respHandleSQ_retryFlushReg &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd0 ;
  assign __duses727 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ;
  assign __duses732 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ;
  assign __duses737 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ;
  assign __duses742 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ;
  assign __duses747 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ;
  assign __duses752 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ;
  assign __duses753 =
	     __duses752 || __duses747 || __duses742 || __duses737 ||
	     __duses732 ||
	     __duses727 ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	     sq_respHandleSQ_preStageReqPktInfoReg[5] &&
	     sq_respHandleSQ_preStageRespTypeReg == 2'd0 ;
  assign __duses757 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ;
  assign __duses762 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ;
  assign __duses767 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3861 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ;
  assign __duses772 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3861 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3878 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ;
  assign __duses777 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3878 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3861 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3896 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ;
  assign __duses782 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3896 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3878 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3861 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3915 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ;
  assign __duses783 =
	     __duses782 || __duses777 || __duses772 || __duses767 ||
	     __duses762 ||
	     __duses757 ||
	     __duses753 ;
  assign __duses787 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3915 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3896 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3878 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3861 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3935 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ;
  assign __duses792 =
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3935 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3915 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3896 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3878 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3861 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 ;
  assign __duses795 =
	     sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	     __duses792 ||
	     __duses787 ||
	     __duses783 ;
  assign __duses806 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !enumBits__h93928[0] ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	     __duses795 ;
  assign __duses810 =
	     enumBits__h93928[1] &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ||
	     __duses806 ;
  assign __duses815 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !enumBits__h93928[1] ||
	     __duses810 ;
  assign __duses819 =
	     enumBits__h93928[2] &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ||
	     __duses815 ;
  assign __duses824 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !enumBits__h93928[2] ||
	     __duses819 ;
  assign __duses828 =
	     enumBits__h93928[3] &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ||
	     __duses824 ;
  assign __duses833 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !enumBits__h93928[3] ||
	     __duses828 ;
  assign __duses837 =
	     enumBits__h93928[4] &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ||
	     __duses833 ;
  assign __duses842 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !enumBits__h93928[4] ||
	     __duses837 ;
  assign __duses847 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     enumBits__h93928 == 5'd0 ||
	     __duses842 ;
  assign __duses852 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     enumBits__h93928 != 5'd0 ||
	     __duses847 ;
  assign __duses863 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3994 ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	     __duses852 ;
  assign __duses874 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4003 ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	     __duses863 ;
  assign __duses885 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4012 ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	     __duses874 ;
  assign __duses896 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4021 ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	     __duses885 ;
  assign __duses907 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4030 ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	     __duses896 ;
  assign __duses918 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4039 ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	     __duses907 ;
  assign __duses929 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4048 ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	     __duses918 ;
  assign __duses940 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4057 ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	     __duses929 ;
  assign __duses953 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1473 ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	     __duses940 ;
  assign __duses964 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1491 ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	     __duses953 ;
  assign __duses975 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1649 ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	     __duses964 ;
  assign __duses986 =
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074 ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	     __duses975 ;
  assign __duses988 =
	     SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ||
	     __duses986 ;
  assign __duses991 =
	     !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074 &&
	     SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4083 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) ;
  assign __duses996 =
	     !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4083 &&
	     (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	      sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2) &&
	     !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074 ;
  assign __duses999 =
	     sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	     sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	     sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	     __duses996 ||
	     __duses991 ||
	     __duses988 ;
  assign _theResult___snd__h61670 =
	     sq_reqGenSQ_reqCountQ_D_OUT[5] ?
	       25'd0 :
	       remainingPktNum___1__h61681 ;
  assign a__h52253 =
	     { 1'd0, sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:486] } ;
  assign a__h52263 =
	     { 2'd0, sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:487] } ;
  assign a__h52273 =
	     { 3'd0, sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:488] } ;
  assign a__h52283 =
	     { 4'd0, sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:489] } ;
  assign a__h52293 =
	     { 5'd0, sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:490] } ;
  assign a__h63239 =
	     { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
	       IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
	       1'd0,
	       bth_padCnt__h63283,
	       4'd0,
	       cntrl_pkeyReg,
	       8'd0,
	       x__h63485,
	       cntrl_sqSigAllReg ||
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] &&
	       (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
	       7'd0,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[612:485],
	       288'd0 } ;
  assign a__h63241 =
	     { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
	       IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
	       1'd0,
	       bth_padCnt__h63283,
	       4'd0,
	       cntrl_pkeyReg,
	       8'd0,
	       x__h63485,
	       cntrl_sqSigAllReg ||
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] &&
	       (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
	       7'd0,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
	       8'd0,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[166:143],
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[612:485],
	       256'd0 } ;
  assign a__h63243 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] ?
	       { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
		 IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
		 1'd0,
		 bth_padCnt__h63283,
		 4'd0,
		 cntrl_pkeyReg,
		 8'd0,
		 x__h63485,
		 cntrl_sqSigAllReg ||
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] &&
		 (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
		 7'd0,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[612:485],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[232:201],
		 256'd0 } :
	       a__h63239 ;
  assign a__h63245 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] ?
	       { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
		 IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
		 1'd0,
		 bth_padCnt__h63283,
		 4'd0,
		 cntrl_pkeyReg,
		 8'd0,
		 x__h63485,
		 cntrl_sqSigAllReg ||
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] &&
		 (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
		 7'd0,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
		 8'd0,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[166:143],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[612:485],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[232:201],
		 224'd0 } :
	       a__h63241 ;
  assign a__h63247 =
	     { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
	       IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
	       1'd0,
	       bth_padCnt__h63283,
	       4'd0,
	       cntrl_pkeyReg,
	       8'd0,
	       x__h63485,
	       cntrl_sqSigAllReg ||
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] &&
	       (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
	       7'd0,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
	       416'd0 } ;
  assign a__h63249 =
	     { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
	       IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
	       1'd0,
	       bth_padCnt__h63283,
	       4'd0,
	       cntrl_pkeyReg,
	       8'd0,
	       x__h63485,
	       cntrl_sqSigAllReg ||
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] &&
	       (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
	       7'd0,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[116:85],
	       8'd0,
	       cntrl_sqpnReg,
	       352'd0 } ;
  assign a__h63251 =
	     { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
	       IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
	       1'd0,
	       bth_padCnt__h63283,
	       4'd0,
	       cntrl_pkeyReg,
	       8'd0,
	       x__h63485,
	       cntrl_sqSigAllReg ||
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] &&
	       (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
	       7'd0,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
	       8'd0,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[166:143],
	       384'd0 } ;
  assign a__h63253 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] ?
	       { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
		 IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
		 1'd0,
		 bth_padCnt__h63283,
		 4'd0,
		 cntrl_pkeyReg,
		 8'd0,
		 x__h63485,
		 cntrl_sqSigAllReg ||
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] &&
		 (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
		 7'd0,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[232:201],
		 384'd0 } :
	       a__h63247 ;
  assign a__h63255 =
	     { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
	       IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
	       1'd0,
	       bth_padCnt__h63283,
	       4'd0,
	       cntrl_pkeyReg,
	       8'd0,
	       x__h63485,
	       cntrl_sqSigAllReg ||
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] &&
	       (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
	       7'd0,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[116:85],
	       8'd0,
	       cntrl_sqpnReg,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[232:201],
	       320'd0 } ;
  assign a__h63257 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] ?
	       { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
		 IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
		 1'd0,
		 bth_padCnt__h63283,
		 4'd0,
		 cntrl_pkeyReg,
		 8'd0,
		 x__h63485,
		 cntrl_sqSigAllReg ||
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] &&
		 (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
		 7'd0,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
		 8'd0,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[166:143],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[232:201],
		 352'd0 } :
	       a__h63251 ;
  assign a__h63259 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] ?
	       { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
		 IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
		 1'd0,
		 bth_padCnt__h63283,
		 4'd0,
		 cntrl_pkeyReg,
		 8'd0,
		 x__h63485,
		 cntrl_sqSigAllReg ||
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] &&
		 (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
		 7'd0,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[199:168],
		 384'd0 } :
	       a__h63247 ;
  assign a__h63261 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] ?
	       { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
		 IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
		 1'd0,
		 bth_padCnt__h63283,
		 4'd0,
		 cntrl_pkeyReg,
		 8'd0,
		 x__h63485,
		 cntrl_sqSigAllReg ||
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] &&
		 (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
		 7'd0,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
		 8'd0,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[166:143],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[199:168],
		 352'd0 } :
	       a__h63251 ;
  assign a__h63269 =
	     { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
	       IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
	       1'd0,
	       bth_padCnt__h63283,
	       4'd0,
	       cntrl_pkeyReg,
	       8'd0,
	       x__h63485,
	       cntrl_sqSigAllReg ||
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] &&
	       (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
	       7'd0,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[612:517],
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[297:234],
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[362:299],
	       192'd0 } ;
  assign a__h63272 =
	     { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
	       IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
	       1'd0,
	       bth_padCnt__h63283,
	       4'd0,
	       cntrl_pkeyReg,
	       8'd0,
	       x__h63485,
	       cntrl_sqSigAllReg ||
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] &&
	       (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
	       7'd0,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
	       8'd0,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[166:143],
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[612:517],
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[297:234],
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[362:299],
	       160'd0 } ;
  assign a__h69887 =
	     { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
	       IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3300,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
	       1'd0,
	       bth_padCnt__h69915,
	       4'd0,
	       cntrl_pkeyReg,
	       8'd0,
	       x__h63485,
	       cntrl_sqSigAllReg ||
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	       (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
	       7'd0,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
	       416'd0 } ;
  assign a__h69889 =
	     { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
	       IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3300,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
	       1'd0,
	       bth_padCnt__h69915,
	       4'd0,
	       cntrl_pkeyReg,
	       8'd0,
	       x__h63485,
	       cntrl_sqSigAllReg ||
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	       (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
	       7'd0,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
	       8'd0,
	       sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[166:143],
	       384'd0 } ;
  assign a__h69891 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] ?
	       { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
		 IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3300,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
		 1'd0,
		 bth_padCnt__h69915,
		 4'd0,
		 cntrl_pkeyReg,
		 8'd0,
		 x__h63485,
		 cntrl_sqSigAllReg ||
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
		 (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
		 7'd0,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[232:201],
		 384'd0 } :
	       a__h69887 ;
  assign a__h69893 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] ?
	       { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
		 IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3300,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
		 1'd0,
		 bth_padCnt__h69915,
		 4'd0,
		 cntrl_pkeyReg,
		 8'd0,
		 x__h63485,
		 cntrl_sqSigAllReg ||
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
		 (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
		 7'd0,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
		 8'd0,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[166:143],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[232:201],
		 352'd0 } :
	       a__h69889 ;
  assign a__h69903 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] ?
	       { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
		 IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3300,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
		 1'd0,
		 bth_padCnt__h69915,
		 4'd0,
		 cntrl_pkeyReg,
		 8'd0,
		 x__h63485,
		 cntrl_sqSigAllReg ||
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
		 (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
		 7'd0,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[199:168],
		 384'd0 } :
	       a__h69887 ;
  assign a__h69905 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] ?
	       { IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208,
		 IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3300,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364],
		 1'd0,
		 bth_padCnt__h69915,
		 4'd0,
		 cntrl_pkeyReg,
		 8'd0,
		 x__h63485,
		 cntrl_sqSigAllReg ||
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
		 (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614] ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6),
		 7'd0,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
		 8'd0,
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[166:143],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[199:168],
		 352'd0 } :
	       a__h69889 ;
  assign a__h9345 = { 1'd0, dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[34:11] } ;
  assign a__h9355 = { 2'd0, dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[34:12] } ;
  assign a__h9365 = { 3'd0, dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[34:13] } ;
  assign a__h9375 = { 4'd0, dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[34:14] } ;
  assign a__h9385 = { 5'd0, dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[34:15] } ;
  assign addrChunkResp_chunkLen__h10586 =
	     (dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_77_BITS_ETC___d366 &&
	      NOT_dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_77__ETC___d376 &&
	      !dmaReadCntrl4SQ_addrChunkSrv_isZeroResidueReg) ?
	       { 1'd0, dmaReadCntrl4SQ_addrChunkSrv_residueReg } :
	       dmaReadCntrl4SQ_addrChunkSrv_fullPktLenReg ;
  assign b__h52254 =
	     { 4'd0, sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[485:478] } ;
  assign b__h52264 =
	     { 3'd0, sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[486:478] } ;
  assign b__h52274 =
	     { 2'd0, sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[487:478] } ;
  assign b__h52284 =
	     { 1'd0, sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[488:478] } ;
  assign b__h63244 = sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] ? 7'd32 : 7'd28 ;
  assign b__h63246 = sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] ? 7'd36 : 7'd32 ;
  assign b__h63254 = sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] ? 7'd16 : 7'd12 ;
  assign b__h63258 = sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] ? 7'd20 : 7'd16 ;
  assign b__h69892 = sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] ? 7'd16 : 7'd12 ;
  assign b__h69894 = sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] ? 7'd20 : 7'd16 ;
  assign b__h9346 = { 4'd0, dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[10:3] } ;
  assign b__h9356 = { 3'd0, dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[11:3] } ;
  assign b__h9366 = { 2'd0, dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[12:3] } ;
  assign b__h9376 = { 1'd0, dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[13:3] } ;
  assign bits__h49179 =
	     { payloadGenerator4SQ_bramQ2PipeOut_postBramQ_fi_ETC___d1852[31],
	       payloadGenerator4SQ_bramQ2PipeOut_postBramQ_fi_ETC___d1852[0] } ;
  assign bth_padCnt__h63283 =
	     (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] &&
	      sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd4 &&
	      sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd5 &&
	      sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd6) ?
	       padCnt__h63476 :
	       2'd0 ;
  assign bth_padCnt__h69915 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] ? padCnt__h63476 : 2'd0 ;
  assign cntrl_stateReg_EQ_3_AND_NOT_sq_respHandleSQ_re_ETC___d5647 =
	     cntrl_stateReg == 4'd3 && !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_preSta_ETC___d3624 =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd0 &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_preSta_ETC___d4329 =
	     cntrl_stateReg == 4'd3 &&
	     sq_respHandleSQ_preStageStateReg == 2'd2 &&
	     !sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_recvEr_ETC___d5683 =
	     (cntrl_stateReg == 4'd3 &&
	      (sq_respHandleSQ_recvErrRespReg ||
	       sq_respHandleSQ_errOccurredReg) ||
	      cntrl_stateReg == 4'd6) &&
	     sq_pendingWorkReqBuf_emptyReg ;
  assign cntrl_stateReg_EQ_3_AND_sq_respHandleSQ_retryF_ETC___d5690 =
	     cntrl_stateReg == 4'd3 && sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg ;
  assign curPSN__h61636 =
	     sq_reqGenSQ_isFirstOrOnlyReqPktReg ?
	       sq_reqGenSQ_reqCountQ_D_OUT[81:58] :
	       sq_reqGenSQ_curPsnReg ;
  assign dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_77_BITS_ETC___d366 =
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[24:23] == 2'd0 &&
	     !dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[22] &&
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[21:20] == 2'd0 &&
	     !dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[19] &&
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[18:17] == 2'd0 &&
	     !dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[16] &&
	     dmaReadCntrl4SQ_addrChunkSrv_pktNumReg[15:14] == 2'd0 ;
  assign dmaReadCntrl4SQ_respQ_i_notEmpty__42_AND_NOT_d_ETC___d657 =
	     dmaReadCntrl4SQ_respQ_EMPTY_N &&
	     (!dmaReadCntrl4SQ_respQ_D_OUT[0] ||
	      payloadGenerator4SQ_pendingGenReqQ_EMPTY_N) &&
	     (!dmaReadCntrl4SQ_respQ_D_OUT[2] &&
	      !dmaReadCntrl4SQ_respQ_D_OUT[292] ||
	      payloadGenerator4SQ_pendingGenReqQ_EMPTY_N &&
	      payloadGenerator4SQ_payloadGenRespQ_FULL_N) ;
  assign endPktSeqNum__h56057 =
	     sq_reqGenSQ_workReqPsnQ_D_OUT[5] ?
	       cntrl_npsnReg :
	       nextPktSeqNum__h56056 - 24'd1 ;
  assign headerLastFragInvalidByteNum__h47982 =
	     6'd32 -
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[7:2] ;
  assign headerLastFragValidBitNum__h47980 =
	     { sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[7:2],
	       3'd0 } ;
  assign lastFragValidByteNumWithPadding__h13828 =
	     lastFragValidByteNum__h13827 + { 4'd0, padCnt__h13826 } ;
  assign lastFragValidByteNum__h13827 =
	     (payloadGenerator4SQ_payloadGenReqQ_D_OUT[9:8] == 2'd0 &&
	      !payloadGenerator4SQ_payloadGenReqQ_D_OUT[7] &&
	      payloadGenerator4SQ_payloadGenReqQ_D_OUT[6:5] == 2'd0 &&
	      (payloadGenerator4SQ_payloadGenReqQ_D_OUT[36] ||
	       payloadGenerator4SQ_payloadGenReqQ_D_OUT[35:34] != 2'd0 ||
	       payloadGenerator4SQ_payloadGenReqQ_D_OUT[33] ||
	       payloadGenerator4SQ_payloadGenReqQ_D_OUT[32:31] != 2'd0 ||
	       payloadGenerator4SQ_payloadGenReqQ_D_OUT[30] ||
	       payloadGenerator4SQ_payloadGenReqQ_D_OUT[29:28] != 2'd0 ||
	       payloadGenerator4SQ_payloadGenReqQ_D_OUT[27:26] != 2'd0 ||
	       payloadGenerator4SQ_payloadGenReqQ_D_OUT[25:24] != 2'd0 ||
	       payloadGenerator4SQ_payloadGenReqQ_D_OUT[23] ||
	       payloadGenerator4SQ_payloadGenReqQ_D_OUT[22:21] != 2'd0 ||
	       payloadGenerator4SQ_payloadGenReqQ_D_OUT[20:19] != 2'd0 ||
	       payloadGenerator4SQ_payloadGenReqQ_D_OUT[18:17] != 2'd0 ||
	       payloadGenerator4SQ_payloadGenReqQ_D_OUT[16] ||
	       payloadGenerator4SQ_payloadGenReqQ_D_OUT[15:14] != 2'd0 ||
	       payloadGenerator4SQ_payloadGenReqQ_D_OUT[13:12] != 2'd0 ||
	       payloadGenerator4SQ_payloadGenReqQ_D_OUT[11:10] != 2'd0)) ?
	       6'd32 :
	       lastFragValidByteNum__h13849 ;
  assign lastFragValidByteNum__h13849 =
	     { 1'd0, payloadGenerator4SQ_payloadGenReqQ_D_OUT[9:5] } ;
  assign lastFragValidByteNum__h87658 =
	     { 1'd0, sq_reqGenSQ_pendingReqHeaderQ_D_OUT[29:25] } ;
  assign leftShiftByteEn__h49542 =
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg[33:2] <<
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidByteNumReg ;
  assign leftShiftData__h49541 =
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg[289:34] <<
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidBitNumReg ;
  assign leftShiftHeaderByteEn__h47319 = { x__h47528[31:0], 32'd0 } ;
  assign leftShiftHeaderData__h47318 = { x__h47525[255:0], 256'd0 } ;
  assign nextPktSeqNum__h56056 =
	     sq_reqGenSQ_workReqPsnQ_D_OUT[5] ?
	       startPlusOne__h56122 :
	       x__h56223[23:0] ;
  assign padCnt__h13826 =
	     2'd0 - payloadGenerator4SQ_payloadGenReqQ_D_OUT[6:5] ;
  assign padCnt__h63476 =
	     2'd0 - sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[486:485] ;
  assign payloadGenerator4SQ_bramQ2PipeOut_postBramQ_fi_ETC___d1852 =
	     payloadGenerator4SQ_bramQ2PipeOut_postBramQ_D_OUT[33:2] <<
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidByteNumReg ;
  assign payloadGenerator4SQ_payloadBufQ_rRdPtr_read__7_ETC___d487 =
	     payloadGenerator4SQ_payloadBufQ_rRdPtr ==
	     payloadGenerator4SQ_payloadBufQ_rWrPtr ;
  assign remainingHeaderFragNum__h47317 =
	     IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1737 -
	     2'd1 ;
  assign remainingHeaderLen__h47316 =
	     (sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg ?
		sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg[16:10] :
		sq_reqGenSQ_reqHeaderOutQ_D_OUT[16:10]) -
	     7'd32 ;
  assign remainingPktNum___1__h61681 =
	     sq_reqGenSQ_reqCountQ_D_OUT[31:7] - 25'd2 ;
  assign remainingPktNum___1__h61739 =
	     sq_reqGenSQ_remainingPktNumReg - 25'd1 ;
  assign respPktPipe_metaDataQ_first__626_BITS_554_TO_5_ETC___d4098 =
	     respPktPipe_metaDataQ_D_OUT[554:531] < cntrl_npsnReg ;
  assign respPktPipe_metaDataQ_first__626_BITS_554_TO_5_ETC___d4109 =
	     respPktPipe_metaDataQ_D_OUT[554:531] < value__h99966 ;
  assign rightShiftHeaderLastFragByteEn__h48758 =
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT[33:2] >>
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidByteNumReg ;
  assign rightShiftHeaderLastFragData__h48757 =
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT[289:34] >>
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidBitNumReg ;
  assign rnrTimer__h36783 =
	     (sq_retryHandler_retryRnrTimerReg <= cntrl_minRnrTimerReg) ?
	       cntrl_minRnrTimerReg :
	       sq_retryHandler_retryRnrTimerReg ;
  assign sq_pendingWorkReqBuf_deqPtrReg_90_EQ_sq_pendin_ETC___d1031 =
	     sq_pendingWorkReqBuf_deqPtrReg ==
	     sq_pendingWorkReqBuf_scanPtrReg + 2'd1 ;
  assign sq_reqGenSQ_pendingReqHeaderQ_first__424_BITS__ETC___d3563 =
	     { sq_reqGenSQ_pendingReqHeaderQ_D_OUT[31:25],
	       sq_reqGenSQ_pendingReqHeaderQ_D_OUT[31:30] +
	       { 1'd0, x__h87589 },
	       (sq_reqGenSQ_pendingReqHeaderQ_D_OUT[29:28] == 2'd0 &&
		!sq_reqGenSQ_pendingReqHeaderQ_D_OUT[27] &&
		sq_reqGenSQ_pendingReqHeaderQ_D_OUT[26:25] == 2'd0 &&
		sq_reqGenSQ_pendingReqHeaderQ_D_OUT[31:30] != 2'd0) ?
		 6'd32 :
		 lastFragValidByteNum__h87658,
	       sq_reqGenSQ_pendingReqHeaderQ_D_OUT[24],
	       1'd0 } ;
  assign sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAnd_ETC___d1747 =
	     (sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg ||
	      sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_FULL_N &&
	      sq_reqGenSQ_reqHeaderOutQ_EMPTY_N) &&
	     (sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg ||
	      sq_reqGenSQ_reqHeaderOutQ_EMPTY_N) &&
	     IF_sq_reqGenSQ_rdmaReqPipeOut_headerDataStream_ETC___d1745 ;
  assign sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAnd_ETC___d1808 =
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_EMPTY_N &&
	     (sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT[0] ?
		sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerHasPayloadReg ||
		sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_FULL_N :
		sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_dataStreamOutQ_FULL_N) ;
  assign sq_reqGenSQ_workReqCheckQ_i_notEmpty__561_AND__ETC___d2573 =
	     sq_reqGenSQ_workReqCheckQ_EMPTY_N &&
	     sq_reqGenSQ_workReqOutQ_FULL_N &&
	     (sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	      !sq_reqGenSQ_workReqCheckQ_D_OUT[5] ||
	      sq_reqGenSQ_reqCountQ_FULL_N) ;
  assign sq_reqGenSQ_workReqPsnQ_first__498_BIT_4_499_O_ETC___d2558 =
	     { sq_reqGenSQ_workReqPsnQ_D_OUT[4] ||
	       sq_reqGenSQ_workReqPsnQ_D_OUT[82],
	       sq_reqGenSQ_workReqPsnQ_D_OUT[4] ?
		 cntrl_npsnReg :
		 sq_reqGenSQ_workReqPsnQ_D_OUT[81:58],
	       sq_reqGenSQ_workReqPsnQ_D_OUT[4] ||
	       sq_reqGenSQ_workReqPsnQ_D_OUT[57],
	       sq_reqGenSQ_workReqPsnQ_D_OUT[4] ?
		 endPktSeqNum__h56057 :
		 sq_reqGenSQ_workReqPsnQ_D_OUT[56:33],
	       sq_reqGenSQ_workReqPsnQ_D_OUT[32:7],
	       sq_reqGenSQ_workReqPsnQ_D_OUT[4] ||
	       sq_reqGenSQ_workReqPsnQ_D_OUT[6],
	       sq_reqGenSQ_workReqPsnQ_D_OUT[4] ?
		 sq_reqGenSQ_workReqPsnQ_D_OUT[5] ||
		 sq_reqGenSQ_workReqPsnQ_D_OUT[619:616] == 4'd4 :
		 sq_reqGenSQ_workReqPsnQ_D_OUT[5] } ;
  assign sq_respHandleSQ_pendingRetryCheckQ_first__949__ETC___d5046 =
	     (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd9 &&
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd10 ||
	      sq_retryHandler_retryRespQ_EMPTY_N) &&
	     IF_sq_respHandleSQ_pendingRetryCheckQ_first__9_ETC___d5037 &&
	     (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd9 &&
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd10 ||
	      sq_retryHandler_retryRespQ_EMPTY_N) ;
  assign sq_respHandleSQ_pendingRetryCheckQ_first__949__ETC___d5187 =
	     { sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3],
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd0 ||
	       CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q21,
	       CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q23,
	       CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q24,
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[0] } ;
  assign sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4187 =
	     sq_respHandleSQ_preStagePktMetaDataReg[1] &&
	     (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	      4'b1000 ||
	      sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	      4'b1010) &&
	     sq_respHandleSQ_preStageRespTypeReg != 2'd1 &&
	     sq_respHandleSQ_preStageRespTypeReg != 2'd2 &&
	     sq_respHandleSQ_preStageRespTypeReg != 2'd0 ;
  assign sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4200 =
	     sq_respHandleSQ_preStagePktMetaDataReg[1] &&
	     (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	      4'b0010 ||
	      sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	      4'b0001) &&
	     sq_respHandleSQ_preStageRespTypeReg != 2'd1 &&
	     sq_respHandleSQ_preStageRespTypeReg != 2'd2 &&
	     sq_respHandleSQ_preStageRespTypeReg != 2'd0 ;
  assign sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4203 =
	     sq_respHandleSQ_preStagePktMetaDataReg[1] &&
	     CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q13 ;
  assign sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4208 =
	     sq_respHandleSQ_preStagePktMetaDataReg[1] &&
	     CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q10 ;
  assign sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4214 =
	     sq_respHandleSQ_preStagePktMetaDataReg[1] &&
	     CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q12 ;
  assign sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4220 =
	     sq_respHandleSQ_preStagePktMetaDataReg[1] &&
	     CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q11 ;
  assign sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4267 =
	     sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4203 &&
	     (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	      4'b1000 &&
	      sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	      4'b1010 ||
	      sq_respHandleSQ_preStageRespTypeReg != 2'd0) &&
	     (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	      4'b1000 &&
	      sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	      4'b1010 ||
	      sq_respHandleSQ_preStageRespTypeReg != 2'd1) &&
	     (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	      4'b1000 &&
	      sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	      4'b1010 ||
	      sq_respHandleSQ_preStageRespTypeReg != 2'd2) &&
	     (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	      4'b0010 &&
	      sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	      4'b0001 ||
	      sq_respHandleSQ_preStageRespTypeReg != 2'd0) &&
	     (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	      4'b0010 &&
	      sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	      4'b0001 ||
	      sq_respHandleSQ_preStageRespTypeReg != 2'd1) &&
	     (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	      4'b0010 &&
	      sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	      4'b0001 ||
	      sq_respHandleSQ_preStageRespTypeReg != 2'd2) &&
	     (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	      4'b0100 ||
	      sq_respHandleSQ_preStageRespAndWorkReqRelationReg[4]) &&
	     (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	      4'b0100 ||
	      !sq_respHandleSQ_preStageRespAndWorkReqRelationReg[4]) &&
	     (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	      4'b1000 ||
	      sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	      4'b1010 ||
	      sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	      4'b0100 ||
	      sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	      4'b0010 ||
	      sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	      4'b0001) ;
  assign sq_respHandleSQ_retryFlushReg_616_AND_NOT_sq_r_ETC___d4697 =
	     sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd11 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd9 ;
  assign sq_respHandleSQ_retryFlushReg_616_AND_NOT_sq_r_ETC___d4716 =
	     sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     (sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd0 ||
	      sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd3 ||
	      sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd10 &&
	      !sq_respHandleSQ_incomingRespQ_D_OUT[142]) ;
  assign sq_respHandleSQ_retryFlushReg_616_AND_NOT_sq_r_ETC___d4746 =
	     sq_respHandleSQ_retryFlushReg &&
	     !sq_respHandleSQ_errOccurredReg &&
	     !sq_respHandleSQ_recvErrRespReg &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd11 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd9 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd6 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd2 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd5 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd0 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd3 &&
	     (sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd10 ||
	      sq_respHandleSQ_incomingRespQ_D_OUT[142]) &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd8 &&
	     (sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd10 ||
	      !sq_respHandleSQ_incomingRespQ_D_OUT[142]) &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd12 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd13 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd1 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd4 &&
	     sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd7 ;
  assign sq_retryHandler_prepareRetryRespQ_i_notEmpty___ETC___d1411 =
	     sq_retryHandler_prepareRetryRespQ_EMPTY_N &&
	     ((sq_retryHandler_prepareRetryRespQ_D_OUT[2:0] == 3'd4) ?
		sq_retryHandler_timeOutNotificationQ_FULL_N :
		sq_retryHandler_retryRespQ_FULL_N) ;
  assign sq_retryHandler_resetReqQ_i_notEmpty__149_AND__ETC___d1155 =
	     sq_retryHandler_resetReqQ_EMPTY_N &&
	     (sq_retryHandler_resetReqQ_D_OUT ?
		sq_retryHandler_resetTimeOutQ_FULL_N &&
		sq_retryHandler_resetRetryCntQ_FULL_N :
		sq_retryHandler_resetTimeOutQ_FULL_N) ;
  assign sq_retryHandler_resetTimeOutQ_notEmpty__176_OR_ETC___d1209 =
	     sq_retryHandler_resetTimeOutQ_EMPTY_N ||
	     sq_retryHandler_retryCntrlStateReg != 2'd0 ||
	     !sq_retryHandler_disableTimeOutReg &&
	     !sq_pendingWorkReqBuf_emptyReg &&
	     sq_retryHandler_isTimeOutCntHighPartZeroReg &&
	     sq_retryHandler_isTimeOutCntLowPartZeroReg ;
  assign sq_retryHandler_updateRetryCntQ_i_notEmpty__30_ETC___d1313 =
	     sq_retryHandler_updateRetryCntQ_EMPTY_N &&
	     (sq_retryHandler_updateRetryCntQ_D_OUT[3] ?
		sq_retryHandler_prepareRetryRespQ_FULL_N :
		cntrl_stateReg != 4'd0 && cntrl_stateReg != 4'd7) ;
  assign sq_workCompGenSQ_dmaWaitingQ_i_notFull__721_AN_ETC___d5767 =
	     sq_workCompGenSQ_dmaWaitingQ_FULL_N &&
	     (sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10 ||
	      cntrl_stateReg != 4'd0 && cntrl_stateReg != 4'd7) &&
	     (sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[30:29] != 2'd0 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[561] ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd4 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd5 ||
	      sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] == 4'd6 ||
	      cntrl_stateReg != 4'd0 && cntrl_stateReg != 4'd7) ;
  assign startPlusOne__h56122 = cntrl_npsnReg + 24'd1 ;
  assign tmpByteEn__h49088 =
	     { sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg[33:2],
	       payloadGenerator4SQ_bramQ2PipeOut_postBramQ_D_OUT[33:2] } >>
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidByteNumReg ;
  assign tmpData__h49087 =
	     { sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg[289:34],
	       payloadGenerator4SQ_bramQ2PipeOut_postBramQ_D_OUT[289:34] } >>
	     sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidBitNumReg ;
  assign totalPktNum__h55209 =
	     sq_reqGenSQ_workReqPktNumQ_D_OUT[3] ?
	       sq_reqGenSQ_workReqPktNumQ_D_OUT[29:5] :
	       sq_reqGenSQ_workReqPktNumQ_D_OUT[29:5] + 25'd1 ;
  assign v__h37423 =
	     (sq_retryHandler_retryReasonReg == 3'd4) ?
	       value__h99939 :
	       sq_retryHandler_retryStartPsnReg ;
  assign x__h12662 = payloadGenerator4SQ_payloadBufQ_rWrPtr + 10'd1 ;
  assign x__h12913 = payloadGenerator4SQ_payloadBufQ_rRdPtr + 10'd1 ;
  assign x__h14424 =
	     { _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[0],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[1],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[2],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[3],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[4],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[5],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[6],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[7],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[8],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[9],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[10],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[11],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[12],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[13],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[14],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[15],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[16],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[17],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[18],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[19],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[20],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[21],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[22],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[23],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[24],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[25],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[26],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[27],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[28],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[29],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[30],
	       _1_SL_IF_payloadGenerator4SQ_payloadGenReqQ_fir_ETC___d577[31] } ;
  assign x__h16825 =
	     8'd1 << CASE_payloadGenerator4SQ_payloadGenReqQD_OUT__ETC__q1 ;
  assign x__h33715 = sq_retryHandler_timeOutCntReg - 42'd1 ;
  assign x__h35617 = sq_retryHandler_retryCntReg - 3'd1 ;
  assign x__h35647 = sq_retryHandler_rnrCntReg - 3'd1 ;
  assign x__h37628 = { 1'b1, v__h37423 } - { 1'b0, value__h99939 } ;
  assign x__h41815 =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg + 8'd1 ;
  assign x__h41903 =
	     sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg - 8'd1 ;
  assign x__h47525 =
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg ?
	       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg[592:81] :
	       sq_reqGenSQ_reqHeaderOutQ_D_OUT[592:81] ;
  assign x__h47528 =
	     sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg ?
	       sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg[80:17] :
	       sq_reqGenSQ_reqHeaderOutQ_D_OUT[80:17] ;
  assign x__h56104 = endPktSeqNum__h56057 + 24'd1 ;
  assign x__h56223 =
	     { 1'd0, cntrl_npsnReg } + sq_reqGenSQ_workReqPsnQ_D_OUT[31:7] ;
  assign x__h74169 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] ?
	       value__h63238 :
	       value__h69886 ;
  assign x__h81436 =
	     sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] ?
	       value__h68654 :
	       value__h72405 ;
  assign x__h87589 =
	     sq_reqGenSQ_pendingReqHeaderQ_D_OUT[29:28] != 2'd0 ||
	     sq_reqGenSQ_pendingReqHeaderQ_D_OUT[27] ||
	     sq_reqGenSQ_pendingReqHeaderQ_D_OUT[26:25] != 2'd0 ;
  assign x__read_byteEn__h12579 =
	     CAN_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding ?
	       payloadGenerator4SQ_payloadBufQ_wDataIn_wget[33:2] :
	       32'd0 ;
  assign x__read_data__h12578 =
	     CAN_FIRE_RL_payloadGenerator4SQ_lastFragAddPadding ?
	       payloadGenerator4SQ_payloadBufQ_wDataIn_wget[289:34] :
	       256'd0 ;
  assign y__h42773 = cntrl_pendingWorkReqNumReg - 8'd1 ;
  assign y_avValue_byteEn__h17055 =
	     payloadGenerator4SQ_pendingGenReqQ_D_OUT[43] ?
	       payloadGenerator4SQ_pendingGenReqQ_D_OUT[39:8] :
	       dmaReadCntrl4SQ_respQ_D_OUT[35:4] ;
  always@(cntrl_reqQ_D_OUT or cntrl_pendingReadAtomicReqNumReg)
  begin
    case (cntrl_reqQ_D_OUT[300:299])
      2'd0, 2'd1, 2'd2: x__h6243 = cntrl_reqQ_D_OUT[36:29];
      2'd3: x__h6243 = cntrl_pendingReadAtomicReqNumReg;
    endcase
  end
  always@(cntrl_reqQ_D_OUT or cntrl_npsnReg)
  begin
    case (cntrl_reqQ_D_OUT[300:299])
      2'd0, 2'd1, 2'd2: x__h6205 = cntrl_reqQ_D_OUT[149:126];
      2'd3: x__h6205 = cntrl_npsnReg;
    endcase
  end
  always@(payloadGenerator4SQ_payloadGenReqQ_D_OUT)
  begin
    case (payloadGenerator4SQ_payloadGenReqQ_D_OUT[2:0])
      3'd1: CASE_payloadGenerator4SQ_payloadGenReqQD_OUT__ETC__q1 = 32'd3;
      3'd2: CASE_payloadGenerator4SQ_payloadGenReqQD_OUT__ETC__q1 = 32'd4;
      3'd3: CASE_payloadGenerator4SQ_payloadGenReqQD_OUT__ETC__q1 = 32'd5;
      3'd4: CASE_payloadGenerator4SQ_payloadGenReqQD_OUT__ETC__q1 = 32'd6;
      default: CASE_payloadGenerator4SQ_payloadGenReqQD_OUT__ETC__q1 = 32'd7;
    endcase
  end
  always@(cntrl_sqTypeReg or
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT or cntrl_dqpnReg)
  begin
    case (cntrl_sqTypeReg)
      4'd2, 4'd3, 4'd9: x__h63485 = cntrl_dqpnReg;
      default: x__h63485 = sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[141:118];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0: value__h99740 = sq_pendingWorkReqBuf_dataVec_0[355:292];
      2'd1: value__h99740 = sq_pendingWorkReqBuf_dataVec_1[355:292];
      2'd2: value__h99740 = sq_pendingWorkReqBuf_dataVec_2[355:292];
      2'd3: value__h99740 = sq_pendingWorkReqBuf_dataVec_3[355:292];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0: enumBits__h93928 = sq_pendingWorkReqBuf_dataVec_0[610:606];
      2'd1: enumBits__h93928 = sq_pendingWorkReqBuf_dataVec_1[610:606];
      2'd2: enumBits__h93928 = sq_pendingWorkReqBuf_dataVec_2[610:606];
      2'd3: enumBits__h93928 = sq_pendingWorkReqBuf_dataVec_3[610:606];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0: value__h99767 = sq_pendingWorkReqBuf_dataVec_0[290:227];
      2'd1: value__h99767 = sq_pendingWorkReqBuf_dataVec_1[290:227];
      2'd2: value__h99767 = sq_pendingWorkReqBuf_dataVec_2[290:227];
      2'd3: value__h99767 = sq_pendingWorkReqBuf_dataVec_3[290:227];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0: value__h99797 = sq_pendingWorkReqBuf_dataVec_0[225:194];
      2'd1: value__h99797 = sq_pendingWorkReqBuf_dataVec_1[225:194];
      2'd2: value__h99797 = sq_pendingWorkReqBuf_dataVec_2[225:194];
      2'd3: value__h99797 = sq_pendingWorkReqBuf_dataVec_3[225:194];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0: value__h99854 = sq_pendingWorkReqBuf_dataVec_0[159:136];
      2'd1: value__h99854 = sq_pendingWorkReqBuf_dataVec_1[159:136];
      2'd2: value__h99854 = sq_pendingWorkReqBuf_dataVec_2[159:136];
      2'd3: value__h99854 = sq_pendingWorkReqBuf_dataVec_3[159:136];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0: value__h99824 = sq_pendingWorkReqBuf_dataVec_0[192:161];
      2'd1: value__h99824 = sq_pendingWorkReqBuf_dataVec_1[192:161];
      2'd2: value__h99824 = sq_pendingWorkReqBuf_dataVec_2[192:161];
      2'd3: value__h99824 = sq_pendingWorkReqBuf_dataVec_3[192:161];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0: value__h99881 = sq_pendingWorkReqBuf_dataVec_0[134:111];
      2'd1: value__h99881 = sq_pendingWorkReqBuf_dataVec_1[134:111];
      2'd2: value__h99881 = sq_pendingWorkReqBuf_dataVec_2[134:111];
      2'd3: value__h99881 = sq_pendingWorkReqBuf_dataVec_3[134:111];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0: value__h99908 = sq_pendingWorkReqBuf_dataVec_0[109:78];
      2'd1: value__h99908 = sq_pendingWorkReqBuf_dataVec_1[109:78];
      2'd2: value__h99908 = sq_pendingWorkReqBuf_dataVec_2[109:78];
      2'd3: value__h99908 = sq_pendingWorkReqBuf_dataVec_3[109:78];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0: value__h99939 = sq_pendingWorkReqBuf_dataVec_0[76:53];
      2'd1: value__h99939 = sq_pendingWorkReqBuf_dataVec_1[76:53];
      2'd2: value__h99939 = sq_pendingWorkReqBuf_dataVec_2[76:53];
      2'd3: value__h99939 = sq_pendingWorkReqBuf_dataVec_3[76:53];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0: value__h99966 = sq_pendingWorkReqBuf_dataVec_0[51:28];
      2'd1: value__h99966 = sq_pendingWorkReqBuf_dataVec_1[51:28];
      2'd2: value__h99966 = sq_pendingWorkReqBuf_dataVec_2[51:28];
      2'd3: value__h99966 = sq_pendingWorkReqBuf_dataVec_3[51:28];
    endcase
  end
  always@(dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT or
	  a__h9385 or a__h9345 or a__h9355 or a__h9365 or a__h9375)
  begin
    case (dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[2:0])
      3'd1: tmpPktNum__h9229 = a__h9345;
      3'd2: tmpPktNum__h9229 = a__h9355;
      3'd3: tmpPktNum__h9229 = a__h9365;
      3'd4: tmpPktNum__h9229 = a__h9375;
      default: tmpPktNum__h9229 = a__h9385;
    endcase
  end
  always@(cntrl_sqTypeReg)
  begin
    case (cntrl_sqTypeReg)
      4'd2, 4'd3: CASE_cntrl_sqTypeReg_2_28_3_28_32__q2 = 7'd28;
      default: CASE_cntrl_sqTypeReg_2_28_3_28_32__q2 = 7'd32;
    endcase
  end
  always@(cntrl_sqTypeReg or b__h63246 or b__h63244)
  begin
    case (cntrl_sqTypeReg)
      4'd2, 4'd3: CASE_cntrl_sqTypeReg_2_b3244_3_b3244_b3246__q3 = b__h63244;
      default: CASE_cntrl_sqTypeReg_2_b3244_3_b3244_b3246__q3 = b__h63246;
    endcase
  end
  always@(cntrl_sqTypeReg)
  begin
    case (cntrl_sqTypeReg)
      4'd2, 4'd3: CASE_cntrl_sqTypeReg_2_12_3_12_4_20_16__q4 = 7'd12;
      4'd4: CASE_cntrl_sqTypeReg_2_12_3_12_4_20_16__q4 = 7'd20;
      default: CASE_cntrl_sqTypeReg_2_12_3_12_4_20_16__q4 = 7'd16;
    endcase
  end
  always@(cntrl_sqTypeReg or b__h63258 or b__h63254)
  begin
    case (cntrl_sqTypeReg)
      4'd2, 4'd3:
	  CASE_cntrl_sqTypeReg_2_b3254_3_b3254_4_24_b3258__q5 = b__h63254;
      4'd4: CASE_cntrl_sqTypeReg_2_b3254_3_b3254_4_24_b3258__q5 = 7'd24;
      default: CASE_cntrl_sqTypeReg_2_b3254_3_b3254_4_24_b3258__q5 =
		   b__h63258;
    endcase
  end
  always@(sq_reqGenSQ_reqHeaderPrepareQ_D_OUT or
	  cntrl_sqTypeReg or
	  CASE_cntrl_sqTypeReg_2_28_3_28_32__q2 or
	  CASE_cntrl_sqTypeReg_2_b3244_3_b3244_b3246__q3 or
	  CASE_cntrl_sqTypeReg_2_12_3_12_4_20_16__q4 or
	  CASE_cntrl_sqTypeReg_2_b3254_3_b3254_4_24_b3258__q5 or
	  b__h63254 or b__h63258)
  begin
    case (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618])
      4'd0: value__h68654 = CASE_cntrl_sqTypeReg_2_28_3_28_32__q2;
      4'd1: value__h68654 = CASE_cntrl_sqTypeReg_2_b3244_3_b3244_b3246__q3;
      4'd2: value__h68654 = CASE_cntrl_sqTypeReg_2_12_3_12_4_20_16__q4;
      4'd3:
	  value__h68654 = CASE_cntrl_sqTypeReg_2_b3254_3_b3254_4_24_b3258__q5;
      4'd4: value__h68654 = (cntrl_sqTypeReg == 4'd2) ? 7'd28 : 7'd32;
      4'd9: value__h68654 = (cntrl_sqTypeReg == 4'd2) ? b__h63254 : b__h63258;
      default: value__h68654 = (cntrl_sqTypeReg == 4'd2) ? 7'd40 : 7'd44;
    endcase
  end
  always@(cntrl_pmtuReg or
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT or
	  b__h52254 or b__h52264 or b__h52274 or b__h52284)
  begin
    case (cntrl_pmtuReg)
      3'd1: x__h52371 = b__h52254;
      3'd2: x__h52371 = b__h52264;
      3'd3: x__h52371 = b__h52274;
      3'd4: x__h52371 = b__h52284;
      default: x__h52371 =
		   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[489:478];
    endcase
  end
  always@(cntrl_pmtuReg or
	  a__h52293 or a__h52253 or a__h52263 or a__h52273 or a__h52283)
  begin
    case (cntrl_pmtuReg)
      3'd1: x__h52242 = a__h52253;
      3'd2: x__h52242 = a__h52263;
      3'd3: x__h52242 = a__h52273;
      3'd4: x__h52242 = a__h52283;
      default: x__h52242 = a__h52293;
    endcase
  end
  always@(dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT or
	  b__h9346 or b__h9356 or b__h9366 or b__h9376)
  begin
    case (dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[2:0])
      3'd1: pmtuResidue__h9230 = b__h9346;
      3'd2: pmtuResidue__h9230 = b__h9356;
      3'd3: pmtuResidue__h9230 = b__h9366;
      3'd4: pmtuResidue__h9230 = b__h9376;
      default: pmtuResidue__h9230 =
		   dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[14:3];
    endcase
  end
  always@(cntrl_maxTimeOutReg)
  begin
    case (cntrl_maxTimeOutReg)
      5'd0: x__h32835 = 42'd0;
      5'd1: x__h32835 = 42'd1366;
      5'd2: x__h32835 = 42'd2731;
      5'd3: x__h32835 = 42'd5462;
      5'd4: x__h32835 = 42'd10923;
      5'd5: x__h32835 = 42'd21846;
      5'd6: x__h32835 = 42'd43691;
      5'd7: x__h32835 = 42'd87382;
      5'd8: x__h32835 = 42'd174763;
      5'd9: x__h32835 = 42'd349526;
      5'd10: x__h32835 = 42'd699051;
      5'd11: x__h32835 = 42'd1398102;
      5'd12: x__h32835 = 42'd2796203;
      5'd13: x__h32835 = 42'd5592406;
      5'd14: x__h32835 = 42'd11184811;
      5'd15: x__h32835 = 42'd22369622;
      5'd16: x__h32835 = 42'd44739243;
      5'd17: x__h32835 = 42'd89478486;
      5'd18: x__h32835 = 42'd178956971;
      5'd19: x__h32835 = 42'd357913942;
      5'd20: x__h32835 = 42'd715827883;
      5'd21: x__h32835 = 42'd1431655766;
      5'd22: x__h32835 = 42'h000AAAAAAAB;
      5'd23: x__h32835 = 42'h00155555556;
      5'd24: x__h32835 = 42'h002AAAAAAAB;
      5'd25: x__h32835 = 42'h00555555556;
      5'd26: x__h32835 = 42'h00AAAAAAAAB;
      5'd27: x__h32835 = 42'h01555555556;
      5'd28: x__h32835 = 42'h02AAAAAAAAB;
      5'd29: x__h32835 = 42'h05555555556;
      5'd30: x__h32835 = 42'h0AAAAAAAAAB;
      5'd31: x__h32835 = 42'h15555555556;
    endcase
  end
  always@(cntrl_reqQ_D_OUT or cntrl_stateReg)
  begin
    case (cntrl_reqQ_D_OUT[300:299])
      2'd0, 2'd1, 2'd2:
	  IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d60 =
	      cntrl_reqQ_D_OUT[212:209];
      2'd3:
	  IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d60 =
	      cntrl_stateReg;
    endcase
  end
  always@(cntrl_reqQ_D_OUT or cntrl_pkeyReg)
  begin
    case (cntrl_reqQ_D_OUT[300:299])
      2'd0, 2'd1, 2'd2:
	  IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d99 =
	      cntrl_reqQ_D_OUT[53:38];
      2'd3:
	  IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d99 =
	      cntrl_pkeyReg;
    endcase
  end
  always@(cntrl_reqQ_D_OUT or cntrl_qpAccessFlagsReg)
  begin
    case (cntrl_reqQ_D_OUT[300:299])
      2'd0, 2'd1, 2'd2:
	  IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d95 =
	      cntrl_reqQ_D_OUT[101:94];
      2'd3:
	  IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d95 =
	      cntrl_qpAccessFlagsReg;
    endcase
  end
  always@(cntrl_reqQ_D_OUT or
	  cntrl_maxTimeOutReg or cntrl_maxRetryCntReg or cntrl_maxRnrCntReg)
  begin
    case (cntrl_reqQ_D_OUT[300:299])
      2'd0, 2'd1, 2'd2:
	  IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d155 =
	      cntrl_reqQ_D_OUT[15:5];
      2'd3:
	  IF_cntrl_reqQ_first__7_BITS_300_TO_299_8_EQ_1__ETC___d155 =
	      { cntrl_maxTimeOutReg,
		cntrl_maxRetryCntReg,
		cntrl_maxRnrCntReg };
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d861 =
	      sq_pendingWorkReqBuf_dataVec_0[226];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d861 =
	      sq_pendingWorkReqBuf_dataVec_1[226];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d861 =
	      sq_pendingWorkReqBuf_dataVec_2[226];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d861 =
	      sq_pendingWorkReqBuf_dataVec_3[226];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d951 =
	      sq_pendingWorkReqBuf_dataVec_0[77];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d951 =
	      sq_pendingWorkReqBuf_dataVec_1[77];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d951 =
	      sq_pendingWorkReqBuf_dataVec_2[77];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d951 =
	      sq_pendingWorkReqBuf_dataVec_3[77];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d894 =
	      sq_pendingWorkReqBuf_dataVec_0[160];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d894 =
	      sq_pendingWorkReqBuf_dataVec_1[160];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d894 =
	      sq_pendingWorkReqBuf_dataVec_2[160];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d894 =
	      sq_pendingWorkReqBuf_dataVec_3[160];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1001 =
	      sq_pendingWorkReqBuf_dataVec_0[1];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1001 =
	      sq_pendingWorkReqBuf_dataVec_1[1];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1001 =
	      sq_pendingWorkReqBuf_dataVec_2[1];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1001 =
	      sq_pendingWorkReqBuf_dataVec_3[1];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1463 =
	      sq_pendingWorkReqBuf_dataVec_0[678:615];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1463 =
	      sq_pendingWorkReqBuf_dataVec_1[678:615];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1463 =
	      sq_pendingWorkReqBuf_dataVec_2[678:615];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1463 =
	      sq_pendingWorkReqBuf_dataVec_3[678:615];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1473 =
	      !sq_pendingWorkReqBuf_dataVec_0[77];
      2'd1:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1473 =
	      !sq_pendingWorkReqBuf_dataVec_1[77];
      2'd2:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1473 =
	      !sq_pendingWorkReqBuf_dataVec_2[77];
      2'd3:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1473 =
	      !sq_pendingWorkReqBuf_dataVec_3[77];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1474 =
	      sq_pendingWorkReqBuf_dataVec_0[77];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1474 =
	      sq_pendingWorkReqBuf_dataVec_1[77];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1474 =
	      sq_pendingWorkReqBuf_dataVec_2[77];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1474 =
	      sq_pendingWorkReqBuf_dataVec_3[77];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1492 =
	      sq_pendingWorkReqBuf_dataVec_0[52];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1492 =
	      sq_pendingWorkReqBuf_dataVec_1[52];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1492 =
	      sq_pendingWorkReqBuf_dataVec_2[52];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1492 =
	      sq_pendingWorkReqBuf_dataVec_3[52];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1491 =
	      !sq_pendingWorkReqBuf_dataVec_0[52];
      2'd1:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1491 =
	      !sq_pendingWorkReqBuf_dataVec_1[52];
      2'd2:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1491 =
	      !sq_pendingWorkReqBuf_dataVec_2[52];
      2'd3:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1491 =
	      !sq_pendingWorkReqBuf_dataVec_3[52];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1620 =
	      sq_pendingWorkReqBuf_dataVec_0[357];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1620 =
	      sq_pendingWorkReqBuf_dataVec_1[357];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1620 =
	      sq_pendingWorkReqBuf_dataVec_2[357];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1620 =
	      sq_pendingWorkReqBuf_dataVec_3[357];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525 =
	      sq_pendingWorkReqBuf_dataVec_0[605:542];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525 =
	      sq_pendingWorkReqBuf_dataVec_1[605:542];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525 =
	      sq_pendingWorkReqBuf_dataVec_2[605:542];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525 =
	      sq_pendingWorkReqBuf_dataVec_3[605:542];
    endcase
  end
  always@(cntrl_pmtuReg or
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525 or
	  sq_retryHandler_psnDiffReg)
  begin
    case (cntrl_pmtuReg)
      3'd1:
	  x__h39125 =
	      { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525[63:8] +
		{ 32'd0, sq_retryHandler_psnDiffReg },
		SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525[7:0] };
      3'd2:
	  x__h39125 =
	      { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525[63:9] +
		{ 31'd0, sq_retryHandler_psnDiffReg },
		SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525[8:0] };
      3'd3:
	  x__h39125 =
	      { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525[63:10] +
		{ 30'd0, sq_retryHandler_psnDiffReg },
		SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525[9:0] };
      3'd4:
	  x__h39125 =
	      { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525[63:11] +
		{ 29'd0, sq_retryHandler_psnDiffReg },
		SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525[10:0] };
      default: x__h39125 =
		   { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525[63:12] +
		     { 28'd0, sq_retryHandler_psnDiffReg },
		     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525[11:0] };
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592 =
	      sq_pendingWorkReqBuf_dataVec_0[477:414];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592 =
	      sq_pendingWorkReqBuf_dataVec_1[477:414];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592 =
	      sq_pendingWorkReqBuf_dataVec_2[477:414];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592 =
	      sq_pendingWorkReqBuf_dataVec_3[477:414];
    endcase
  end
  always@(cntrl_pmtuReg or
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592 or
	  sq_retryHandler_psnDiffReg)
  begin
    case (cntrl_pmtuReg)
      3'd1:
	  x__h39664 =
	      { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592[63:8] +
		{ 32'd0, sq_retryHandler_psnDiffReg },
		SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592[7:0] };
      3'd2:
	  x__h39664 =
	      { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592[63:9] +
		{ 31'd0, sq_retryHandler_psnDiffReg },
		SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592[8:0] };
      3'd3:
	  x__h39664 =
	      { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592[63:10] +
		{ 30'd0, sq_retryHandler_psnDiffReg },
		SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592[9:0] };
      3'd4:
	  x__h39664 =
	      { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592[63:11] +
		{ 29'd0, sq_retryHandler_psnDiffReg },
		SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592[10:0] };
      default: x__h39664 =
		   { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592[63:12] +
		     { 28'd0, sq_retryHandler_psnDiffReg },
		     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592[11:0] };
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1621 =
	      sq_pendingWorkReqBuf_dataVec_0[356];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1621 =
	      sq_pendingWorkReqBuf_dataVec_1[356];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1621 =
	      sq_pendingWorkReqBuf_dataVec_2[356];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1621 =
	      sq_pendingWorkReqBuf_dataVec_3[356];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d828 =
	      sq_pendingWorkReqBuf_dataVec_0[356];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d828 =
	      sq_pendingWorkReqBuf_dataVec_1[356];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d828 =
	      sq_pendingWorkReqBuf_dataVec_2[356];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d828 =
	      sq_pendingWorkReqBuf_dataVec_3[356];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1631 =
	      sq_pendingWorkReqBuf_dataVec_0[160];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1631 =
	      sq_pendingWorkReqBuf_dataVec_1[160];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1631 =
	      sq_pendingWorkReqBuf_dataVec_2[160];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1631 =
	      sq_pendingWorkReqBuf_dataVec_3[160];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1626 =
	      sq_pendingWorkReqBuf_dataVec_0[226];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1626 =
	      sq_pendingWorkReqBuf_dataVec_1[226];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1626 =
	      sq_pendingWorkReqBuf_dataVec_2[226];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1626 =
	      sq_pendingWorkReqBuf_dataVec_3[226];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1634 =
	      sq_pendingWorkReqBuf_dataVec_0[135];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1634 =
	      sq_pendingWorkReqBuf_dataVec_1[135];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1634 =
	      sq_pendingWorkReqBuf_dataVec_2[135];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1634 =
	      sq_pendingWorkReqBuf_dataVec_3[135];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d911 =
	      sq_pendingWorkReqBuf_dataVec_0[135];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d911 =
	      sq_pendingWorkReqBuf_dataVec_1[135];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d911 =
	      sq_pendingWorkReqBuf_dataVec_2[135];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d911 =
	      sq_pendingWorkReqBuf_dataVec_3[135];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1629 =
	      sq_pendingWorkReqBuf_dataVec_0[193];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1629 =
	      sq_pendingWorkReqBuf_dataVec_1[193];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1629 =
	      sq_pendingWorkReqBuf_dataVec_2[193];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1629 =
	      sq_pendingWorkReqBuf_dataVec_3[193];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d878 =
	      sq_pendingWorkReqBuf_dataVec_0[193];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d878 =
	      sq_pendingWorkReqBuf_dataVec_1[193];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d878 =
	      sq_pendingWorkReqBuf_dataVec_2[193];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d878 =
	      sq_pendingWorkReqBuf_dataVec_3[193];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1624 =
	      sq_pendingWorkReqBuf_dataVec_0[291];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1624 =
	      sq_pendingWorkReqBuf_dataVec_1[291];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1624 =
	      sq_pendingWorkReqBuf_dataVec_2[291];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1624 =
	      sq_pendingWorkReqBuf_dataVec_3[291];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d845 =
	      sq_pendingWorkReqBuf_dataVec_0[291];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d845 =
	      sq_pendingWorkReqBuf_dataVec_1[291];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d845 =
	      sq_pendingWorkReqBuf_dataVec_2[291];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d845 =
	      sq_pendingWorkReqBuf_dataVec_3[291];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d822 =
	      sq_pendingWorkReqBuf_dataVec_0[357];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d822 =
	      sq_pendingWorkReqBuf_dataVec_1[357];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d822 =
	      sq_pendingWorkReqBuf_dataVec_2[357];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d822 =
	      sq_pendingWorkReqBuf_dataVec_3[357];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1618 =
	      sq_pendingWorkReqBuf_dataVec_0[413:382];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1618 =
	      sq_pendingWorkReqBuf_dataVec_1[413:382];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1618 =
	      sq_pendingWorkReqBuf_dataVec_2[413:382];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1618 =
	      sq_pendingWorkReqBuf_dataVec_3[413:382];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d810 =
	      sq_pendingWorkReqBuf_dataVec_0[413:382];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d810 =
	      sq_pendingWorkReqBuf_dataVec_1[413:382];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d810 =
	      sq_pendingWorkReqBuf_dataVec_2[413:382];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d810 =
	      sq_pendingWorkReqBuf_dataVec_3[413:382];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d984 =
	      sq_pendingWorkReqBuf_dataVec_0[27];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d984 =
	      sq_pendingWorkReqBuf_dataVec_1[27];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d984 =
	      sq_pendingWorkReqBuf_dataVec_2[27];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d984 =
	      sq_pendingWorkReqBuf_dataVec_3[27];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1649 =
	      sq_pendingWorkReqBuf_dataVec_0[27];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1649 =
	      sq_pendingWorkReqBuf_dataVec_1[27];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1649 =
	      sq_pendingWorkReqBuf_dataVec_2[27];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1649 =
	      sq_pendingWorkReqBuf_dataVec_3[27];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1652 =
	      sq_pendingWorkReqBuf_dataVec_0[1];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1652 =
	      sq_pendingWorkReqBuf_dataVec_1[1];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1652 =
	      sq_pendingWorkReqBuf_dataVec_2[1];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1652 =
	      sq_pendingWorkReqBuf_dataVec_3[1];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d968 =
	      sq_pendingWorkReqBuf_dataVec_0[52];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d968 =
	      sq_pendingWorkReqBuf_dataVec_1[52];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d968 =
	      sq_pendingWorkReqBuf_dataVec_2[52];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d968 =
	      sq_pendingWorkReqBuf_dataVec_3[52];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562 =
	      sq_pendingWorkReqBuf_dataVec_0[509:478];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562 =
	      sq_pendingWorkReqBuf_dataVec_1[509:478];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562 =
	      sq_pendingWorkReqBuf_dataVec_2[509:478];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562 =
	      sq_pendingWorkReqBuf_dataVec_3[509:478];
    endcase
  end
  always@(cntrl_pmtuReg or
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562 or
	  sq_retryHandler_psnDiffReg)
  begin
    case (cntrl_pmtuReg)
      3'd1:
	  x__h39399 =
	      { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562[31:8] -
		sq_retryHandler_psnDiffReg,
		SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562[7:0] };
      3'd2:
	  x__h39399 =
	      { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562[31:9] -
		sq_retryHandler_psnDiffReg[22:0],
		SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562[8:0] };
      3'd3:
	  x__h39399 =
	      { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562[31:10] -
		sq_retryHandler_psnDiffReg[21:0],
		SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562[9:0] };
      3'd4:
	  x__h39399 =
	      { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562[31:11] -
		sq_retryHandler_psnDiffReg[20:0],
		SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562[10:0] };
      default: x__h39399 =
		   { SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562[31:12] -
		     sq_retryHandler_psnDiffReg[19:0],
		     SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562[11:0] };
    endcase
  end
  always@(sq_reqGenSQ_reqHeaderPrepareQ_D_OUT or cntrl_sqTypeReg)
  begin
    case (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618])
      4'd0, 4'd1:
	  IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2711 =
	      cntrl_sqTypeReg != 4'd2 && cntrl_sqTypeReg != 4'd3 &&
	      cntrl_sqTypeReg != 4'd9;
      4'd2, 4'd3:
	  IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2711 =
	      cntrl_sqTypeReg != 4'd2 && cntrl_sqTypeReg != 4'd3 &&
	      cntrl_sqTypeReg != 4'd4 &&
	      cntrl_sqTypeReg != 4'd9;
      4'd4, 4'd9:
	  IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2711 =
	      cntrl_sqTypeReg != 4'd2 && cntrl_sqTypeReg != 4'd9;
      default: IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2711 =
		   sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd5 &&
		   sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd6 ||
		   cntrl_sqTypeReg != 4'd2 && cntrl_sqTypeReg != 4'd9;
    endcase
  end
  always@(sq_reqGenSQ_reqHeaderPrepareQ_D_OUT or cntrl_sqTypeReg)
  begin
    case (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618])
      4'd0, 4'd1, 4'd2, 4'd3:
	  IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2722 =
	      cntrl_sqTypeReg != 4'd2 && cntrl_sqTypeReg != 4'd9;
      default: IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d2722 =
		   sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd9 ||
		   cntrl_sqTypeReg != 4'd2 && cntrl_sqTypeReg != 4'd9;
    endcase
  end
  always@(cntrl_sqTypeReg)
  begin
    case (cntrl_sqTypeReg)
      4'd2: IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208 = 3'd0;
      4'd3: IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208 = 3'd1;
      4'd4: IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208 = 3'd3;
      default: IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_0_ELSE_IF_ETC___d3208 =
		   3'd5;
    endcase
  end
  always@(sq_reqGenSQ_reqHeaderPrepareQ_D_OUT)
  begin
    case (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618])
      4'd0:
	  IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222 =
	      sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] ? 5'd10 : 5'd6;
      4'd1:
	  IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222 =
	      sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] ? 5'd11 : 5'd6;
      4'd2:
	  IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222 =
	      sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] ? 5'd4 : 5'd0;
      4'd3:
	  IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222 =
	      sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] ? 5'd5 : 5'd0;
      4'd4:
	  IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222 = 5'd12;
      4'd5:
	  IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222 = 5'd19;
      4'd9:
	  IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222 =
	      sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7] ? 5'd23 : 5'd0;
      default: IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3222 =
		   5'd20;
    endcase
  end
  always@(cntrl_sqTypeReg or a__h63241 or a__h63239)
  begin
    case (cntrl_sqTypeReg)
      4'd2, 4'd3: CASE_cntrl_sqTypeReg_2_a3239_3_a3239_a3241__q6 = a__h63239;
      default: CASE_cntrl_sqTypeReg_2_a3239_3_a3239_a3241__q6 = a__h63241;
    endcase
  end
  always@(cntrl_sqTypeReg or a__h63245 or a__h63243)
  begin
    case (cntrl_sqTypeReg)
      4'd2, 4'd3: CASE_cntrl_sqTypeReg_2_a3243_3_a3243_a3245__q7 = a__h63243;
      default: CASE_cntrl_sqTypeReg_2_a3243_3_a3243_a3245__q7 = a__h63245;
    endcase
  end
  always@(cntrl_sqTypeReg or a__h63251 or a__h63247 or a__h63249)
  begin
    case (cntrl_sqTypeReg)
      4'd2, 4'd3:
	  CASE_cntrl_sqTypeReg_2_a3247_3_a3247_4_a3249_a_ETC__q8 = a__h63247;
      4'd4:
	  CASE_cntrl_sqTypeReg_2_a3247_3_a3247_4_a3249_a_ETC__q8 = a__h63249;
      default: CASE_cntrl_sqTypeReg_2_a3247_3_a3247_4_a3249_a_ETC__q8 =
		   a__h63251;
    endcase
  end
  always@(cntrl_sqTypeReg or a__h63257 or a__h63253 or a__h63255)
  begin
    case (cntrl_sqTypeReg)
      4'd2, 4'd3:
	  CASE_cntrl_sqTypeReg_2_a3253_3_a3253_4_a3255_a_ETC__q9 = a__h63253;
      4'd4:
	  CASE_cntrl_sqTypeReg_2_a3253_3_a3253_4_a3255_a_ETC__q9 = a__h63255;
      default: CASE_cntrl_sqTypeReg_2_a3253_3_a3253_4_a3255_a_ETC__q9 =
		   a__h63257;
    endcase
  end
  always@(sq_reqGenSQ_reqHeaderPrepareQ_D_OUT or
	  cntrl_sqTypeReg or
	  a__h63269 or
	  a__h63272 or
	  CASE_cntrl_sqTypeReg_2_a3239_3_a3239_a3241__q6 or
	  CASE_cntrl_sqTypeReg_2_a3243_3_a3243_a3245__q7 or
	  CASE_cntrl_sqTypeReg_2_a3247_3_a3247_4_a3249_a_ETC__q8 or
	  CASE_cntrl_sqTypeReg_2_a3253_3_a3253_4_a3255_a_ETC__q9 or
	  a__h63239 or a__h63241 or a__h63259 or a__h63261)
  begin
    case (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618])
      4'd0: value__h63238 = CASE_cntrl_sqTypeReg_2_a3239_3_a3239_a3241__q6;
      4'd1: value__h63238 = CASE_cntrl_sqTypeReg_2_a3243_3_a3243_a3245__q7;
      4'd2:
	  value__h63238 =
	      CASE_cntrl_sqTypeReg_2_a3247_3_a3247_4_a3249_a_ETC__q8;
      4'd3:
	  value__h63238 =
	      CASE_cntrl_sqTypeReg_2_a3253_3_a3253_4_a3255_a_ETC__q9;
      4'd4: value__h63238 = (cntrl_sqTypeReg == 4'd2) ? a__h63239 : a__h63241;
      4'd9: value__h63238 = (cntrl_sqTypeReg == 4'd2) ? a__h63259 : a__h63261;
      default: value__h63238 =
		   (cntrl_sqTypeReg == 4'd2) ? a__h63269 : a__h63272;
    endcase
  end
  always@(sq_reqGenSQ_reqHeaderPrepareQ_D_OUT)
  begin
    case (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618])
      4'd0:
	  IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3300 =
	      sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] ? 5'd8 : 5'd7;
      4'd1:
	  IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3300 =
	      sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] ? 5'd9 : 5'd7;
      4'd2:
	  IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3300 =
	      sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] ? 5'd2 : 5'd1;
      4'd3:
	  IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3300 =
	      sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] ? 5'd3 : 5'd1;
      default: IF_sq_reqGenSQ_reqHeaderPrepareQ_first__665_BI_ETC___d3300 =
		   sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] ? 5'd22 : 5'd1;
    endcase
  end
  always@(sq_reqGenSQ_reqHeaderPrepareQ_D_OUT or
	  cntrl_sqTypeReg or
	  a__h69903 or
	  a__h69905 or
	  IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_IF_cntrl__ETC___d3311 or
	  IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_IF_sq_req_ETC___d3316)
  begin
    case (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618])
      4'd0, 4'd2:
	  value__h69886 =
	      IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_IF_cntrl__ETC___d3311;
      4'd1, 4'd3:
	  value__h69886 =
	      IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_IF_sq_req_ETC___d3316;
      default: value__h69886 =
		   (cntrl_sqTypeReg == 4'd2) ? a__h69903 : a__h69905;
    endcase
  end
  always@(sq_reqGenSQ_reqHeaderPrepareQ_D_OUT or
	  IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_IF_sq_req_ETC___d3349 or
	  IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_12_ELSE_16___d3346)
  begin
    case (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618])
      4'd0, 4'd2:
	  value__h72405 =
	      IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_12_ELSE_16___d3346;
      4'd1:
	  value__h72405 =
	      IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_IF_sq_req_ETC___d3349;
      default: value__h72405 =
		   IF_cntrl_sqTypeReg_887_EQ_2_888_THEN_IF_sq_req_ETC___d3349;
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 =
	      sq_pendingWorkReqBuf_dataVec_0[614:611] == 4'd0;
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 =
	      sq_pendingWorkReqBuf_dataVec_1[614:611] == 4'd0;
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 =
	      sq_pendingWorkReqBuf_dataVec_2[614:611] == 4'd0;
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 =
	      sq_pendingWorkReqBuf_dataVec_3[614:611] == 4'd0;
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 =
	      sq_pendingWorkReqBuf_dataVec_0[614:611] == 4'd1;
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 =
	      sq_pendingWorkReqBuf_dataVec_1[614:611] == 4'd1;
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 =
	      sq_pendingWorkReqBuf_dataVec_2[614:611] == 4'd1;
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 =
	      sq_pendingWorkReqBuf_dataVec_3[614:611] == 4'd1;
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 =
	      sq_pendingWorkReqBuf_dataVec_0[614:611] == 4'd2;
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 =
	      sq_pendingWorkReqBuf_dataVec_1[614:611] == 4'd2;
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 =
	      sq_pendingWorkReqBuf_dataVec_2[614:611] == 4'd2;
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770 =
	      sq_pendingWorkReqBuf_dataVec_3[614:611] == 4'd2;
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 =
	      sq_pendingWorkReqBuf_dataVec_0[614:611] == 4'd3;
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 =
	      sq_pendingWorkReqBuf_dataVec_1[614:611] == 4'd3;
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 =
	      sq_pendingWorkReqBuf_dataVec_2[614:611] == 4'd3;
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3780 =
	      sq_pendingWorkReqBuf_dataVec_3[614:611] == 4'd3;
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 =
	      sq_pendingWorkReqBuf_dataVec_0[614:611] == 4'd4;
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 =
	      sq_pendingWorkReqBuf_dataVec_1[614:611] == 4'd4;
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 =
	      sq_pendingWorkReqBuf_dataVec_2[614:611] == 4'd4;
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3791 =
	      sq_pendingWorkReqBuf_dataVec_3[614:611] == 4'd4;
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 =
	      sq_pendingWorkReqBuf_dataVec_0[614:611] == 4'd5;
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 =
	      sq_pendingWorkReqBuf_dataVec_1[614:611] == 4'd5;
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 =
	      sq_pendingWorkReqBuf_dataVec_2[614:611] == 4'd5;
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3803 =
	      sq_pendingWorkReqBuf_dataVec_3[614:611] == 4'd5;
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 =
	      sq_pendingWorkReqBuf_dataVec_0[614:611] == 4'd6;
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 =
	      sq_pendingWorkReqBuf_dataVec_1[614:611] == 4'd6;
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 =
	      sq_pendingWorkReqBuf_dataVec_2[614:611] == 4'd6;
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3816 =
	      sq_pendingWorkReqBuf_dataVec_3[614:611] == 4'd6;
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 =
	      sq_pendingWorkReqBuf_dataVec_0[614:611] == 4'd7;
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 =
	      sq_pendingWorkReqBuf_dataVec_1[614:611] == 4'd7;
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 =
	      sq_pendingWorkReqBuf_dataVec_2[614:611] == 4'd7;
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3830 =
	      sq_pendingWorkReqBuf_dataVec_3[614:611] == 4'd7;
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 =
	      sq_pendingWorkReqBuf_dataVec_0[614:611] == 4'd8;
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 =
	      sq_pendingWorkReqBuf_dataVec_1[614:611] == 4'd8;
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 =
	      sq_pendingWorkReqBuf_dataVec_2[614:611] == 4'd8;
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3845 =
	      sq_pendingWorkReqBuf_dataVec_3[614:611] == 4'd8;
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3861 =
	      sq_pendingWorkReqBuf_dataVec_0[614:611] == 4'd9;
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3861 =
	      sq_pendingWorkReqBuf_dataVec_1[614:611] == 4'd9;
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3861 =
	      sq_pendingWorkReqBuf_dataVec_2[614:611] == 4'd9;
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3861 =
	      sq_pendingWorkReqBuf_dataVec_3[614:611] == 4'd9;
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3878 =
	      sq_pendingWorkReqBuf_dataVec_0[614:611] == 4'd10;
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3878 =
	      sq_pendingWorkReqBuf_dataVec_1[614:611] == 4'd10;
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3878 =
	      sq_pendingWorkReqBuf_dataVec_2[614:611] == 4'd10;
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3878 =
	      sq_pendingWorkReqBuf_dataVec_3[614:611] == 4'd10;
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3896 =
	      sq_pendingWorkReqBuf_dataVec_0[614:611] == 4'd11;
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3896 =
	      sq_pendingWorkReqBuf_dataVec_1[614:611] == 4'd11;
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3896 =
	      sq_pendingWorkReqBuf_dataVec_2[614:611] == 4'd11;
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3896 =
	      sq_pendingWorkReqBuf_dataVec_3[614:611] == 4'd11;
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3915 =
	      sq_pendingWorkReqBuf_dataVec_0[614:611] == 4'd12;
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3915 =
	      sq_pendingWorkReqBuf_dataVec_1[614:611] == 4'd12;
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3915 =
	      sq_pendingWorkReqBuf_dataVec_2[614:611] == 4'd12;
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3915 =
	      sq_pendingWorkReqBuf_dataVec_3[614:611] == 4'd12;
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3935 =
	      sq_pendingWorkReqBuf_dataVec_0[614:611] == 4'd14;
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3935 =
	      sq_pendingWorkReqBuf_dataVec_1[614:611] == 4'd14;
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3935 =
	      sq_pendingWorkReqBuf_dataVec_2[614:611] == 4'd14;
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3935 =
	      sq_pendingWorkReqBuf_dataVec_3[614:611] == 4'd14;
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3994 =
	      !sq_pendingWorkReqBuf_dataVec_0[357];
      2'd1:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3994 =
	      !sq_pendingWorkReqBuf_dataVec_1[357];
      2'd2:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3994 =
	      !sq_pendingWorkReqBuf_dataVec_2[357];
      2'd3:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3994 =
	      !sq_pendingWorkReqBuf_dataVec_3[357];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4012 =
	      !sq_pendingWorkReqBuf_dataVec_0[291];
      2'd1:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4012 =
	      !sq_pendingWorkReqBuf_dataVec_1[291];
      2'd2:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4012 =
	      !sq_pendingWorkReqBuf_dataVec_2[291];
      2'd3:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4012 =
	      !sq_pendingWorkReqBuf_dataVec_3[291];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4003 =
	      !sq_pendingWorkReqBuf_dataVec_0[356];
      2'd1:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4003 =
	      !sq_pendingWorkReqBuf_dataVec_1[356];
      2'd2:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4003 =
	      !sq_pendingWorkReqBuf_dataVec_2[356];
      2'd3:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4003 =
	      !sq_pendingWorkReqBuf_dataVec_3[356];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4021 =
	      !sq_pendingWorkReqBuf_dataVec_0[226];
      2'd1:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4021 =
	      !sq_pendingWorkReqBuf_dataVec_1[226];
      2'd2:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4021 =
	      !sq_pendingWorkReqBuf_dataVec_2[226];
      2'd3:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4021 =
	      !sq_pendingWorkReqBuf_dataVec_3[226];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4030 =
	      !sq_pendingWorkReqBuf_dataVec_0[193];
      2'd1:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4030 =
	      !sq_pendingWorkReqBuf_dataVec_1[193];
      2'd2:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4030 =
	      !sq_pendingWorkReqBuf_dataVec_2[193];
      2'd3:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4030 =
	      !sq_pendingWorkReqBuf_dataVec_3[193];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4039 =
	      !sq_pendingWorkReqBuf_dataVec_0[160];
      2'd1:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4039 =
	      !sq_pendingWorkReqBuf_dataVec_1[160];
      2'd2:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4039 =
	      !sq_pendingWorkReqBuf_dataVec_2[160];
      2'd3:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4039 =
	      !sq_pendingWorkReqBuf_dataVec_3[160];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4048 =
	      !sq_pendingWorkReqBuf_dataVec_0[135];
      2'd1:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4048 =
	      !sq_pendingWorkReqBuf_dataVec_1[135];
      2'd2:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4048 =
	      !sq_pendingWorkReqBuf_dataVec_2[135];
      2'd3:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4048 =
	      !sq_pendingWorkReqBuf_dataVec_3[135];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4057 =
	      !sq_pendingWorkReqBuf_dataVec_0[110];
      2'd1:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4057 =
	      !sq_pendingWorkReqBuf_dataVec_1[110];
      2'd2:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4057 =
	      !sq_pendingWorkReqBuf_dataVec_2[110];
      2'd3:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4057 =
	      !sq_pendingWorkReqBuf_dataVec_3[110];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074 =
	      !sq_pendingWorkReqBuf_dataVec_0[1];
      2'd1:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074 =
	      !sq_pendingWorkReqBuf_dataVec_1[1];
      2'd2:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074 =
	      !sq_pendingWorkReqBuf_dataVec_2[1];
      2'd3:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074 =
	      !sq_pendingWorkReqBuf_dataVec_3[1];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4083 =
	      !sq_pendingWorkReqBuf_dataVec_0[0];
      2'd1:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4083 =
	      !sq_pendingWorkReqBuf_dataVec_1[0];
      2'd2:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4083 =
	      !sq_pendingWorkReqBuf_dataVec_2[0];
      2'd3:
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4083 =
	      !sq_pendingWorkReqBuf_dataVec_3[0];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1521 =
	      sq_pendingWorkReqBuf_dataVec_0[614:611];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1521 =
	      sq_pendingWorkReqBuf_dataVec_1[614:611];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1521 =
	      sq_pendingWorkReqBuf_dataVec_2[614:611];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1521 =
	      sq_pendingWorkReqBuf_dataVec_3[614:611];
    endcase
  end
  always@(sq_respHandleSQ_preStageRespAndWorkReqRelationReg or
	  sq_respHandleSQ_preStageRespTypeReg)
  begin
    case (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0])
      4'b1000, 4'b1010:
	  CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q10 =
	      sq_respHandleSQ_preStageRespTypeReg != 2'd0;
      default: CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q10 =
		   (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
		    4'b0010 ||
		    sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
		    4'b0001) &&
		   sq_respHandleSQ_preStageRespTypeReg != 2'd0;
    endcase
  end
  always@(sq_respHandleSQ_preStageRespAndWorkReqRelationReg or
	  sq_respHandleSQ_preStageRespTypeReg)
  begin
    case (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0])
      4'b1000, 4'b1010:
	  CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q11 =
	      sq_respHandleSQ_preStageRespTypeReg != 2'd2;
      default: CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q11 =
		   (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
		    4'b0010 ||
		    sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
		    4'b0001) &&
		   sq_respHandleSQ_preStageRespTypeReg != 2'd2;
    endcase
  end
  always@(sq_respHandleSQ_preStageRespAndWorkReqRelationReg or
	  sq_respHandleSQ_preStageRespTypeReg)
  begin
    case (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0])
      4'b1000, 4'b1010:
	  CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q12 =
	      sq_respHandleSQ_preStageRespTypeReg != 2'd1;
      default: CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q12 =
		   (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
		    4'b0010 ||
		    sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
		    4'b0001) &&
		   sq_respHandleSQ_preStageRespTypeReg != 2'd1;
    endcase
  end
  always@(sq_respHandleSQ_preStageRespAndWorkReqRelationReg or
	  sq_respHandleSQ_preStageRespTypeReg)
  begin
    case (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0])
      4'b1000, 4'b1010:
	  CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q13 =
	      sq_respHandleSQ_preStageRespTypeReg != 2'd1 &&
	      sq_respHandleSQ_preStageRespTypeReg != 2'd2 &&
	      sq_respHandleSQ_preStageRespTypeReg != 2'd0;
      default: CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q13 =
		   (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
		    4'b0010 ||
		    sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
		    4'b0001) &&
		   sq_respHandleSQ_preStageRespTypeReg != 2'd1 &&
		   sq_respHandleSQ_preStageRespTypeReg != 2'd2 &&
		   sq_respHandleSQ_preStageRespTypeReg != 2'd0;
    endcase
  end
  always@(sq_respHandleSQ_preStageRespAndWorkReqRelationReg or
	  sq_respHandleSQ_preStageRespTypeReg)
  begin
    case (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0])
      4'b0100:
	  IF_sq_respHandleSQ_preStageRespAndWorkReqRelat_ETC___d4271 =
	      !sq_respHandleSQ_preStageRespAndWorkReqRelationReg[4];
      4'b1000, 4'b1010:
	  IF_sq_respHandleSQ_preStageRespAndWorkReqRelat_ETC___d4271 =
	      sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	      sq_respHandleSQ_preStageRespTypeReg == 2'd0;
      default: IF_sq_respHandleSQ_preStageRespAndWorkReqRelat_ETC___d4271 =
		   (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
		    4'b0010 ||
		    sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
		    4'b0001) &&
		   sq_respHandleSQ_preStageRespTypeReg == 2'd2;
    endcase
  end
  always@(sq_respHandleSQ_preStageRespAndWorkReqRelationReg or
	  sq_respHandleSQ_preStageRespTypeReg)
  begin
    case (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0])
      4'b0100:
	  IF_sq_respHandleSQ_preStageRespAndWorkReqRelat_ETC___d4275 =
	      sq_respHandleSQ_preStageRespAndWorkReqRelationReg[4];
      4'b1000, 4'b1010:
	  IF_sq_respHandleSQ_preStageRespAndWorkReqRelat_ETC___d4275 =
	      sq_respHandleSQ_preStageRespTypeReg != 2'd2 &&
	      sq_respHandleSQ_preStageRespTypeReg != 2'd0;
      default: IF_sq_respHandleSQ_preStageRespAndWorkReqRelat_ETC___d4275 =
		   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
		   4'b0010 &&
		   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
		   4'b0001 ||
		   sq_respHandleSQ_preStageRespTypeReg != 2'd2;
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d798 =
	      sq_pendingWorkReqBuf_dataVec_0[509:478];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d798 =
	      sq_pendingWorkReqBuf_dataVec_1[509:478];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d798 =
	      sq_pendingWorkReqBuf_dataVec_2[509:478];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d798 =
	      sq_pendingWorkReqBuf_dataVec_3[509:478];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d786 =
	      sq_pendingWorkReqBuf_dataVec_0[605:542];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d786 =
	      sq_pendingWorkReqBuf_dataVec_1[605:542];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d786 =
	      sq_pendingWorkReqBuf_dataVec_2[605:542];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d786 =
	      sq_pendingWorkReqBuf_dataVec_3[605:542];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d774 =
	      sq_pendingWorkReqBuf_dataVec_0[614:611];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d774 =
	      sq_pendingWorkReqBuf_dataVec_1[614:611];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d774 =
	      sq_pendingWorkReqBuf_dataVec_2[614:611];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d774 =
	      sq_pendingWorkReqBuf_dataVec_3[614:611];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d768 =
	      sq_pendingWorkReqBuf_dataVec_0[678:615];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d768 =
	      sq_pendingWorkReqBuf_dataVec_1[678:615];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d768 =
	      sq_pendingWorkReqBuf_dataVec_2[678:615];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d768 =
	      sq_pendingWorkReqBuf_dataVec_3[678:615];
    endcase
  end
  always@(sq_respHandleSQ_pendingRespQ_D_OUT)
  begin
    case (sq_respHandleSQ_pendingRespQ_D_OUT[141:137])
      5'd13, 5'd14, 5'd15, 5'd16:
	  IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4824 =
	      sq_respHandleSQ_pendingRespQ_D_OUT[1408:1405] != 4'd4;
      5'd18:
	  IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4824 =
	      sq_respHandleSQ_pendingRespQ_D_OUT[1408:1405] != 4'd5 &&
	      sq_respHandleSQ_pendingRespQ_D_OUT[1408:1405] != 4'd6;
      default: IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4824 =
		   sq_respHandleSQ_pendingRespQ_D_OUT[141:137] != 5'd17;
    endcase
  end
  always@(sq_respHandleSQ_preRdmaOpCodeReg or
	  sq_respHandleSQ_pendingRespQ_D_OUT)
  begin
    case (sq_respHandleSQ_preRdmaOpCodeReg)
      5'd13, 5'd14:
	  CASE_sq_respHandleSQ_preRdmaOpCodeReg_13_NOT_s_ETC__q14 =
	      sq_respHandleSQ_pendingRespQ_D_OUT[141:137] != 5'd14 &&
	      sq_respHandleSQ_pendingRespQ_D_OUT[141:137] != 5'd15;
      default: CASE_sq_respHandleSQ_preRdmaOpCodeReg_13_NOT_s_ETC__q14 =
		   sq_respHandleSQ_preRdmaOpCodeReg != 5'd15 &&
		   sq_respHandleSQ_preRdmaOpCodeReg != 5'd16 &&
		   sq_respHandleSQ_preRdmaOpCodeReg != 5'd17 &&
		   sq_respHandleSQ_preRdmaOpCodeReg != 5'd18;
    endcase
  end
  always@(sq_respHandleSQ_pendingRetryCheckQ_D_OUT or
	  sq_respHandleSQ_pendingRetryCheckQ_EMPTY_N or
	  sq_retryHandler_retryRespQ_EMPTY_N)
  begin
    case (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3])
      4'd9, 4'd10:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q15 =
	      sq_retryHandler_retryRespQ_EMPTY_N;
      default: CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q15 =
		   sq_respHandleSQ_pendingRetryCheckQ_EMPTY_N;
    endcase
  end
  always@(sq_respHandleSQ_pendingRetryCheckQ_D_OUT or
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q15 or
	  sq_respHandleSQ_pendingRetryCheckQ_EMPTY_N)
  begin
    case (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3])
      4'd1, 4'd3:
	  IF_sq_respHandleSQ_pendingRetryCheckQ_first__9_ETC___d4989 =
	      sq_respHandleSQ_pendingRetryCheckQ_EMPTY_N;
      default: IF_sq_respHandleSQ_pendingRetryCheckQ_first__9_ETC___d4989 =
		   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd5 ||
		   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd6 ||
		   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd4 ||
		   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd7 ||
		   CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q15;
    endcase
  end
  always@(sq_respHandleSQ_pendingRetryCheckQ_D_OUT or
	  sq_retryHandler_retryRespQ_D_OUT)
  begin
    case (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3])
      4'd9, 4'd10:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q16 =
	      !sq_retryHandler_retryRespQ_D_OUT;
      default: CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q16 =
		   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd8;
    endcase
  end
  always@(sq_respHandleSQ_pendingRetryCheckQ_D_OUT or
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q16)
  begin
    case (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3])
      4'd1:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q17 =
	      !sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1398] &&
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] != 4'd4 &&
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] != 4'd5 &&
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] != 4'd6;
      4'd2:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q17 =
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd3 ||
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd1 &&
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd2 &&
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd3 &&
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd4;
      4'd3:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q17 =
	      !sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1398] &&
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] != 4'd4 &&
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] != 4'd5 &&
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] != 4'd6 ||
	      !sq_respHandleSQ_pendingRetryCheckQ_D_OUT[12];
      default: CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q17 =
		   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd6 &&
		   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd7 &&
		   CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q16;
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1561 =
	      sq_pendingWorkReqBuf_dataVec_0[541:510];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1561 =
	      sq_pendingWorkReqBuf_dataVec_1[541:510];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1561 =
	      sq_pendingWorkReqBuf_dataVec_2[541:510];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1561 =
	      sq_pendingWorkReqBuf_dataVec_3[541:510];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1636 =
	      sq_pendingWorkReqBuf_dataVec_0[110];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1636 =
	      sq_pendingWorkReqBuf_dataVec_1[110];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1636 =
	      sq_pendingWorkReqBuf_dataVec_2[110];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1636 =
	      sq_pendingWorkReqBuf_dataVec_3[110];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1619 =
	      sq_pendingWorkReqBuf_dataVec_0[381:358];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1619 =
	      sq_pendingWorkReqBuf_dataVec_1[381:358];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1619 =
	      sq_pendingWorkReqBuf_dataVec_2[381:358];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1619 =
	      sq_pendingWorkReqBuf_dataVec_3[381:358];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d1650 =
	      sq_pendingWorkReqBuf_dataVec_0[26:2];
      2'd1:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d1650 =
	      sq_pendingWorkReqBuf_dataVec_1[26:2];
      2'd2:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d1650 =
	      sq_pendingWorkReqBuf_dataVec_2[26:2];
      2'd3:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d1650 =
	      sq_pendingWorkReqBuf_dataVec_3[26:2];
    endcase
  end
  always@(sq_pendingWorkReqBuf_deqPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_deqPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1653 =
	      sq_pendingWorkReqBuf_dataVec_0[0];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1653 =
	      sq_pendingWorkReqBuf_dataVec_1[0];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1653 =
	      sq_pendingWorkReqBuf_dataVec_2[0];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1653 =
	      sq_pendingWorkReqBuf_dataVec_3[0];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1007 =
	      sq_pendingWorkReqBuf_dataVec_0[0];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1007 =
	      sq_pendingWorkReqBuf_dataVec_1[0];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1007 =
	      sq_pendingWorkReqBuf_dataVec_2[0];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1007 =
	      sq_pendingWorkReqBuf_dataVec_3[0];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d961 =
	      sq_pendingWorkReqBuf_dataVec_0[76:53];
      2'd1:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d961 =
	      sq_pendingWorkReqBuf_dataVec_1[76:53];
      2'd2:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d961 =
	      sq_pendingWorkReqBuf_dataVec_2[76:53];
      2'd3:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d961 =
	      sq_pendingWorkReqBuf_dataVec_3[76:53];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d904 =
	      sq_pendingWorkReqBuf_dataVec_0[159:136];
      2'd1:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d904 =
	      sq_pendingWorkReqBuf_dataVec_1[159:136];
      2'd2:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d904 =
	      sq_pendingWorkReqBuf_dataVec_2[159:136];
      2'd3:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d904 =
	      sq_pendingWorkReqBuf_dataVec_3[159:136];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d994 =
	      sq_pendingWorkReqBuf_dataVec_0[26:2];
      2'd1:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d994 =
	      sq_pendingWorkReqBuf_dataVec_1[26:2];
      2'd2:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d994 =
	      sq_pendingWorkReqBuf_dataVec_2[26:2];
      2'd3:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d994 =
	      sq_pendingWorkReqBuf_dataVec_3[26:2];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d871 =
	      sq_pendingWorkReqBuf_dataVec_0[225:194];
      2'd1:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d871 =
	      sq_pendingWorkReqBuf_dataVec_1[225:194];
      2'd2:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d871 =
	      sq_pendingWorkReqBuf_dataVec_2[225:194];
      2'd3:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d871 =
	      sq_pendingWorkReqBuf_dataVec_3[225:194];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d978 =
	      sq_pendingWorkReqBuf_dataVec_0[51:28];
      2'd1:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d978 =
	      sq_pendingWorkReqBuf_dataVec_1[51:28];
      2'd2:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d978 =
	      sq_pendingWorkReqBuf_dataVec_2[51:28];
      2'd3:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d978 =
	      sq_pendingWorkReqBuf_dataVec_3[51:28];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d921 =
	      sq_pendingWorkReqBuf_dataVec_0[134:111];
      2'd1:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d921 =
	      sq_pendingWorkReqBuf_dataVec_1[134:111];
      2'd2:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d921 =
	      sq_pendingWorkReqBuf_dataVec_2[134:111];
      2'd3:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d921 =
	      sq_pendingWorkReqBuf_dataVec_3[134:111];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d927 =
	      sq_pendingWorkReqBuf_dataVec_0[110];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d927 =
	      sq_pendingWorkReqBuf_dataVec_1[110];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d927 =
	      sq_pendingWorkReqBuf_dataVec_2[110];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d927 =
	      sq_pendingWorkReqBuf_dataVec_3[110];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d937 =
	      sq_pendingWorkReqBuf_dataVec_0[109:78];
      2'd1:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d937 =
	      sq_pendingWorkReqBuf_dataVec_1[109:78];
      2'd2:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d937 =
	      sq_pendingWorkReqBuf_dataVec_2[109:78];
      2'd3:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d937 =
	      sq_pendingWorkReqBuf_dataVec_3[109:78];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d838 =
	      sq_pendingWorkReqBuf_dataVec_0[355:292];
      2'd1:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d838 =
	      sq_pendingWorkReqBuf_dataVec_1[355:292];
      2'd2:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d838 =
	      sq_pendingWorkReqBuf_dataVec_2[355:292];
      2'd3:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d838 =
	      sq_pendingWorkReqBuf_dataVec_3[355:292];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d855 =
	      sq_pendingWorkReqBuf_dataVec_0[290:227];
      2'd1:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d855 =
	      sq_pendingWorkReqBuf_dataVec_1[290:227];
      2'd2:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d855 =
	      sq_pendingWorkReqBuf_dataVec_2[290:227];
      2'd3:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d855 =
	      sq_pendingWorkReqBuf_dataVec_3[290:227];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d888 =
	      sq_pendingWorkReqBuf_dataVec_0[192:161];
      2'd1:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d888 =
	      sq_pendingWorkReqBuf_dataVec_1[192:161];
      2'd2:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d888 =
	      sq_pendingWorkReqBuf_dataVec_2[192:161];
      2'd3:
	  SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d888 =
	      sq_pendingWorkReqBuf_dataVec_3[192:161];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d816 =
	      sq_pendingWorkReqBuf_dataVec_0[381:358];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d816 =
	      sq_pendingWorkReqBuf_dataVec_1[381:358];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d816 =
	      sq_pendingWorkReqBuf_dataVec_2[381:358];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d816 =
	      sq_pendingWorkReqBuf_dataVec_3[381:358];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d804 =
	      sq_pendingWorkReqBuf_dataVec_0[477:414];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d804 =
	      sq_pendingWorkReqBuf_dataVec_1[477:414];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d804 =
	      sq_pendingWorkReqBuf_dataVec_2[477:414];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d804 =
	      sq_pendingWorkReqBuf_dataVec_3[477:414];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d792 =
	      sq_pendingWorkReqBuf_dataVec_0[541:510];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d792 =
	      sq_pendingWorkReqBuf_dataVec_1[541:510];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d792 =
	      sq_pendingWorkReqBuf_dataVec_2[541:510];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d792 =
	      sq_pendingWorkReqBuf_dataVec_3[541:510];
    endcase
  end
  always@(sq_pendingWorkReqBuf_scanPtrReg or
	  sq_pendingWorkReqBuf_dataVec_0 or
	  sq_pendingWorkReqBuf_dataVec_1 or
	  sq_pendingWorkReqBuf_dataVec_2 or sq_pendingWorkReqBuf_dataVec_3)
  begin
    case (sq_pendingWorkReqBuf_scanPtrReg)
      2'd0:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d780 =
	      sq_pendingWorkReqBuf_dataVec_0[610:606];
      2'd1:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d780 =
	      sq_pendingWorkReqBuf_dataVec_1[610:606];
      2'd2:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d780 =
	      sq_pendingWorkReqBuf_dataVec_2[610:606];
      2'd3:
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d780 =
	      sq_pendingWorkReqBuf_dataVec_3[610:606];
    endcase
  end
  always@(sq_reqGenSQ_reqHeaderPrepareQ_D_OUT or cntrl_sqTypeReg)
  begin
    case (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618])
      4'd0, 4'd1:
	  CASE_sq_reqGenSQ_reqHeaderPrepareQD_OUT_BITS__ETC__q18 =
	      cntrl_sqTypeReg == 4'd2 || cntrl_sqTypeReg == 4'd3 ||
	      cntrl_sqTypeReg == 4'd9;
      4'd2, 4'd3:
	  CASE_sq_reqGenSQ_reqHeaderPrepareQD_OUT_BITS__ETC__q18 =
	      cntrl_sqTypeReg == 4'd2 || cntrl_sqTypeReg == 4'd3 ||
	      cntrl_sqTypeReg == 4'd4 ||
	      cntrl_sqTypeReg == 4'd9;
      4'd4, 4'd9:
	  CASE_sq_reqGenSQ_reqHeaderPrepareQD_OUT_BITS__ETC__q18 =
	      cntrl_sqTypeReg == 4'd2 || cntrl_sqTypeReg == 4'd9;
      default: CASE_sq_reqGenSQ_reqHeaderPrepareQD_OUT_BITS__ETC__q18 =
		   (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5 ||
		    sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6) &&
		   (cntrl_sqTypeReg == 4'd2 || cntrl_sqTypeReg == 4'd9);
    endcase
  end
  always@(sq_reqGenSQ_reqHeaderPrepareQ_D_OUT or cntrl_sqTypeReg)
  begin
    case (sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618])
      4'd0, 4'd1, 4'd2, 4'd3:
	  CASE_sq_reqGenSQ_reqHeaderPrepareQD_OUT_BITS__ETC__q19 =
	      cntrl_sqTypeReg == 4'd2 || cntrl_sqTypeReg == 4'd9;
      default: CASE_sq_reqGenSQ_reqHeaderPrepareQD_OUT_BITS__ETC__q19 =
		   sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd9 &&
		   (cntrl_sqTypeReg == 4'd2 || cntrl_sqTypeReg == 4'd9);
    endcase
  end
  always@(sq_respHandleSQ_pendingRetryCheckQ_D_OUT or
	  sq_retryHandler_retryRespQ_D_OUT)
  begin
    case (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3])
      4'd9, 4'd10:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q20 =
	      sq_retryHandler_retryRespQ_D_OUT;
      default: CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q20 =
		   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd8;
    endcase
  end
  always@(sq_respHandleSQ_pendingRetryCheckQ_D_OUT or
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q20)
  begin
    case (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3])
      4'd1:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q21 =
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1398] ||
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] == 4'd4 ||
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] == 4'd5 ||
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] == 4'd6;
      4'd2:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q21 =
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] == 2'd3 &&
	      (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] == 5'd1 ||
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] == 5'd2 ||
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] == 5'd3 ||
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] == 5'd4);
      4'd3:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q21 =
	      (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1398] ||
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] == 4'd4 ||
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] == 4'd5 ||
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] == 4'd6) &&
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[12];
      default: CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q21 =
		   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd6 ||
		   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd7 ||
		   CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q20;
    endcase
  end
  always@(sq_respHandleSQ_pendingRetryCheckQ_D_OUT)
  begin
    case (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38])
      5'd1: CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q22 = 5'd9;
      5'd2: CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q22 = 5'd10;
      5'd3: CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q22 = 5'd11;
      default: CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q22 = 5'd15;
    endcase
  end
  always@(sq_respHandleSQ_pendingRetryCheckQ_D_OUT or
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q22)
  begin
    case (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3])
      4'd0: CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q23 = 5'd7;
      4'd1, 4'd3:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q23 = 5'd0;
      4'd2:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q23 =
	      CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q22;
      4'd6:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q23 =
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[142] ? 5'd1 : 5'd0;
      4'd7: CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q23 = 5'd5;
      4'd9, 4'd10:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q23 = 5'd12;
      default: CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q23 = 5'd20;
    endcase
  end
  always@(sq_respHandleSQ_pendingRetryCheckQ_D_OUT or
	  IF_sq_retryHandler_retryRespQ_first__023_THEN__ETC___d5182)
  begin
    case (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd4, 4'd5, 4'd6, 4'd7:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q24 =
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[2:1];
      4'd9, 4'd10:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q24 =
	      IF_sq_retryHandler_retryRespQ_first__023_THEN__ETC___d5182;
      default: CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q24 =
		   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[2:1];
    endcase
  end
  always@(sq_respHandleSQ_preStageRespTypeReg)
  begin
    case (sq_respHandleSQ_preStageRespTypeReg)
      2'd0, 2'd2:
	  IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4308 = 2'd0;
      2'd1: IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4308 = 2'd2;
      2'd3: IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4308 = 2'd3;
    endcase
  end
  always@(sq_respHandleSQ_preStageRespTypeReg)
  begin
    case (sq_respHandleSQ_preStageRespTypeReg)
      2'd0: IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4312 = 2'd1;
      2'd1: IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4312 = 2'd2;
      2'd2: IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4312 = 2'd0;
      2'd3: IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4312 = 2'd3;
    endcase
  end
  always@(sq_respHandleSQ_preStageRespTypeReg)
  begin
    case (sq_respHandleSQ_preStageRespTypeReg)
      2'd0: IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4298 = 4'd0;
      2'd1: IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4298 = 4'd1;
      2'd2: IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4298 = 4'd2;
      2'd3:
	  IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4298 = 4'd14;
    endcase
  end
  always@(sq_respHandleSQ_preStageRespTypeReg)
  begin
    case (sq_respHandleSQ_preStageRespTypeReg)
      2'd0: IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4302 = 4'd3;
      2'd1: IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4302 = 4'd4;
      2'd2: IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4302 = 4'd5;
      2'd3:
	  IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4302 = 4'd14;
    endcase
  end
  always@(sq_respHandleSQ_pendingRetryCheckQ_D_OUT)
  begin
    case (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3])
      4'd1, 4'd2, 4'd3:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q25 =
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[8];
      default: CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q25 =
		   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd5 ||
		   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd6 ||
		   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd4 ||
		   ((sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd7) ?
		      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[8] :
		      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd9 ||
		      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] ==
		      4'd10 ||
		      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[8]);
    endcase
  end
  always@(sq_respHandleSQ_pendingRetryCheckQ_D_OUT or
	  sq_retryHandler_retryRespQ_D_OUT)
  begin
    case (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3])
      4'd9, 4'd10:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q26 =
	      sq_retryHandler_retryRespQ_D_OUT ||
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[7];
      default: CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q26 =
		   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd8 ||
		   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[7];
    endcase
  end
  always@(sq_respHandleSQ_pendingRetryCheckQ_D_OUT or
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q26)
  begin
    case (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3])
      4'd1:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q27 =
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1398] ||
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] == 4'd4 ||
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] == 4'd5 ||
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] == 4'd6;
      4'd3:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q27 =
	      (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1398] ||
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] == 4'd4 ||
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] == 4'd5 ||
	       sq_respHandleSQ_pendingRetryCheckQ_D_OUT[1405:1402] == 4'd6) &&
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[12] ||
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[7];
      4'd5:
	  CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q27 =
	      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[7];
      default: CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q27 =
		   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd6 ||
		   ((sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd4) ?
		      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[7] :
		      sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd7 ||
		      CASE_sq_respHandleSQ_pendingRetryCheckQD_OUT__ETC__q26);
    endcase
  end
  always@(sq_respHandleSQ_incomingRespQ_D_OUT)
  begin
    case (sq_respHandleSQ_incomingRespQ_D_OUT[3:0])
      4'd0, 4'd3:
	  CASE_sq_respHandleSQ_incomingRespQD_OUT_BITS__ETC__q28 = 4'd3;
      4'd1, 4'd4:
	  CASE_sq_respHandleSQ_incomingRespQD_OUT_BITS__ETC__q28 = 4'd9;
      4'd2, 4'd5:
	  CASE_sq_respHandleSQ_incomingRespQD_OUT_BITS__ETC__q28 = 4'd2;
      4'd6: CASE_sq_respHandleSQ_incomingRespQD_OUT_BITS__ETC__q28 = 4'd1;
      4'd7: CASE_sq_respHandleSQ_incomingRespQD_OUT_BITS__ETC__q28 = 4'd10;
      4'd8: CASE_sq_respHandleSQ_incomingRespQD_OUT_BITS__ETC__q28 = 4'd5;
      4'd9, 4'd11:
	  CASE_sq_respHandleSQ_incomingRespQD_OUT_BITS__ETC__q28 = 4'd4;
      4'd10:
	  CASE_sq_respHandleSQ_incomingRespQD_OUT_BITS__ETC__q28 =
	      sq_respHandleSQ_incomingRespQ_D_OUT[142] ? 4'd6 : 4'd3;
      4'd12: CASE_sq_respHandleSQ_incomingRespQD_OUT_BITS__ETC__q28 = 4'd7;
      4'd13: CASE_sq_respHandleSQ_incomingRespQD_OUT_BITS__ETC__q28 = 4'd8;
      default: CASE_sq_respHandleSQ_incomingRespQD_OUT_BITS__ETC__q28 = 4'd13;
    endcase
  end
  always@(respPktPipe_metaDataQ_D_OUT)
  begin
    case (respPktPipe_metaDataQ_D_OUT[527:523])
      5'd0: CASE_respPktPipe_metaDataQD_OUT_BITS_527_TO_5_ETC__q29 = 2'd1;
      5'd1, 5'd2, 5'd3, 5'd4:
	  CASE_respPktPipe_metaDataQD_OUT_BITS_527_TO_5_ETC__q29 = 2'd2;
      default: CASE_respPktPipe_metaDataQD_OUT_BITS_527_TO_5_ETC__q29 = 2'd3;
    endcase
  end
  always@(respPktPipe_metaDataQ_D_OUT or
	  CASE_respPktPipe_metaDataQD_OUT_BITS_527_TO_5_ETC__q29)
  begin
    case (respPktPipe_metaDataQ_D_OUT[529:528])
      2'd0, 2'd1:
	  CASE_respPktPipe_metaDataQD_OUT_BITS_529_TO_5_ETC__q30 =
	      respPktPipe_metaDataQ_D_OUT[529:528];
      2'd2: CASE_respPktPipe_metaDataQD_OUT_BITS_529_TO_5_ETC__q30 = 2'd3;
      2'd3:
	  CASE_respPktPipe_metaDataQD_OUT_BITS_529_TO_5_ETC__q30 =
	      CASE_respPktPipe_metaDataQD_OUT_BITS_527_TO_5_ETC__q29;
    endcase
  end
  always@(sq_respHandleSQ_preStageRespAndWorkReqRelationReg or
	  IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4312 or
	  IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4308)
  begin
    case (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0])
      4'b0001, 4'b0010:
	  CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q31 =
	      IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4312;
      4'b0100:
	  CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q31 =
	      sq_respHandleSQ_preStageRespAndWorkReqRelationReg[4] ?
		2'd2 :
		2'd0;
      4'b1000, 4'b1010:
	  CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q31 =
	      IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4308;
      default: CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q31 = 2'd2;
    endcase
  end
  always@(sq_respHandleSQ_preStageRespAndWorkReqRelationReg or
	  IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4302 or
	  IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4298)
  begin
    case (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0])
      4'b0001, 4'b0010:
	  CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q32 =
	      IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4302;
      4'b0100:
	  CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q32 =
	      sq_respHandleSQ_preStageRespAndWorkReqRelationReg[4] ?
		4'd7 :
		4'd6;
      4'b1000, 4'b1010:
	  CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q32 =
	      IF_sq_respHandleSQ_preStageRespTypeReg_177_EQ__ETC___d4298;
      default: CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q32 = 4'd8;
    endcase
  end
  always@(sq_respHandleSQ_pendingRespQ_D_OUT)
  begin
    case (sq_respHandleSQ_pendingRespQ_D_OUT[47:46])
      2'd1: CASE_sq_respHandleSQ_pendingRespQD_OUT_BITS_4_ETC__q33 = 3'd1;
      2'd3:
	  CASE_sq_respHandleSQ_pendingRespQD_OUT_BITS_4_ETC__q33 =
	      (sq_respHandleSQ_pendingRespQ_D_OUT[45:41] == 5'd0) ?
		3'd2 :
		3'd0;
      default: CASE_sq_respHandleSQ_pendingRespQD_OUT_BITS_4_ETC__q33 = 3'd0;
    endcase
  end
  always@(sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT)
  begin
    case (sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565])
      4'd0, 4'd1:
	  CASE_sq_workCompGenSQ_pendingWorkCompQ4SQD_OU_ETC__q34 = 8'd1;
      4'd2, 4'd3, 4'd9:
	  CASE_sq_workCompGenSQ_pendingWorkCompQ4SQD_OU_ETC__q34 = 8'd0;
      4'd4: CASE_sq_workCompGenSQ_pendingWorkCompQ4SQD_OU_ETC__q34 = 8'd2;
      4'd5: CASE_sq_workCompGenSQ_pendingWorkCompQ4SQD_OU_ETC__q34 = 8'd3;
      4'd6: CASE_sq_workCompGenSQ_pendingWorkCompQ4SQD_OU_ETC__q34 = 8'd4;
      4'd7: CASE_sq_workCompGenSQ_pendingWorkCompQ4SQD_OU_ETC__q34 = 8'd6;
      4'd8: CASE_sq_workCompGenSQ_pendingWorkCompQ4SQD_OU_ETC__q34 = 8'd5;
      default: CASE_sq_workCompGenSQ_pendingWorkCompQ4SQD_OU_ETC__q34 = 8'd7;
    endcase
  end
  always@(sq_respHandleSQ_preStageRespAndWorkReqRelationReg or
	  sq_respHandleSQ_preStageRespTypeReg)
  begin
    case (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0])
      4'b0100:
	  CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q35 =
	      sq_respHandleSQ_preStageRespAndWorkReqRelationReg[4];
      4'b1000, 4'b1010:
	  CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q35 =
	      sq_respHandleSQ_preStageRespTypeReg == 2'd1;
      default: CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q35 =
		   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
		   4'b0010 &&
		   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
		   4'b0001 ||
		   sq_respHandleSQ_preStageRespTypeReg == 2'd1;
    endcase
  end
  always@(sq_respHandleSQ_preStageRespAndWorkReqRelationReg or
	  sq_respHandleSQ_preStageRespTypeReg)
  begin
    case (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0])
      4'b0100:
	  CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q36 =
	      !sq_respHandleSQ_preStageRespAndWorkReqRelationReg[4];
      4'b1000, 4'b1010:
	  CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q36 =
	      sq_respHandleSQ_preStageRespTypeReg != 2'd1;
      default: CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q36 =
		   (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
		    4'b0010 ||
		    sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
		    4'b0001) &&
		   sq_respHandleSQ_preStageRespTypeReg != 2'd1;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cntrl_nextStateReg <= `BSV_ASSIGNMENT_DELAY 5'd10;
	cntrl_pendingRecvReqNumReg <= `BSV_ASSIGNMENT_DELAY 8'd4;
	cntrl_pendingWorkReqNumReg <= `BSV_ASSIGNMENT_DELAY 8'd4;
	cntrl_preReqOpCodeReg <= `BSV_ASSIGNMENT_DELAY 5'd4;
	cntrl_preStateReg <= `BSV_ASSIGNMENT_DELAY 4'd7;
	cntrl_qpDestroyReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cntrl_setStateErrReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cntrl_stateReg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	dmaReadCntrl4SQ_addrChunkSrv_busyReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dmaReadCntrl4SQ_addrChunkSrv_isFirstReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dmaReadCntrl4SQ_cancelReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dmaReadCntrl4SQ_gracefulStopReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	payloadGenerator4SQ_isNormalStateReg <= `BSV_ASSIGNMENT_DELAY 1'd1;
	payloadGenerator4SQ_payloadBufQ_rCache <= `BSV_ASSIGNMENT_DELAY
	    301'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	payloadGenerator4SQ_payloadBufQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY 10'd0;
	payloadGenerator4SQ_payloadBufQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY 10'd0;
	rqDmaReadCancelReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rqDmaWriteCancelReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sqDmaReadCancelReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg <= `BSV_ASSIGNMENT_DELAY
	    9'd170;
	sq_pendingWorkReqBuf_clearReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sq_pendingWorkReqBuf_deqPtrReg <= `BSV_ASSIGNMENT_DELAY 2'd0;
	sq_pendingWorkReqBuf_emptyReg <= `BSV_ASSIGNMENT_DELAY 1'd1;
	sq_pendingWorkReqBuf_enqPtrReg <= `BSV_ASSIGNMENT_DELAY 2'd0;
	sq_pendingWorkReqBuf_fullReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sq_pendingWorkReqBuf_popReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sq_pendingWorkReqBuf_preScanRestartReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sq_pendingWorkReqBuf_preScanStartReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sq_pendingWorkReqBuf_pushReg <= `BSV_ASSIGNMENT_DELAY
	    680'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	sq_pendingWorkReqBuf_scanDoneReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sq_pendingWorkReqBuf_scanStartReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sq_pendingWorkReqBuf_scanStateReg <= `BSV_ASSIGNMENT_DELAY 2'd0;
	sq_pendingWorkReqBuf_scanStopReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sq_reqGenSQ_isFirstOrOnlyReqPktReg <= `BSV_ASSIGNMENT_DELAY 1'd1;
	sq_reqGenSQ_isNormalStateReg <= `BSV_ASSIGNMENT_DELAY 1'd1;
	sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg <= `BSV_ASSIGNMENT_DELAY
	    2'd0;
	sq_respHandleSQ_errOccurredReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sq_respHandleSQ_hasInternalErrReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sq_respHandleSQ_hasTimeOutErrReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sq_respHandleSQ_preRdmaOpCodeReg <= `BSV_ASSIGNMENT_DELAY 5'd17;
	sq_respHandleSQ_preStageStateReg <= `BSV_ASSIGNMENT_DELAY 2'd0;
	sq_respHandleSQ_recvErrRespReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sq_respHandleSQ_recvRetryRespReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sq_respHandleSQ_retryFlushReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sq_retryHandler_pauseRetryHandleReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sq_retryHandler_retryCntrlStateReg <= `BSV_ASSIGNMENT_DELAY 2'd0;
	sq_retryHandler_retryHandleStateReg <= `BSV_ASSIGNMENT_DELAY 3'd0;
	sq_workCompGenSQ_workCompGenStateReg <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (cntrl_nextStateReg_EN)
	  cntrl_nextStateReg <= `BSV_ASSIGNMENT_DELAY cntrl_nextStateReg_D_IN;
	if (cntrl_pendingRecvReqNumReg_EN)
	  cntrl_pendingRecvReqNumReg <= `BSV_ASSIGNMENT_DELAY
	      cntrl_pendingRecvReqNumReg_D_IN;
	if (cntrl_pendingWorkReqNumReg_EN)
	  cntrl_pendingWorkReqNumReg <= `BSV_ASSIGNMENT_DELAY
	      cntrl_pendingWorkReqNumReg_D_IN;
	if (cntrl_preReqOpCodeReg_EN)
	  cntrl_preReqOpCodeReg <= `BSV_ASSIGNMENT_DELAY
	      cntrl_preReqOpCodeReg_D_IN;
	if (cntrl_preStateReg_EN)
	  cntrl_preStateReg <= `BSV_ASSIGNMENT_DELAY cntrl_preStateReg_D_IN;
	if (cntrl_qpDestroyReg_EN)
	  cntrl_qpDestroyReg <= `BSV_ASSIGNMENT_DELAY cntrl_qpDestroyReg_D_IN;
	if (cntrl_setStateErrReg_EN)
	  cntrl_setStateErrReg <= `BSV_ASSIGNMENT_DELAY
	      cntrl_setStateErrReg_D_IN;
	if (cntrl_stateReg_EN)
	  cntrl_stateReg <= `BSV_ASSIGNMENT_DELAY cntrl_stateReg_D_IN;
	if (dmaReadCntrl4SQ_addrChunkSrv_busyReg_EN)
	  dmaReadCntrl4SQ_addrChunkSrv_busyReg <= `BSV_ASSIGNMENT_DELAY
	      dmaReadCntrl4SQ_addrChunkSrv_busyReg_D_IN;
	if (dmaReadCntrl4SQ_addrChunkSrv_isFirstReg_EN)
	  dmaReadCntrl4SQ_addrChunkSrv_isFirstReg <= `BSV_ASSIGNMENT_DELAY
	      dmaReadCntrl4SQ_addrChunkSrv_isFirstReg_D_IN;
	if (dmaReadCntrl4SQ_cancelReg_EN)
	  dmaReadCntrl4SQ_cancelReg <= `BSV_ASSIGNMENT_DELAY
	      dmaReadCntrl4SQ_cancelReg_D_IN;
	if (dmaReadCntrl4SQ_gracefulStopReg_EN)
	  dmaReadCntrl4SQ_gracefulStopReg <= `BSV_ASSIGNMENT_DELAY
	      dmaReadCntrl4SQ_gracefulStopReg_D_IN;
	if (payloadGenerator4SQ_isNormalStateReg_EN)
	  payloadGenerator4SQ_isNormalStateReg <= `BSV_ASSIGNMENT_DELAY
	      payloadGenerator4SQ_isNormalStateReg_D_IN;
	if (payloadGenerator4SQ_payloadBufQ_rCache_EN)
	  payloadGenerator4SQ_payloadBufQ_rCache <= `BSV_ASSIGNMENT_DELAY
	      payloadGenerator4SQ_payloadBufQ_rCache_D_IN;
	if (payloadGenerator4SQ_payloadBufQ_rRdPtr_EN)
	  payloadGenerator4SQ_payloadBufQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      payloadGenerator4SQ_payloadBufQ_rRdPtr_D_IN;
	if (payloadGenerator4SQ_payloadBufQ_rWrPtr_EN)
	  payloadGenerator4SQ_payloadBufQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      payloadGenerator4SQ_payloadBufQ_rWrPtr_D_IN;
	if (rqDmaReadCancelReg_EN)
	  rqDmaReadCancelReg <= `BSV_ASSIGNMENT_DELAY rqDmaReadCancelReg_D_IN;
	if (rqDmaWriteCancelReg_EN)
	  rqDmaWriteCancelReg <= `BSV_ASSIGNMENT_DELAY
	      rqDmaWriteCancelReg_D_IN;
	if (sqDmaReadCancelReg_EN)
	  sqDmaReadCancelReg <= `BSV_ASSIGNMENT_DELAY sqDmaReadCancelReg_D_IN;
	if (sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg_EN)
	  sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg <= `BSV_ASSIGNMENT_DELAY
	      sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg_D_IN;
	if (sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_EN)
	  sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg <= `BSV_ASSIGNMENT_DELAY
	      sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg_D_IN;
	if (sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_EN)
	  sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg <= `BSV_ASSIGNMENT_DELAY
	      sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg_D_IN;
	if (sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_EN)
	  sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg <= `BSV_ASSIGNMENT_DELAY
	      sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg_D_IN;
	if (sq_pendingWorkReqBuf_clearReg_EN)
	  sq_pendingWorkReqBuf_clearReg <= `BSV_ASSIGNMENT_DELAY
	      sq_pendingWorkReqBuf_clearReg_D_IN;
	if (sq_pendingWorkReqBuf_deqPtrReg_EN)
	  sq_pendingWorkReqBuf_deqPtrReg <= `BSV_ASSIGNMENT_DELAY
	      sq_pendingWorkReqBuf_deqPtrReg_D_IN;
	if (sq_pendingWorkReqBuf_emptyReg_EN)
	  sq_pendingWorkReqBuf_emptyReg <= `BSV_ASSIGNMENT_DELAY
	      sq_pendingWorkReqBuf_emptyReg_D_IN;
	if (sq_pendingWorkReqBuf_enqPtrReg_EN)
	  sq_pendingWorkReqBuf_enqPtrReg <= `BSV_ASSIGNMENT_DELAY
	      sq_pendingWorkReqBuf_enqPtrReg_D_IN;
	if (sq_pendingWorkReqBuf_fullReg_EN)
	  sq_pendingWorkReqBuf_fullReg <= `BSV_ASSIGNMENT_DELAY
	      sq_pendingWorkReqBuf_fullReg_D_IN;
	if (sq_pendingWorkReqBuf_popReg_EN)
	  sq_pendingWorkReqBuf_popReg <= `BSV_ASSIGNMENT_DELAY
	      sq_pendingWorkReqBuf_popReg_D_IN;
	if (sq_pendingWorkReqBuf_preScanRestartReg_EN)
	  sq_pendingWorkReqBuf_preScanRestartReg <= `BSV_ASSIGNMENT_DELAY
	      sq_pendingWorkReqBuf_preScanRestartReg_D_IN;
	if (sq_pendingWorkReqBuf_preScanStartReg_EN)
	  sq_pendingWorkReqBuf_preScanStartReg <= `BSV_ASSIGNMENT_DELAY
	      sq_pendingWorkReqBuf_preScanStartReg_D_IN;
	if (sq_pendingWorkReqBuf_pushReg_EN)
	  sq_pendingWorkReqBuf_pushReg <= `BSV_ASSIGNMENT_DELAY
	      sq_pendingWorkReqBuf_pushReg_D_IN;
	if (sq_pendingWorkReqBuf_scanDoneReg_EN)
	  sq_pendingWorkReqBuf_scanDoneReg <= `BSV_ASSIGNMENT_DELAY
	      sq_pendingWorkReqBuf_scanDoneReg_D_IN;
	if (sq_pendingWorkReqBuf_scanStartReg_EN)
	  sq_pendingWorkReqBuf_scanStartReg <= `BSV_ASSIGNMENT_DELAY
	      sq_pendingWorkReqBuf_scanStartReg_D_IN;
	if (sq_pendingWorkReqBuf_scanStateReg_EN)
	  sq_pendingWorkReqBuf_scanStateReg <= `BSV_ASSIGNMENT_DELAY
	      sq_pendingWorkReqBuf_scanStateReg_D_IN;
	if (sq_pendingWorkReqBuf_scanStopReg_EN)
	  sq_pendingWorkReqBuf_scanStopReg <= `BSV_ASSIGNMENT_DELAY
	      sq_pendingWorkReqBuf_scanStopReg_D_IN;
	if (sq_reqGenSQ_isFirstOrOnlyReqPktReg_EN)
	  sq_reqGenSQ_isFirstOrOnlyReqPktReg <= `BSV_ASSIGNMENT_DELAY
	      sq_reqGenSQ_isFirstOrOnlyReqPktReg_D_IN;
	if (sq_reqGenSQ_isNormalStateReg_EN)
	  sq_reqGenSQ_isNormalStateReg <= `BSV_ASSIGNMENT_DELAY
	      sq_reqGenSQ_isNormalStateReg_D_IN;
	if (sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg_EN)
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg <= `BSV_ASSIGNMENT_DELAY
	      sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg_D_IN;
	if (sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_EN)
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg <= `BSV_ASSIGNMENT_DELAY
	      sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg_D_IN;
	if (sq_respHandleSQ_errOccurredReg_EN)
	  sq_respHandleSQ_errOccurredReg <= `BSV_ASSIGNMENT_DELAY
	      sq_respHandleSQ_errOccurredReg_D_IN;
	if (sq_respHandleSQ_hasInternalErrReg_EN)
	  sq_respHandleSQ_hasInternalErrReg <= `BSV_ASSIGNMENT_DELAY
	      sq_respHandleSQ_hasInternalErrReg_D_IN;
	if (sq_respHandleSQ_hasTimeOutErrReg_EN)
	  sq_respHandleSQ_hasTimeOutErrReg <= `BSV_ASSIGNMENT_DELAY
	      sq_respHandleSQ_hasTimeOutErrReg_D_IN;
	if (sq_respHandleSQ_preRdmaOpCodeReg_EN)
	  sq_respHandleSQ_preRdmaOpCodeReg <= `BSV_ASSIGNMENT_DELAY
	      sq_respHandleSQ_preRdmaOpCodeReg_D_IN;
	if (sq_respHandleSQ_preStageStateReg_EN)
	  sq_respHandleSQ_preStageStateReg <= `BSV_ASSIGNMENT_DELAY
	      sq_respHandleSQ_preStageStateReg_D_IN;
	if (sq_respHandleSQ_recvErrRespReg_EN)
	  sq_respHandleSQ_recvErrRespReg <= `BSV_ASSIGNMENT_DELAY
	      sq_respHandleSQ_recvErrRespReg_D_IN;
	if (sq_respHandleSQ_recvRetryRespReg_EN)
	  sq_respHandleSQ_recvRetryRespReg <= `BSV_ASSIGNMENT_DELAY
	      sq_respHandleSQ_recvRetryRespReg_D_IN;
	if (sq_respHandleSQ_retryFlushReg_EN)
	  sq_respHandleSQ_retryFlushReg <= `BSV_ASSIGNMENT_DELAY
	      sq_respHandleSQ_retryFlushReg_D_IN;
	if (sq_retryHandler_pauseRetryHandleReg_EN)
	  sq_retryHandler_pauseRetryHandleReg <= `BSV_ASSIGNMENT_DELAY
	      sq_retryHandler_pauseRetryHandleReg_D_IN;
	if (sq_retryHandler_retryCntrlStateReg_EN)
	  sq_retryHandler_retryCntrlStateReg <= `BSV_ASSIGNMENT_DELAY
	      sq_retryHandler_retryCntrlStateReg_D_IN;
	if (sq_retryHandler_retryHandleStateReg_EN)
	  sq_retryHandler_retryHandleStateReg <= `BSV_ASSIGNMENT_DELAY
	      sq_retryHandler_retryHandleStateReg_D_IN;
	if (sq_workCompGenSQ_workCompGenStateReg_EN)
	  sq_workCompGenSQ_workCompGenStateReg <= `BSV_ASSIGNMENT_DELAY
	      sq_workCompGenSQ_workCompGenStateReg_D_IN;
      end
    if (cntrl_dqpnReg_EN)
      cntrl_dqpnReg <= `BSV_ASSIGNMENT_DELAY cntrl_dqpnReg_D_IN;
    if (cntrl_epsnReg_EN)
      cntrl_epsnReg <= `BSV_ASSIGNMENT_DELAY cntrl_epsnReg_D_IN;
    if (cntrl_errFlushDoneReg_EN)
      cntrl_errFlushDoneReg <= `BSV_ASSIGNMENT_DELAY
	  cntrl_errFlushDoneReg_D_IN;
    if (cntrl_maxRetryCntReg_EN)
      cntrl_maxRetryCntReg <= `BSV_ASSIGNMENT_DELAY cntrl_maxRetryCntReg_D_IN;
    if (cntrl_maxRnrCntReg_EN)
      cntrl_maxRnrCntReg <= `BSV_ASSIGNMENT_DELAY cntrl_maxRnrCntReg_D_IN;
    if (cntrl_maxTimeOutReg_EN)
      cntrl_maxTimeOutReg <= `BSV_ASSIGNMENT_DELAY cntrl_maxTimeOutReg_D_IN;
    if (cntrl_minRnrTimerReg_EN)
      cntrl_minRnrTimerReg <= `BSV_ASSIGNMENT_DELAY cntrl_minRnrTimerReg_D_IN;
    if (cntrl_npsnReg_EN)
      cntrl_npsnReg <= `BSV_ASSIGNMENT_DELAY cntrl_npsnReg_D_IN;
    if (cntrl_pendingDestReadAtomicReqNumReg_EN)
      cntrl_pendingDestReadAtomicReqNumReg <= `BSV_ASSIGNMENT_DELAY
	  cntrl_pendingDestReadAtomicReqNumReg_D_IN;
    if (cntrl_pendingReadAtomicReqNumReg_EN)
      cntrl_pendingReadAtomicReqNumReg <= `BSV_ASSIGNMENT_DELAY
	  cntrl_pendingReadAtomicReqNumReg_D_IN;
    if (cntrl_pkeyReg_EN)
      cntrl_pkeyReg <= `BSV_ASSIGNMENT_DELAY cntrl_pkeyReg_D_IN;
    if (cntrl_pmtuReg_EN)
      cntrl_pmtuReg <= `BSV_ASSIGNMENT_DELAY cntrl_pmtuReg_D_IN;
    if (cntrl_qkeyReg_EN)
      cntrl_qkeyReg <= `BSV_ASSIGNMENT_DELAY cntrl_qkeyReg_D_IN;
    if (cntrl_qpAccessFlagsReg_EN)
      cntrl_qpAccessFlagsReg <= `BSV_ASSIGNMENT_DELAY
	  cntrl_qpAccessFlagsReg_D_IN;
    if (cntrl_sqSigAllReg_EN)
      cntrl_sqSigAllReg <= `BSV_ASSIGNMENT_DELAY cntrl_sqSigAllReg_D_IN;
    if (cntrl_sqTypeReg_EN)
      cntrl_sqTypeReg <= `BSV_ASSIGNMENT_DELAY cntrl_sqTypeReg_D_IN;
    if (cntrl_sqpnReg_EN)
      cntrl_sqpnReg <= `BSV_ASSIGNMENT_DELAY cntrl_sqpnReg_D_IN;
    if (dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg_EN)
      dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg <= `BSV_ASSIGNMENT_DELAY
	  dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg_D_IN;
    if (dmaReadCntrl4SQ_addrChunkSrv_fullPktLenReg_EN)
      dmaReadCntrl4SQ_addrChunkSrv_fullPktLenReg <= `BSV_ASSIGNMENT_DELAY
	  dmaReadCntrl4SQ_addrChunkSrv_fullPktLenReg_D_IN;
    if (dmaReadCntrl4SQ_addrChunkSrv_isZeroResidueReg_EN)
      dmaReadCntrl4SQ_addrChunkSrv_isZeroResidueReg <= `BSV_ASSIGNMENT_DELAY
	  dmaReadCntrl4SQ_addrChunkSrv_isZeroResidueReg_D_IN;
    if (dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_EN)
      dmaReadCntrl4SQ_addrChunkSrv_pktNumReg <= `BSV_ASSIGNMENT_DELAY
	  dmaReadCntrl4SQ_addrChunkSrv_pktNumReg_D_IN;
    if (dmaReadCntrl4SQ_addrChunkSrv_pmtuReg_EN)
      dmaReadCntrl4SQ_addrChunkSrv_pmtuReg <= `BSV_ASSIGNMENT_DELAY
	  dmaReadCntrl4SQ_addrChunkSrv_pmtuReg_D_IN;
    if (dmaReadCntrl4SQ_addrChunkSrv_residueReg_EN)
      dmaReadCntrl4SQ_addrChunkSrv_residueReg <= `BSV_ASSIGNMENT_DELAY
	  dmaReadCntrl4SQ_addrChunkSrv_residueReg_D_IN;
    if (sq_pendingWorkReqBuf_dataVec_0_EN)
      sq_pendingWorkReqBuf_dataVec_0 <= `BSV_ASSIGNMENT_DELAY
	  sq_pendingWorkReqBuf_dataVec_0_D_IN;
    if (sq_pendingWorkReqBuf_dataVec_1_EN)
      sq_pendingWorkReqBuf_dataVec_1 <= `BSV_ASSIGNMENT_DELAY
	  sq_pendingWorkReqBuf_dataVec_1_D_IN;
    if (sq_pendingWorkReqBuf_dataVec_2_EN)
      sq_pendingWorkReqBuf_dataVec_2 <= `BSV_ASSIGNMENT_DELAY
	  sq_pendingWorkReqBuf_dataVec_2_D_IN;
    if (sq_pendingWorkReqBuf_dataVec_3_EN)
      sq_pendingWorkReqBuf_dataVec_3 <= `BSV_ASSIGNMENT_DELAY
	  sq_pendingWorkReqBuf_dataVec_3_D_IN;
    if (sq_pendingWorkReqBuf_headReg_EN)
      sq_pendingWorkReqBuf_headReg <= `BSV_ASSIGNMENT_DELAY
	  sq_pendingWorkReqBuf_headReg_D_IN;
    if (sq_pendingWorkReqBuf_scanAlmostDoneReg_EN)
      sq_pendingWorkReqBuf_scanAlmostDoneReg <= `BSV_ASSIGNMENT_DELAY
	  sq_pendingWorkReqBuf_scanAlmostDoneReg_D_IN;
    if (sq_pendingWorkReqBuf_scanPtrReg_EN)
      sq_pendingWorkReqBuf_scanPtrReg <= `BSV_ASSIGNMENT_DELAY
	  sq_pendingWorkReqBuf_scanPtrReg_D_IN;
    if (sq_reqGenSQ_curPsnReg_EN)
      sq_reqGenSQ_curPsnReg <= `BSV_ASSIGNMENT_DELAY
	  sq_reqGenSQ_curPsnReg_D_IN;
    if (sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg_EN)
      sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg <= `BSV_ASSIGNMENT_DELAY
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg_D_IN;
    if (sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg_EN)
      sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg <= `BSV_ASSIGNMENT_DELAY
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg_D_IN;
    if (sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerHasPayloadReg_EN)
      sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerHasPayloadReg <= `BSV_ASSIGNMENT_DELAY
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerHasPayloadReg_D_IN;
    if (sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidBitNumReg_EN)
      sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidBitNumReg <= `BSV_ASSIGNMENT_DELAY
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidBitNumReg_D_IN;
    if (sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidByteNumReg_EN)
      sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidByteNumReg <= `BSV_ASSIGNMENT_DELAY
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidByteNumReg_D_IN;
    if (sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidBitNumReg_EN)
      sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidBitNumReg <= `BSV_ASSIGNMENT_DELAY
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidBitNumReg_D_IN;
    if (sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidByteNumReg_EN)
      sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidByteNumReg <= `BSV_ASSIGNMENT_DELAY
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidByteNumReg_D_IN;
    if (sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_isFirstReg_EN)
      sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_isFirstReg <= `BSV_ASSIGNMENT_DELAY
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_isFirstReg_D_IN;
    if (sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg_EN)
      sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg <= `BSV_ASSIGNMENT_DELAY
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg_D_IN;
    if (sq_reqGenSQ_remainingPktNumReg_EN)
      sq_reqGenSQ_remainingPktNumReg <= `BSV_ASSIGNMENT_DELAY
	  sq_reqGenSQ_remainingPktNumReg_D_IN;
    if (sq_respHandleSQ_nextReadRespWriteAddrReg_EN)
      sq_respHandleSQ_nextReadRespWriteAddrReg <= `BSV_ASSIGNMENT_DELAY
	  sq_respHandleSQ_nextReadRespWriteAddrReg_D_IN;
    if (sq_respHandleSQ_preStageDeqPendingWorkReqReg_EN)
      sq_respHandleSQ_preStageDeqPendingWorkReqReg <= `BSV_ASSIGNMENT_DELAY
	  sq_respHandleSQ_preStageDeqPendingWorkReqReg_D_IN;
    if (sq_respHandleSQ_preStageDeqPktMetaDataReg_EN)
      sq_respHandleSQ_preStageDeqPktMetaDataReg <= `BSV_ASSIGNMENT_DELAY
	  sq_respHandleSQ_preStageDeqPktMetaDataReg_D_IN;
    if (sq_respHandleSQ_preStagePktMetaDataReg_EN)
      sq_respHandleSQ_preStagePktMetaDataReg <= `BSV_ASSIGNMENT_DELAY
	  sq_respHandleSQ_preStagePktMetaDataReg_D_IN;
    if (sq_respHandleSQ_preStageReqPktInfoReg_EN)
      sq_respHandleSQ_preStageReqPktInfoReg <= `BSV_ASSIGNMENT_DELAY
	  sq_respHandleSQ_preStageReqPktInfoReg_D_IN;
    if (sq_respHandleSQ_preStageRespAndWorkReqRelationReg_EN)
      sq_respHandleSQ_preStageRespAndWorkReqRelationReg <= `BSV_ASSIGNMENT_DELAY
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg_D_IN;
    if (sq_respHandleSQ_preStageRespTypeReg_EN)
      sq_respHandleSQ_preStageRespTypeReg <= `BSV_ASSIGNMENT_DELAY
	  sq_respHandleSQ_preStageRespTypeReg_D_IN;
    if (sq_respHandleSQ_preStageWorkCompReqTypeReg_EN)
      sq_respHandleSQ_preStageWorkCompReqTypeReg <= `BSV_ASSIGNMENT_DELAY
	  sq_respHandleSQ_preStageWorkCompReqTypeReg_D_IN;
    if (sq_respHandleSQ_preStageWorkReqAckTypeReg_EN)
      sq_respHandleSQ_preStageWorkReqAckTypeReg <= `BSV_ASSIGNMENT_DELAY
	  sq_respHandleSQ_preStageWorkReqAckTypeReg_D_IN;
    if (sq_respHandleSQ_remainingReadRespLenReg_EN)
      sq_respHandleSQ_remainingReadRespLenReg <= `BSV_ASSIGNMENT_DELAY
	  sq_respHandleSQ_remainingReadRespLenReg_D_IN;
    if (sq_respHandleSQ_retryResetReqReg_EN)
      sq_respHandleSQ_retryResetReqReg <= `BSV_ASSIGNMENT_DELAY
	  sq_respHandleSQ_retryResetReqReg_D_IN;
    if (sq_retryHandler_disableRetryCntReg_EN)
      sq_retryHandler_disableRetryCntReg <= `BSV_ASSIGNMENT_DELAY
	  sq_retryHandler_disableRetryCntReg_D_IN;
    if (sq_retryHandler_disableTimeOutReg_EN)
      sq_retryHandler_disableTimeOutReg <= `BSV_ASSIGNMENT_DELAY
	  sq_retryHandler_disableTimeOutReg_D_IN;
    if (sq_retryHandler_isRnrWaitCntZeroReg_EN)
      sq_retryHandler_isRnrWaitCntZeroReg <= `BSV_ASSIGNMENT_DELAY
	  sq_retryHandler_isRnrWaitCntZeroReg_D_IN;
    if (sq_retryHandler_isTimeOutCntHighPartZeroReg_EN)
      sq_retryHandler_isTimeOutCntHighPartZeroReg <= `BSV_ASSIGNMENT_DELAY
	  sq_retryHandler_isTimeOutCntHighPartZeroReg_D_IN;
    if (sq_retryHandler_isTimeOutCntLowPartZeroReg_EN)
      sq_retryHandler_isTimeOutCntLowPartZeroReg <= `BSV_ASSIGNMENT_DELAY
	  sq_retryHandler_isTimeOutCntLowPartZeroReg_D_IN;
    if (sq_retryHandler_psnDiffReg_EN)
      sq_retryHandler_psnDiffReg <= `BSV_ASSIGNMENT_DELAY
	  sq_retryHandler_psnDiffReg_D_IN;
    if (sq_retryHandler_retryCntReg_EN)
      sq_retryHandler_retryCntReg <= `BSV_ASSIGNMENT_DELAY
	  sq_retryHandler_retryCntReg_D_IN;
    if (sq_retryHandler_retryReasonReg_EN)
      sq_retryHandler_retryReasonReg <= `BSV_ASSIGNMENT_DELAY
	  sq_retryHandler_retryReasonReg_D_IN;
    if (sq_retryHandler_retryRnrTimerReg_EN)
      sq_retryHandler_retryRnrTimerReg <= `BSV_ASSIGNMENT_DELAY
	  sq_retryHandler_retryRnrTimerReg_D_IN;
    if (sq_retryHandler_retryStartPsnReg_EN)
      sq_retryHandler_retryStartPsnReg <= `BSV_ASSIGNMENT_DELAY
	  sq_retryHandler_retryStartPsnReg_D_IN;
    if (sq_retryHandler_retryWorkReqIdReg_EN)
      sq_retryHandler_retryWorkReqIdReg <= `BSV_ASSIGNMENT_DELAY
	  sq_retryHandler_retryWorkReqIdReg_D_IN;
    if (sq_retryHandler_rnrCntReg_EN)
      sq_retryHandler_rnrCntReg <= `BSV_ASSIGNMENT_DELAY
	  sq_retryHandler_rnrCntReg_D_IN;
    if (sq_retryHandler_rnrWaitCntReg_EN)
      sq_retryHandler_rnrWaitCntReg <= `BSV_ASSIGNMENT_DELAY
	  sq_retryHandler_rnrWaitCntReg_D_IN;
    if (sq_retryHandler_timeOutCntReg_EN)
      sq_retryHandler_timeOutCntReg <= `BSV_ASSIGNMENT_DELAY
	  sq_retryHandler_timeOutCntReg_D_IN;
    if (sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg_EN)
      sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg <= `BSV_ASSIGNMENT_DELAY
	  sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg_D_IN;
    if (sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_EN)
      sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg <= `BSV_ASSIGNMENT_DELAY
	  sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg_D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cntrl_dqpnReg = 24'hAAAAAA;
    cntrl_epsnReg = 24'hAAAAAA;
    cntrl_errFlushDoneReg = 1'h0;
    cntrl_maxRetryCntReg = 3'h2;
    cntrl_maxRnrCntReg = 3'h2;
    cntrl_maxTimeOutReg = 5'h0A;
    cntrl_minRnrTimerReg = 5'h0A;
    cntrl_nextStateReg = 5'h0A;
    cntrl_npsnReg = 24'hAAAAAA;
    cntrl_pendingDestReadAtomicReqNumReg = 8'hAA;
    cntrl_pendingReadAtomicReqNumReg = 8'hAA;
    cntrl_pendingRecvReqNumReg = 8'hAA;
    cntrl_pendingWorkReqNumReg = 8'hAA;
    cntrl_pkeyReg = 16'hAAAA;
    cntrl_pmtuReg = 3'h2;
    cntrl_preReqOpCodeReg = 5'h0A;
    cntrl_preStateReg = 4'hA;
    cntrl_qkeyReg = 32'hAAAAAAAA;
    cntrl_qpAccessFlagsReg = 8'hAA;
    cntrl_qpDestroyReg = 1'h0;
    cntrl_setStateErrReg = 1'h0;
    cntrl_sqSigAllReg = 1'h0;
    cntrl_sqTypeReg = 4'hA;
    cntrl_sqpnReg = 24'hAAAAAA;
    cntrl_stateReg = 4'hA;
    dmaReadCntrl4SQ_addrChunkSrv_busyReg = 1'h0;
    dmaReadCntrl4SQ_addrChunkSrv_chunkAddrReg = 64'hAAAAAAAAAAAAAAAA;
    dmaReadCntrl4SQ_addrChunkSrv_fullPktLenReg = 13'h0AAA;
    dmaReadCntrl4SQ_addrChunkSrv_isFirstReg = 1'h0;
    dmaReadCntrl4SQ_addrChunkSrv_isZeroResidueReg = 1'h0;
    dmaReadCntrl4SQ_addrChunkSrv_pktNumReg = 25'h0AAAAAA;
    dmaReadCntrl4SQ_addrChunkSrv_pmtuReg = 3'h2;
    dmaReadCntrl4SQ_addrChunkSrv_residueReg = 12'hAAA;
    dmaReadCntrl4SQ_cancelReg = 1'h0;
    dmaReadCntrl4SQ_gracefulStopReg = 1'h0;
    payloadGenerator4SQ_isNormalStateReg = 1'h0;
    payloadGenerator4SQ_payloadBufQ_rCache =
	301'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    payloadGenerator4SQ_payloadBufQ_rRdPtr = 10'h2AA;
    payloadGenerator4SQ_payloadBufQ_rWrPtr = 10'h2AA;
    rqDmaReadCancelReg = 1'h0;
    rqDmaWriteCancelReg = 1'h0;
    sqDmaReadCancelReg = 1'h0;
    sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg = 8'hAA;
    sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_decrReg = 1'h0;
    sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_incrReg = 1'h0;
    sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_writeReg = 9'h0AA;
    sq_pendingWorkReqBuf_clearReg = 1'h0;
    sq_pendingWorkReqBuf_dataVec_0 =
	679'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    sq_pendingWorkReqBuf_dataVec_1 =
	679'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    sq_pendingWorkReqBuf_dataVec_2 =
	679'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    sq_pendingWorkReqBuf_dataVec_3 =
	679'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    sq_pendingWorkReqBuf_deqPtrReg = 2'h2;
    sq_pendingWorkReqBuf_emptyReg = 1'h0;
    sq_pendingWorkReqBuf_enqPtrReg = 2'h2;
    sq_pendingWorkReqBuf_fullReg = 1'h0;
    sq_pendingWorkReqBuf_headReg =
	680'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    sq_pendingWorkReqBuf_popReg = 1'h0;
    sq_pendingWorkReqBuf_preScanRestartReg = 1'h0;
    sq_pendingWorkReqBuf_preScanStartReg = 1'h0;
    sq_pendingWorkReqBuf_pushReg =
	680'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    sq_pendingWorkReqBuf_scanAlmostDoneReg = 1'h0;
    sq_pendingWorkReqBuf_scanDoneReg = 1'h0;
    sq_pendingWorkReqBuf_scanPtrReg = 2'h2;
    sq_pendingWorkReqBuf_scanStartReg = 1'h0;
    sq_pendingWorkReqBuf_scanStateReg = 2'h2;
    sq_pendingWorkReqBuf_scanStopReg = 1'h0;
    sq_reqGenSQ_curPsnReg = 24'hAAAAAA;
    sq_reqGenSQ_isFirstOrOnlyReqPktReg = 1'h0;
    sq_reqGenSQ_isNormalStateReg = 1'h0;
    sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerValidReg =
	1'h0;
    sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_rdmaHeaderReg =
	593'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg = 2'h2;
    sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerHasPayloadReg =
	1'h0;
    sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidBitNumReg =
	9'h0AA;
    sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragInvalidByteNumReg =
	6'h2A;
    sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidBitNumReg =
	9'h0AA;
    sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerLastFragValidByteNumReg =
	6'h2A;
    sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_isFirstReg = 1'h0;
    sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_preDataStreamReg =
	290'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_stageReg = 2'h2;
    sq_reqGenSQ_remainingPktNumReg = 25'h0AAAAAA;
    sq_respHandleSQ_errOccurredReg = 1'h0;
    sq_respHandleSQ_hasInternalErrReg = 1'h0;
    sq_respHandleSQ_hasTimeOutErrReg = 1'h0;
    sq_respHandleSQ_nextReadRespWriteAddrReg = 64'hAAAAAAAAAAAAAAAA;
    sq_respHandleSQ_preRdmaOpCodeReg = 5'h0A;
    sq_respHandleSQ_preStageDeqPendingWorkReqReg = 1'h0;
    sq_respHandleSQ_preStageDeqPktMetaDataReg = 1'h0;
    sq_respHandleSQ_preStagePktMetaDataReg =
	649'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    sq_respHandleSQ_preStageReqPktInfoReg =
	135'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    sq_respHandleSQ_preStageRespAndWorkReqRelationReg = 5'h0A;
    sq_respHandleSQ_preStageRespTypeReg = 2'h2;
    sq_respHandleSQ_preStageStateReg = 2'h2;
    sq_respHandleSQ_preStageWorkCompReqTypeReg = 2'h2;
    sq_respHandleSQ_preStageWorkReqAckTypeReg = 4'hA;
    sq_respHandleSQ_recvErrRespReg = 1'h0;
    sq_respHandleSQ_recvRetryRespReg = 1'h0;
    sq_respHandleSQ_remainingReadRespLenReg = 32'hAAAAAAAA;
    sq_respHandleSQ_retryFlushReg = 1'h0;
    sq_respHandleSQ_retryResetReqReg = 1'h0;
    sq_retryHandler_disableRetryCntReg = 1'h0;
    sq_retryHandler_disableTimeOutReg = 1'h0;
    sq_retryHandler_isRnrWaitCntZeroReg = 1'h0;
    sq_retryHandler_isTimeOutCntHighPartZeroReg = 1'h0;
    sq_retryHandler_isTimeOutCntLowPartZeroReg = 1'h0;
    sq_retryHandler_pauseRetryHandleReg = 1'h0;
    sq_retryHandler_psnDiffReg = 24'hAAAAAA;
    sq_retryHandler_retryCntReg = 3'h2;
    sq_retryHandler_retryCntrlStateReg = 2'h2;
    sq_retryHandler_retryHandleStateReg = 3'h2;
    sq_retryHandler_retryReasonReg = 3'h2;
    sq_retryHandler_retryRnrTimerReg = 5'h0A;
    sq_retryHandler_retryStartPsnReg = 24'hAAAAAA;
    sq_retryHandler_retryWorkReqIdReg = 64'hAAAAAAAAAAAAAAAA;
    sq_retryHandler_rnrCntReg = 3'h2;
    sq_retryHandler_rnrWaitCntReg = 27'h2AAAAAA;
    sq_retryHandler_timeOutCntReg = 42'h2AAAAAAAAAA;
    sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg = 64'hAAAAAAAAAAAAAAAA;
    sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg = 1'h0;
    sq_workCompGenSQ_workCompGenStateReg = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onINIT && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	begin
	  v__h3884 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onINIT && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h3884,
		 "\"Controller.bsv\", line 512, column 21\n",
		 "no QP destroy on init @ mkCntrlQP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onINIT && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$display("request QPN=%h", cntrl_reqQ_D_OUT[266:243], ", qpReqType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onINIT && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$display("REQ_QP_DESTROY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onINIT && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onINIT && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	begin
	  v__h4313 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onINIT && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h4313,
		 "\"Controller.bsv\", line 540, column 21\n",
		 "unreachible case @ mkCntrlQP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onINIT && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$display("request QPN=%h", cntrl_reqQ_D_OUT[266:243], ", qpReqType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onINIT && cntrl_reqQ_D_OUT[300:299] == 2'd0)
	$display("REQ_QP_CREATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onINIT && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTR && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	begin
	  v__h4717 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTR && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h4717,
		 "\"Controller.bsv\", line 576, column 21\n",
		 "no QP destroy on RTR @ mkCntrlQP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTR && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$display("request QPN=%h", cntrl_reqQ_D_OUT[266:243], ", qpReqType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTR && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$display("REQ_QP_DESTROY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTR && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTR && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	begin
	  v__h5169 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTR && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h5169,
		 "\"Controller.bsv\", line 615, column 21\n",
		 "unreachible case @ mkCntrlQP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTR && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$display("request QPN=%h", cntrl_reqQ_D_OUT[266:243], ", qpReqType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTR && cntrl_reqQ_D_OUT[300:299] == 2'd0)
	$display("REQ_QP_CREATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTR && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTS && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	begin
	  v__h5606 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTS && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h5606,
		 "\"Controller.bsv\", line 651, column 21\n",
		 "no QP destroy on RTS @ mkCntrlQP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTS && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$display("request QPN=%h", cntrl_reqQ_D_OUT[266:243], ", qpReqType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTS && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$display("REQ_QP_DESTROY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTS && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTS && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	begin
	  v__h5829 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTS && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h5829,
		 "\"Controller.bsv\", line 688, column 21\n",
		 "unreachible case @ mkCntrlQP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTS && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$display("request QPN=%h", cntrl_reqQ_D_OUT[266:243], ", qpReqType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTS && cntrl_reqQ_D_OUT[300:299] == 2'd0)
	$display("REQ_QP_CREATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onRTS && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onSQD && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	begin
	  v__h6391 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onSQD && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h6391,
		 "\"Controller.bsv\", line 721, column 21\n",
		 "no QP destroy on SQD @ mkCntrlQP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onSQD && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$display("request QPN=%h", cntrl_reqQ_D_OUT[266:243], ", qpReqType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onSQD && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$display("REQ_QP_DESTROY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onSQD && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onSQD && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	begin
	  v__h6614 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onSQD && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h6614,
		 "\"Controller.bsv\", line 758, column 21\n",
		 "unreachible case @ mkCntrlQP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onSQD && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$display("request QPN=%h", cntrl_reqQ_D_OUT[266:243], ", qpReqType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onSQD && cntrl_reqQ_D_OUT[300:299] == 2'd0)
	$display("REQ_QP_CREATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onSQD && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onERR && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	begin
	  v__h7317 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onERR && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h7317,
		 "\"Controller.bsv\", line 807, column 21\n",
		 "unreachible case @ mkCntrlQP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onERR && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$display("request QPN=%h", cntrl_reqQ_D_OUT[266:243], ", qpReqType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onERR && cntrl_reqQ_D_OUT[300:299] == 2'd0)
	$display("REQ_QP_CREATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onERR && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq &&
	  dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[34:3] == 32'd0)
	begin
	  v__h9162 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq &&
	  dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[34:3] == 32'd0)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h9162,
		 "\"PayloadConAndGen.bsv\", line 76, column 13\n",
		 "totalLen assertion @ mkAddrChunkSrv");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq &&
	  dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[34:3] == 32'd0)
	$display("totalLen=%0d cannot be zero",
		 dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[34:3]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_dmaReadCntrl4SQ_addrChunkSrv_recvReq &&
	  dmaReadCntrl4SQ_addrChunkSrv_reqQ_D_OUT[34:3] == 32'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_payloadGenerator4SQ_recvPayloadGenReq &&
	  payloadGenerator4SQ_payloadGenReqQ_D_OUT[36:5] == 32'd0)
	begin
	  v__h13758 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_payloadGenerator4SQ_recvPayloadGenReq &&
	  payloadGenerator4SQ_payloadGenReqQ_D_OUT[36:5] == 32'd0)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h13758,
		 "\"PayloadConAndGen.bsv\", line 656, column 13\n",
		 "payloadGenReq.dmaReadMetaData.len assertion @ mkPayloadGenerator");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_payloadGenerator4SQ_recvPayloadGenReq &&
	  payloadGenerator4SQ_payloadGenReqQ_D_OUT[36:5] == 32'd0)
	$display("payloadGenReq.dmaReadMetaData.len=%0d should not be zero",
		 payloadGenerator4SQ_payloadGenReqQ_D_OUT[36:5]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_payloadGenerator4SQ_recvPayloadGenReq &&
	  payloadGenerator4SQ_payloadGenReqQ_D_OUT[36:5] == 32'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_payloadGenerator4SQ_recvPayloadGenReq &&
	  lastFragValidByteNumWithPadding__h13828 == 6'd0)
	begin
	  v__h14296 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_payloadGenerator4SQ_recvPayloadGenReq &&
	  lastFragValidByteNumWithPadding__h13828 == 6'd0)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h14296,
		 "\"PayloadConAndGen.bsv\", line 671, column 13\n",
		 "lastFragValidByteNumWithPadding assertion @ mkPayloadGenerator");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_payloadGenerator4SQ_recvPayloadGenReq &&
	  lastFragValidByteNumWithPadding__h13828 == 6'd0)
	$display("lastFragValidByteNumWithPadding=%0d should not be zero",
		 lastFragValidByteNumWithPadding__h13828,
		 ", totalDmaLen=%0d, lastFragValidByteNum=%0d, padCnt=%0d",
		 payloadGenerator4SQ_payloadGenReqQ_D_OUT[36:5],
		 lastFragValidByteNum__h13827,
		 padCnt__h13826);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_payloadGenerator4SQ_recvPayloadGenReq &&
	  lastFragValidByteNumWithPadding__h13828 == 6'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (NOT_sq_newPendingWorkReqPiptOut_pendingNewWork_ETC___d1707)
	begin
	  v__h43308 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (NOT_sq_newPendingWorkReqPiptOut_pendingNewWork_ETC___d1707)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h43308,
		 "\"QueuePair.bsv\", line 135, column 13\n",
		 "pendingNewWorkReqCnt assertion @ mkNewPendingWorkReqPipeOut");
    if (RST_N != `BSV_RESET_VALUE)
      if (NOT_sq_newPendingWorkReqPiptOut_pendingNewWork_ETC___d1707)
	$display("pendingNewWorkReqCnt should be less than MAX_QP_WR=%0d",
		 $signed(32'd4));
    if (RST_N != `BSV_RESET_VALUE)
      if (NOT_sq_newPendingWorkReqPiptOut_pendingNewWork_ETC___d1707)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_sqTypeReg != 4'd2 &&
	  cntrl_sqTypeReg != 4'd3 &&
	  cntrl_sqTypeReg != 4'd9 &&
	  cntrl_sqTypeReg != 4'd4)
	begin
	  v__h50137 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_sqTypeReg != 4'd2 &&
	  cntrl_sqTypeReg != 4'd3 &&
	  cntrl_sqTypeReg != 4'd9 &&
	  cntrl_sqTypeReg != 4'd4)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h50137,
		 "\"ReqGenSQ.bsv\", line 630, column 13\n",
		 "qpType assertion @ mkReqGenSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_sqTypeReg != 4'd2 &&
	  cntrl_sqTypeReg != 4'd3 &&
	  cntrl_sqTypeReg != 4'd9 &&
	  cntrl_sqTypeReg != 4'd4)
	$display("qpType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_sqTypeReg == 4'd8)
	$display("IBV_QPT_RAW_PACKET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_sqTypeReg != 4'd2 &&
	  cntrl_sqTypeReg != 4'd3 &&
	  cntrl_sqTypeReg != 4'd9 &&
	  cntrl_sqTypeReg != 4'd4 &&
	  cntrl_sqTypeReg != 4'd8)
	$display("IBV_QPT_XRC_RECV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_sqTypeReg != 4'd2 &&
	  cntrl_sqTypeReg != 4'd3 &&
	  cntrl_sqTypeReg != 4'd9 &&
	  cntrl_sqTypeReg != 4'd4)
	$display(" unsupported");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_sqTypeReg != 4'd2 &&
	  cntrl_sqTypeReg != 4'd3 &&
	  cntrl_sqTypeReg != 4'd9 &&
	  cntrl_sqTypeReg != 4'd4)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_stateReg == 4'd4 &&
	  cntrl_sqTypeReg != 4'd2 &&
	  cntrl_sqTypeReg != 4'd9)
	begin
	  v__h50289 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_stateReg == 4'd4 &&
	  cntrl_sqTypeReg != 4'd2 &&
	  cntrl_sqTypeReg != 4'd9)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h50289,
		 "\"ReqGenSQ.bsv\", line 641, column 17\n",
		 "SQD assertion @ mkReqGenSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_stateReg == 4'd4 &&
	  cntrl_sqTypeReg != 4'd2 &&
	  cntrl_sqTypeReg != 4'd9)
	$display("cntrlStatus.comm.isSQD=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_stateReg == 4'd4 &&
	  cntrl_sqTypeReg != 4'd2 &&
	  cntrl_sqTypeReg != 4'd9)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_stateReg == 4'd4 &&
	  cntrl_sqTypeReg != 4'd2 &&
	  cntrl_sqTypeReg != 4'd9)
	$display(" should be RC or XRC, but qpType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_stateReg == 4'd4 &&
	  cntrl_sqTypeReg == 4'd3)
	$display("IBV_QPT_UC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_stateReg == 4'd4 &&
	  cntrl_sqTypeReg == 4'd4)
	$display("IBV_QPT_UD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_stateReg == 4'd4 &&
	  cntrl_sqTypeReg == 4'd8)
	$display("IBV_QPT_RAW_PACKET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_stateReg == 4'd4 &&
	  cntrl_sqTypeReg != 4'd2 &&
	  cntrl_sqTypeReg != 4'd9 &&
	  cntrl_sqTypeReg != 4'd3 &&
	  cntrl_sqTypeReg != 4'd4 &&
	  cntrl_sqTypeReg != 4'd8)
	$display("IBV_QPT_XRC_RECV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_stateReg == 4'd4 &&
	  cntrl_sqTypeReg != 4'd2 &&
	  cntrl_sqTypeReg != 4'd9)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_stateReg == 4'd3 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[606])
	begin
	  v__h50515 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_stateReg == 4'd3 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[606])
	$display("time=%0t: wait pendingWorkReqBufNotEmpty=", v__h50515);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_stateReg == 4'd3 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[606] &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_stateReg == 4'd3 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[606] &&
	  !sq_pendingWorkReqBuf_emptyReg)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq && cntrl_stateReg == 4'd3 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[606])
	$display(" to be false, when IBV_QPS_SQD or IBV_SEND_FENCE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  NOT_sq_pendingWorkReqPipeOut_pipeMuxOutQ_first_ETC___d1919)
	begin
	  v__h50628 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  NOT_sq_pendingWorkReqPipeOut_pipeMuxOutQ_first_ETC___d1919)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h50628,
		 "\"ReqGenSQ.bsv\", line 667, column 13\n",
		 "curPendingWR.wr.sqpn assertion @ mkWorkReq2RdmaReq");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  NOT_sq_pendingWorkReqPipeOut_pipeMuxOutQ_first_ETC___d1919)
	$display("curPendingWR.wr.sqpn=%h should == cntrlStatus.comm.getSQPN=%h",
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[381:358],
		 cntrl_sqpnReg);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  NOT_sq_pendingWorkReqPipeOut_pipeMuxOutQ_first_ETC___d1919)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	begin
	  v__h50773 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h50773,
		 "\"ReqGenSQ.bsv\", line 677, column 17\n",
		 "curPendingWR.wr.len assertion @ mkWorkReq2RdmaReq");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display("curPendingWR.wr.len=%0d should be %0d for atomic WR=",
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478],
		 $signed(32'd8));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display("PendingWorkReq { wr=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display("WorkReq { ID=%h",
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[678:615],
		 ", opcode=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display("IBV_WR_ATOMIC_CMP_AND_SWP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display("IBV_WR_ATOMIC_FETCH_AND_ADD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display(", flags=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display("FlagsType { flags: ",
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[610:606],
		 " = ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[606])
	$display("IBV_SEND_FENCE", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[606])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[607])
	$display("IBV_SEND_SIGNALED", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[607])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[608])
	$display("IBV_SEND_SOLICITED", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[608])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[609])
	$display("IBV_SEND_INLINE", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[609])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[610])
	$display("IBV_SEND_IP_CSUM", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[610])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[610:606] == 5'd0)
	$display("IBV_SEND_NO_FLAGS", " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[610:606] != 5'd0)
	$display("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display(", raddr=%h, rkey=%h, len=%0d, laddr=%h, lkey=%h, sqpn=%h",
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[605:542],
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[541:510],
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478],
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[477:414],
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[413:382],
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[381:358],
		 ", solicited=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[357])
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[357])
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display(", comp=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[356])
	$display("tagged Valid ",
		 "'h%h",
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[355:292]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[356])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display(", swap=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[291])
	$display("tagged Valid ",
		 "'h%h",
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[290:227]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[291])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display(", immDt=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[226])
	$display("tagged Valid ",
		 "'h%h",
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[225:194]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[226])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display(", rkey2Inv=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[193])
	$display("tagged Valid ",
		 "'h%h",
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[192:161]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[193])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display(", srqn=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[160])
	$display("tagged Valid ",
		 "'h%h",
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[159:136]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[160])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display(", dqpn=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[135])
	$display("tagged Valid ",
		 "'h%h",
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[134:111]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[135])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display(", qkey=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[110])
	$display("tagged Valid ",
		 "'h%h",
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[109:78]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[110])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display(", startPSN=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[77])
	$display("tagged Valid ",
		 "'h%h",
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[76:53]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[77])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display(", endPSN=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[52])
	$display("tagged Valid ",
		 "'h%h",
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[51:28]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[52])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display(", pktNum=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[27])
	$display("tagged Valid %0d",
		 sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[26:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[27])
	$display("tagged Invalid PktNum");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display(", isOnlyReqPkt=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[1])
	$display("tagged Valid ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[1])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[1] &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[0])
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[1] &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[0])
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8 &&
	  !sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[1])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$display(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_recvWorkReq &&
	  (sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd5 ||
	   sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[614:611] == 4'd6) &&
	  sq_pendingWorkReqPipeOut_pipeMuxOutQ_D_OUT[509:478] != 32'd8)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	begin
	  v__h54300 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h54300,
		 "\"ReqGenSQ.bsv\", line 789, column 17\n",
		 "curPendingWR assertion @ mkReqGenSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display("curPendingWR should have valid PSN and PktNum, curPendingWR=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display("PendingWorkReq { wr=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display("WorkReq { ID=%h",
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[708:645],
		 ", opcode=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] == 4'd0)
	$display("IBV_WR_RDMA_WRITE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] == 4'd1)
	$display("IBV_WR_RDMA_WRITE_WITH_IMM");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] == 4'd2)
	$display("IBV_WR_SEND");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] == 4'd3)
	$display("IBV_WR_SEND_WITH_IMM");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] == 4'd4)
	$display("IBV_WR_RDMA_READ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] == 4'd5)
	$display("IBV_WR_ATOMIC_CMP_AND_SWP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] == 4'd6)
	$display("IBV_WR_ATOMIC_FETCH_AND_ADD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] == 4'd7)
	$display("IBV_WR_LOCAL_INV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] == 4'd8)
	$display("IBV_WR_BIND_MW");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] == 4'd9)
	$display("IBV_WR_SEND_WITH_INV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] == 4'd10)
	$display("IBV_WR_TSO");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] == 4'd11)
	$display("IBV_WR_DRIVER1");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] == 4'd12)
	$display("IBV_WR_RDMA_READ_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] == 4'd14)
	$display("IBV_WR_FLUSH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] != 4'd0 &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] != 4'd1 &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] != 4'd2 &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] != 4'd3 &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] != 4'd4 &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] != 4'd5 &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] != 4'd6 &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] != 4'd7 &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] != 4'd8 &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] != 4'd9 &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] != 4'd10 &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] != 4'd11 &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] != 4'd12 &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[644:641] != 4'd14)
	$display("IBV_WR_ATOMIC_WRITE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display(", flags=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display("FlagsType { flags: ",
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[640:636],
		 " = ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[636])
	$display("IBV_SEND_FENCE", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[636])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[637])
	$display("IBV_SEND_SIGNALED", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[637])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[638])
	$display("IBV_SEND_SOLICITED", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[638])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[639])
	$display("IBV_SEND_INLINE", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[639])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[640])
	$display("IBV_SEND_IP_CSUM", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[640])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[640:636] == 5'd0)
	$display("IBV_SEND_NO_FLAGS", " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[640:636] != 5'd0)
	$display("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display(", raddr=%h, rkey=%h, len=%0d, laddr=%h, lkey=%h, sqpn=%h",
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[635:572],
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[571:540],
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[539:508],
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[507:444],
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[443:412],
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[411:388],
		 ", solicited=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[387])
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[387])
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display(", comp=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[386])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[385:322]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[386])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display(", swap=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[321])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[320:257]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[321])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display(", immDt=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[256])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[255:224]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[256])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display(", rkey2Inv=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[223])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[222:191]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[223])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display(", srqn=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[190])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[189:166]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[190])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display(", dqpn=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[165])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[164:141]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[165])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display(", qkey=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[140])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[139:108]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[140])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display(", startPSN=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[107])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[106:83]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[107])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display(", endPSN=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[82])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_workReqPktNumQ_D_OUT[81:58]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[82])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display(", pktNum=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[57])
	$display("tagged Valid %0d", sq_reqGenSQ_workReqPktNumQ_D_OUT[56:32]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[57])
	$display("tagged Invalid PktNum");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display(", isOnlyReqPkt=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[31])
	$display("tagged Valid ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[31])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[31] &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[30])
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57]) &&
	  sq_reqGenSQ_workReqPktNumQ_D_OUT[31] &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[30])
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[31])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$display(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktNum4NewWorkReq &&
	  !sq_reqGenSQ_workReqPktNumQ_D_OUT[4] &&
	  (!sq_reqGenSQ_workReqPktNumQ_D_OUT[107] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[82] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[57] ||
	   !sq_reqGenSQ_workReqPktNumQ_D_OUT[31]))
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[4] &&
	  sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[5])
	begin
	  v__h58741 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[4] &&
	  sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[5])
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h58741,
		 "\"ReqGenSQ.bsv\", line 874, column 17\n",
		 "existing UD WR assertion @ mkReqGenSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[4] &&
	  sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[5])
	$display("illegal existing UD WR with length=%0d",
		 sq_reqGenSQ_workReqCheckQ_D_OUT[514:483],
		 " larger than PMTU when TypeQP=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[4] &&
	  sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[5] &&
	  cntrl_sqTypeReg == 4'd2)
	$display("IBV_QPT_RC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[4] &&
	  sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[5] &&
	  cntrl_sqTypeReg == 4'd3)
	$display("IBV_QPT_UC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[4] &&
	  sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[5] &&
	  cntrl_sqTypeReg == 4'd4)
	$display("IBV_QPT_UD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[4] &&
	  sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[5] &&
	  cntrl_sqTypeReg == 4'd8)
	$display("IBV_QPT_RAW_PACKET");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[4] &&
	  sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[5] &&
	  cntrl_sqTypeReg == 4'd9)
	$display("IBV_QPT_XRC_SEND");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[4] &&
	  sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[5] &&
	  cntrl_sqTypeReg != 4'd2 &&
	  cntrl_sqTypeReg != 4'd3 &&
	  cntrl_sqTypeReg != 4'd4 &&
	  cntrl_sqTypeReg != 4'd8 &&
	  cntrl_sqTypeReg != 4'd9)
	$display("IBV_QPT_XRC_RECV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[4] &&
	  sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[5])
	$display(" and isOnlyReqPkt=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[4] &&
	  sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[5] &&
	  sq_reqGenSQ_workReqCheckQ_D_OUT[6])
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[4] &&
	  sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[5] &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[6])
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_checkPendingWorkReq &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[4] &&
	  sq_reqGenSQ_workReqCheckQ_D_OUT[1] &&
	  !sq_reqGenSQ_workReqCheckQ_D_OUT[5])
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_countReqPkt && cntrl_sqTypeReg == 4'd4 &&
	  !sq_reqGenSQ_reqCountQ_D_OUT[5])
	begin
	  v__h61335 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_countReqPkt && cntrl_sqTypeReg == 4'd4 &&
	  !sq_reqGenSQ_reqCountQ_D_OUT[5])
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h61335,
		 "\"ReqGenSQ.bsv\", line 933, column 13\n",
		 "UD assertion @ mkReqGenSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_countReqPkt && cntrl_sqTypeReg == 4'd4 &&
	  !sq_reqGenSQ_reqCountQ_D_OUT[5])
	$display("illegal UD WR with length=%0d",
		 sq_reqGenSQ_reqCountQ_D_OUT[514:483],
		 " larger than PMTU when TypeQP=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_countReqPkt && cntrl_sqTypeReg == 4'd4 &&
	  !sq_reqGenSQ_reqCountQ_D_OUT[5])
	$display("IBV_QPT_UD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_countReqPkt && cntrl_sqTypeReg == 4'd4 &&
	  !sq_reqGenSQ_reqCountQ_D_OUT[5])
	$display(" and isOnlyReqPkt=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_countReqPkt && cntrl_sqTypeReg == 4'd4 &&
	  !sq_reqGenSQ_reqCountQ_D_OUT[5] &&
	  sq_reqGenSQ_reqCountQ_D_OUT[6])
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_countReqPkt && cntrl_sqTypeReg == 4'd4 &&
	  !sq_reqGenSQ_reqCountQ_D_OUT[5] &&
	  !sq_reqGenSQ_reqCountQ_D_OUT[6])
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_countReqPkt && cntrl_sqTypeReg == 4'd4 &&
	  !sq_reqGenSQ_reqCountQ_D_OUT[5])
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	begin
	  v__h63194 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h63194,
		 "\"ReqGenSQ.bsv\", line 1006, column 17\n",
		 "maybeFirstOrOnlyHeaderGenInfo assertion @ mkReqGenSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display("maybeFirstOrOnlyHeaderGenInfo=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display(" is not valid, and current WR=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display("WorkReq { ID=%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[685:622],
		 ", opcode=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2742 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd0)
	$display("IBV_WR_RDMA_WRITE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2742 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd1)
	$display("IBV_WR_RDMA_WRITE_WITH_IMM");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2742 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd2)
	$display("IBV_WR_SEND");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2742 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd3)
	$display("IBV_WR_SEND_WITH_IMM");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2742 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4)
	$display("IBV_WR_RDMA_READ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2742 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5)
	$display("IBV_WR_ATOMIC_CMP_AND_SWP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2742 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6)
	$display("IBV_WR_ATOMIC_FETCH_AND_ADD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd7)
	$display("IBV_WR_LOCAL_INV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd8)
	$display("IBV_WR_BIND_MW");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2742 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd9)
	$display("IBV_WR_SEND_WITH_INV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd10)
	$display("IBV_WR_TSO");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd11)
	$display("IBV_WR_DRIVER1");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd12)
	$display("IBV_WR_RDMA_READ_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd14)
	$display("IBV_WR_FLUSH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd0 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd1 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd2 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd3 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd4 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd5 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd6 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd7 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd8 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd9 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd10 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd11 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd12 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd14)
	$display("IBV_WR_ATOMIC_WRITE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display(", flags=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display("FlagsType { flags: ",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[617:613],
		 " = ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[613])
	$display("IBV_SEND_FENCE", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[613])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614])
	$display("IBV_SEND_SIGNALED", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[615])
	$display("IBV_SEND_SOLICITED", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[615])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[616])
	$display("IBV_SEND_INLINE", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[616])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[617])
	$display("IBV_SEND_IP_CSUM", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[617])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[617:613] == 5'd0)
	$display("IBV_SEND_NO_FLAGS", " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[617:613] != 5'd0)
	$display("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display(", raddr=%h, rkey=%h, len=%0d, laddr=%h, lkey=%h, sqpn=%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[612:549],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[548:517],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[516:485],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[484:421],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[420:389],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[388:365],
		 ", solicited=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364])
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364])
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display(", comp=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[363])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[362:299]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[363])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display(", swap=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[298])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[297:234]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[298])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display(", immDt=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[233])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[232:201]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[233])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display(", rkey2Inv=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[200])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[199:168]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[200])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display(", srqn=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[167])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[166:143]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[167])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display(", dqpn=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2882 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[142])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[141:118]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2889 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[142])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display(", qkey=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[117])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[116:85]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[117])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$display(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2712)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	begin
	  v__h69848 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h69848,
		 "\"ReqGenSQ.bsv\", line 1021, column 17\n",
		 "maybeMiddleOrLastHeaderGenInfo assertion @ mkReqGenSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display("maybeMiddleOrLastHeaderGenInfo=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display(" is not valid, and current WR=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display("WorkReq { ID=%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[685:622],
		 ", opcode=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2902 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd0)
	$display("IBV_WR_RDMA_WRITE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2902 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd1)
	$display("IBV_WR_RDMA_WRITE_WITH_IMM");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2902 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd2)
	$display("IBV_WR_SEND");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2902 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd3)
	$display("IBV_WR_SEND_WITH_IMM");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4)
	$display("IBV_WR_RDMA_READ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5)
	$display("IBV_WR_ATOMIC_CMP_AND_SWP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6)
	$display("IBV_WR_ATOMIC_FETCH_AND_ADD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd7)
	$display("IBV_WR_LOCAL_INV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd8)
	$display("IBV_WR_BIND_MW");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2902 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd9)
	$display("IBV_WR_SEND_WITH_INV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd10)
	$display("IBV_WR_TSO");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd11)
	$display("IBV_WR_DRIVER1");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd12)
	$display("IBV_WR_RDMA_READ_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd14)
	$display("IBV_WR_FLUSH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd0 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd1 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd2 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd3 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd4 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd5 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd6 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd7 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd8 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd9 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd10 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd11 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd12 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd14)
	$display("IBV_WR_ATOMIC_WRITE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display(", flags=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display("FlagsType { flags: ",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[617:613],
		 " = ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[613])
	$display("IBV_SEND_FENCE", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[613])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614])
	$display("IBV_SEND_SIGNALED", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[615])
	$display("IBV_SEND_SOLICITED", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[615])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[616])
	$display("IBV_SEND_INLINE", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[616])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[617])
	$display("IBV_SEND_IP_CSUM", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[617])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[617:613] == 5'd0)
	$display("IBV_SEND_NO_FLAGS", " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[617:613] != 5'd0)
	$display("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display(", raddr=%h, rkey=%h, len=%0d, laddr=%h, lkey=%h, sqpn=%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[612:549],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[548:517],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[516:485],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[484:421],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[420:389],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[388:365],
		 ", solicited=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364])
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364])
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display(", comp=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[363])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[362:299]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[363])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display(", swap=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[298])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[297:234]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[298])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display(", immDt=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[233])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[232:201]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[233])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display(", rkey2Inv=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[200])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[199:168]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[200])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display(", srqn=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[167])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[166:143]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[167])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display(", dqpn=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2973 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[142])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[141:118]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2978 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[142])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display(", qkey=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[117])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[116:85]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[117])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$display(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  NOT_cntrl_sqTypeReg_887_EQ_2_888_889_AND_NOT_c_ETC___d2723)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	begin
	  v__h73012 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h73012,
		 "\"ReqGenSQ.bsv\", line 1034, column 21\n",
		 "endPSN assertion @ mkReqGenSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display("curPSN=%h should == pendingWR.endPSN=%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[709:686],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[58:35],
		 ", pendingWR=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display("PendingWorkReq { wr=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display("WorkReq { ID=%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[685:622],
		 ", opcode=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd0)
	$display("IBV_WR_RDMA_WRITE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd1)
	$display("IBV_WR_RDMA_WRITE_WITH_IMM");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd2)
	$display("IBV_WR_SEND");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd3)
	$display("IBV_WR_SEND_WITH_IMM");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd4)
	$display("IBV_WR_RDMA_READ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd5)
	$display("IBV_WR_ATOMIC_CMP_AND_SWP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd6)
	$display("IBV_WR_ATOMIC_FETCH_AND_ADD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd7)
	$display("IBV_WR_LOCAL_INV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd8)
	$display("IBV_WR_BIND_MW");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd9)
	$display("IBV_WR_SEND_WITH_INV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd10)
	$display("IBV_WR_TSO");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd11)
	$display("IBV_WR_DRIVER1");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd12)
	$display("IBV_WR_RDMA_READ_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] == 4'd14)
	$display("IBV_WR_FLUSH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd0 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd1 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd2 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd3 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd4 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd5 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd6 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd7 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd8 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd9 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd10 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd11 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd12 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[621:618] != 4'd14)
	$display("IBV_WR_ATOMIC_WRITE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display(", flags=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display("FlagsType { flags: ",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[617:613],
		 " = ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[613])
	$display("IBV_SEND_FENCE", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[613])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614])
	$display("IBV_SEND_SIGNALED", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[614])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[615])
	$display("IBV_SEND_SOLICITED", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[615])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[616])
	$display("IBV_SEND_INLINE", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[616])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[617])
	$display("IBV_SEND_IP_CSUM", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[617])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[617:613] == 5'd0)
	$display("IBV_SEND_NO_FLAGS", " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[617:613] != 5'd0)
	$display("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display(", raddr=%h, rkey=%h, len=%0d, laddr=%h, lkey=%h, sqpn=%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[612:549],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[548:517],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[516:485],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[484:421],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[420:389],
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[388:365],
		 ", solicited=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364])
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[364])
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display(", comp=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[363])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[362:299]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[363])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display(", swap=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[298])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[297:234]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[298])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display(", immDt=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[233])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[232:201]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[233])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display(", rkey2Inv=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[200])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[199:168]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[200])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display(", srqn=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[167])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[166:143]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[167])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display(", dqpn=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[142])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[141:118]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[142])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display(", qkey=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[117])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[116:85]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[117])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display(", startPSN=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[84])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[83:60]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[84])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display(", endPSN=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[59])
	$display("tagged Valid ",
		 "'h%h",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[58:35]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[59])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display(", pktNum=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[34])
	$display("tagged Valid %0d",
		 sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[33:9]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[34])
	$display("tagged Invalid PktNum");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display(", isOnlyReqPkt=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[8])
	$display("tagged Valid ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[8])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[8] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7])
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[8] &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[7])
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992 &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[8])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$display(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_prepareReqHeaderGen &&
	  !sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[6] &&
	  sq_reqGenSQ_reqHeaderPrepareQ_D_OUT[5] &&
	  NOT_sq_reqGenSQ_reqHeaderPrepareQ_first__665_B_ETC___d2992)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_errFlushWR &&
	  WILL_FIRE_RL_sq_reqGenSQ_outputNewPendingWorkReq &&
	  sq_reqGenSQ_workReqPayloadGenQ_D_OUT[2] &&
	  sq_reqGenSQ_workReqPayloadGenQ_D_OUT[1] &&
	  _enq_RL_sq_reqGenSQ_outputNewPendingWorkReq_EN_sq_reqGenSQ_pendingWorkReqOutQ_wget)
	$display("Error: \"ReqGenSQ.bsv\", line 1142, column 10: (R0002)\n  Conflict-free rules RL_sq_reqGenSQ_errFlushWR and\n  RL_sq_reqGenSQ_outputNewPendingWorkReq called conflicting methods enq and\n  enq of module instance sq_reqGenSQ_pendingWorkReqOutQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_errFlushWR &&
	  WILL_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq)
	$display("Error: \"ReqGenSQ.bsv\", line 1142, column 10: (R0002)\n  Conflict-free rules RL_sq_reqGenSQ_errFlushWR and\n  RL_sq_reqGenSQ_issuePayloadGenReq called conflicting methods first and deq\n  of module instance sq_reqGenSQ_workReqPayloadGenQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_errFlushWR &&
	  WILL_FIRE_RL_sq_reqGenSQ_issuePayloadGenReq)
	$display("Error: \"ReqGenSQ.bsv\", line 1142, column 10: (R0002)\n  Conflict-free rules RL_sq_reqGenSQ_errFlushWR and\n  RL_sq_reqGenSQ_issuePayloadGenReq called conflicting methods deq and deq of\n  module instance sq_reqGenSQ_workReqPayloadGenQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[0] &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[7:2] !=
	  6'd0)
	begin
	  v__h48088 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[0] &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[7:2] !=
	  6'd0)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h48088,
		 "\"ExtractAndPrependPipeOut.bsv\", line 291, column 17\n",
		 "empty header assertion @ mkPrependHeader2PipeOut");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[0] &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[7:2] !=
	  6'd0)
	$display("headerLastFragValidBitNum=%0d",
		 headerLastFragValidBitNum__h47980,
		 " and headerLastFragValidByteNum=%0d",
		 sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[7:2],
		 " should be zero when isEmptyHeader=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[0] &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[7:2] !=
	  6'd0)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[0] &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[7:2] !=
	  6'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData &&
	  !sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[0] &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[16:10] ==
	  7'd0)
	begin
	  v__h48212 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData &&
	  !sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[0] &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[16:10] ==
	  7'd0)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h48212,
		 "\"ExtractAndPrependPipeOut.bsv\", line 303, column 17\n",
		 "headerMetaData.headerLen non-zero assertion @ mkPrependHeader2PipeOut");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData &&
	  !sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[0] &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[16:10] ==
	  7'd0)
	$display("headerLen=%0d",
		 sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[16:10],
		 " should not be zero when isEmptyHeader=",
		 "False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_popHeaderMetaData &&
	  !sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[0] &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerMetaDataOutQ_D_OUT[16:10] ==
	  7'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT[0] &&
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg !=
	  2'd0)
	begin
	  v__h48664 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT[0] &&
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg !=
	  2'd0)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h48664,
		 "\"ExtractAndPrependPipeOut.bsv\", line 339, column 17\n",
		 "headerFragCntReg zero assertion @ mkPrependHeader2PipeOut");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT[0] &&
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg !=
	  2'd0)
	$display("headerFragCntReg=%h should be zero when curHeaderDataStreamFrag.isLast=%b",
		 sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg,
		 sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_outputHeader &&
	  sq_reqGenSQ_rdmaReqPipeOut_headerDataStreamAndMetaDataPipeOut_headerDataStreamOutQ_D_OUT[0] &&
	  sq_reqGenSQ_rdmaReqPipeOut_rdmaDataStreamPipeOut_headerFragCntReg !=
	  2'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd13 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd14 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd15 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd16 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd17 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd18)
	begin
	  v__h93157 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd13 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd14 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd15 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd16 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd17 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd18)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h93157,
		 "\"RespHandleSQ.bsv\", line 219, column 13\n",
		 "isRdmaRespOpCode assertion @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd13 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd14 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd15 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd16 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd17 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd18)
	$display("bth.opcode=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] == 5'd0)
	$display("SEND_FIRST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] == 5'd1)
	$display("SEND_MIDDLE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] == 5'd2)
	$display("SEND_LAST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] == 5'd3)
	$display("SEND_LAST_WITH_IMMEDIATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] == 5'd4)
	$display("SEND_ONLY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] == 5'd5)
	$display("SEND_ONLY_WITH_IMMEDIATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] == 5'd6)
	$display("RDMA_WRITE_FIRST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] == 5'd7)
	$display("RDMA_WRITE_MIDDLE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] == 5'd8)
	$display("RDMA_WRITE_LAST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] == 5'd9)
	$display("RDMA_WRITE_LAST_WITH_IMMEDIATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] == 5'd10)
	$display("RDMA_WRITE_ONLY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] == 5'd11)
	$display("RDMA_WRITE_ONLY_WITH_IMMEDIATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] == 5'd12)
	$display("RDMA_READ_REQUEST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] == 5'd19)
	$display("COMPARE_SWAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] == 5'd20)
	$display("FETCH_ADD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] == 5'd21)
	$display("RESYNC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] == 5'd22)
	$display("SEND_LAST_WITH_INVALIDATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd13 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd14 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd15 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd16 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd17 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd18 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd0 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd1 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd2 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd3 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd4 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd5 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd6 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd7 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd8 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd9 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd10 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd11 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd12 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd19 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd20 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd21 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd22)
	$display("SEND_ONLY_WITH_INVALIDATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd13 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd14 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd15 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd16 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd17 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd18)
	$display(" should be RDMA response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd13 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd14 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd15 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd16 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd17 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd18)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd13 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd14 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd15 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd16 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd18 &&
	  (respPktPipe_metaDataQ_D_OUT[623:619] != 5'd17 ||
	   respPktPipe_metaDataQ_D_OUT[529:528] != 2'd0 &&
	   respPktPipe_metaDataQ_D_OUT[529:528] != 2'd1 &&
	   (respPktPipe_metaDataQ_D_OUT[529:528] != 2'd3 ||
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd0 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd1 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd2 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd3 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd4)))
	begin
	  v__h93514 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd13 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd14 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd15 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd16 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd18 &&
	  (respPktPipe_metaDataQ_D_OUT[623:619] != 5'd17 ||
	   respPktPipe_metaDataQ_D_OUT[529:528] != 2'd0 &&
	   respPktPipe_metaDataQ_D_OUT[529:528] != 2'd1 &&
	   (respPktPipe_metaDataQ_D_OUT[529:528] != 2'd3 ||
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd0 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd1 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd2 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd3 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd4)))
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h93514,
		 "\"RespHandleSQ.bsv\", line 233, column 13\n",
		 "rdmaRespType assertion @ handleRetryResp() in mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd13 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd14 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd15 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd16 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd18 &&
	  (respPktPipe_metaDataQ_D_OUT[623:619] != 5'd17 ||
	   respPktPipe_metaDataQ_D_OUT[529:528] != 2'd0 &&
	   respPktPipe_metaDataQ_D_OUT[529:528] != 2'd1 &&
	   (respPktPipe_metaDataQ_D_OUT[529:528] != 2'd3 ||
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd0 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd1 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd2 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd3 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd4)))
	$display("rdmaRespType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd13 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd14 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd15 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd16 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd18 &&
	  (respPktPipe_metaDataQ_D_OUT[623:619] != 5'd17 ||
	   respPktPipe_metaDataQ_D_OUT[529:528] != 2'd0 &&
	   respPktPipe_metaDataQ_D_OUT[529:528] != 2'd1 &&
	   (respPktPipe_metaDataQ_D_OUT[529:528] != 2'd3 ||
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd0 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd1 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd2 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd3 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd4)) &&
	  (respPktPipe_metaDataQ_D_OUT[623:619] != 5'd17 ||
	   respPktPipe_metaDataQ_D_OUT[529:528] != 2'd0) &&
	  (respPktPipe_metaDataQ_D_OUT[623:619] != 5'd17 ||
	   respPktPipe_metaDataQ_D_OUT[529:528] == 2'd0 ||
	   respPktPipe_metaDataQ_D_OUT[529:528] != 2'd1 &&
	   (respPktPipe_metaDataQ_D_OUT[529:528] != 2'd3 ||
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd0)) &&
	  (respPktPipe_metaDataQ_D_OUT[623:619] != 5'd17 ||
	   respPktPipe_metaDataQ_D_OUT[529:528] != 2'd3 ||
	   respPktPipe_metaDataQ_D_OUT[527:523] == 5'd0 ||
	   respPktPipe_metaDataQ_D_OUT[527:523] != 5'd1 &&
	   respPktPipe_metaDataQ_D_OUT[527:523] != 5'd2 &&
	   respPktPipe_metaDataQ_D_OUT[527:523] != 5'd3 &&
	   respPktPipe_metaDataQ_D_OUT[527:523] != 5'd4))
	$display("RDMA_RESP_UNKNOWN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd13 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd14 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd15 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd16 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd18 &&
	  (respPktPipe_metaDataQ_D_OUT[623:619] != 5'd17 ||
	   respPktPipe_metaDataQ_D_OUT[529:528] != 2'd0 &&
	   respPktPipe_metaDataQ_D_OUT[529:528] != 2'd1 &&
	   (respPktPipe_metaDataQ_D_OUT[529:528] != 2'd3 ||
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd0 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd1 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd2 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd3 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd4)))
	$display(" should not be unknown");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd13 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd14 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd15 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd16 &&
	  respPktPipe_metaDataQ_D_OUT[623:619] != 5'd18 &&
	  (respPktPipe_metaDataQ_D_OUT[623:619] != 5'd17 ||
	   respPktPipe_metaDataQ_D_OUT[529:528] != 2'd0 &&
	   respPktPipe_metaDataQ_D_OUT[529:528] != 2'd1 &&
	   (respPktPipe_metaDataQ_D_OUT[529:528] != 2'd3 ||
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd0 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd1 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd2 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd3 &&
	    respPktPipe_metaDataQ_D_OUT[527:523] != 5'd4)))
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	begin
	  v__h93774 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h93774,
		 "\"RespHandleSQ.bsv\", line 262, column 13\n",
		 "curPendingWR assertion @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display("curPendingWR should have valid PSN and PktNum, curPendingWR=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display("PendingWorkReq { wr=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display("WorkReq { ID=%h",
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1463,
		 ", opcode=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753)
	$display("IBV_WR_RDMA_WRITE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761)
	$display("IBV_WR_RDMA_WRITE_WITH_IMM");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770)
	$display("IBV_WR_SEND");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3783)
	$display("IBV_WR_SEND_WITH_IMM");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3794)
	$display("IBV_WR_RDMA_READ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3806)
	$display("IBV_WR_ATOMIC_CMP_AND_SWP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3822)
	$display("IBV_WR_ATOMIC_FETCH_AND_ADD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3836)
	$display("IBV_WR_LOCAL_INV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3851)
	$display("IBV_WR_BIND_MW");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3870)
	$display("IBV_WR_SEND_WITH_INV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3887)
	$display("IBV_WR_TSO");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3905)
	$display("IBV_WR_DRIVER1");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3927)
	$display("IBV_WR_RDMA_READ_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3947)
	$display("IBV_WR_FLUSH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3962)
	$display("IBV_WR_ATOMIC_WRITE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display(", flags=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display("FlagsType { flags: ", enumBits__h93928, " = ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  enumBits__h93928[0])
	$display("IBV_SEND_FENCE", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !enumBits__h93928[0])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  enumBits__h93928[1])
	$display("IBV_SEND_SIGNALED", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !enumBits__h93928[1])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  enumBits__h93928[2])
	$display("IBV_SEND_SOLICITED", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !enumBits__h93928[2])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  enumBits__h93928[3])
	$display("IBV_SEND_INLINE", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !enumBits__h93928[3])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  enumBits__h93928[4])
	$display("IBV_SEND_IP_CSUM", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !enumBits__h93928[4])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  enumBits__h93928 == 5'd0)
	$display("IBV_SEND_NO_FLAGS", " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  enumBits__h93928 != 5'd0)
	$display("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display(", raddr=%h, rkey=%h, len=%0d, laddr=%h, lkey=%h, sqpn=%h",
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1561,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1618,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1619,
		 ", solicited=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3994)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3994)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display(", comp=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4003)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4003)
	$display("tagged Valid ", "'h%h", value__h99740);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display(", swap=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4012)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4012)
	$display("tagged Valid ", "'h%h", value__h99767);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display(", immDt=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4021)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4021)
	$display("tagged Valid ", "'h%h", value__h99797);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display(", rkey2Inv=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4030)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4030)
	$display("tagged Valid ", "'h%h", value__h99824);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display(", srqn=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4039)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4039)
	$display("tagged Valid ", "'h%h", value__h99854);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display(", dqpn=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4048)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4048)
	$display("tagged Valid ", "'h%h", value__h99881);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display(", qkey=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4057)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4057)
	$display("tagged Valid ", "'h%h", value__h99908);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display(", startPSN=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1473)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1473)
	$display("tagged Valid ", "'h%h", value__h99939);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display(", endPSN=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1491)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1491)
	$display("tagged Valid ", "'h%h", value__h99966);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display(", pktNum=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  (!SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1474 ||
	   !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1492 ||
	   !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1652) &&
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1649)
	$display("tagged Valid %0d",
		 SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d1650);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1649)
	$display("tagged Invalid PktNum");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display(", isOnlyReqPkt=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074)
	$display("tagged Valid ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074 &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4083)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746 &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074 &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4083)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$display(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3746)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq &&
	  sq_reqGenSQ_workReqPsnQ_D_OUT[4] &&
	  NOT_IF_IF_sq_reqGenSQ_workReqPsnQ_first__498_B_ETC___d2536)
	begin
	  v__h57516 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq &&
	  sq_reqGenSQ_workReqPsnQ_D_OUT[4] &&
	  NOT_IF_IF_sq_reqGenSQ_workReqPsnQ_first__498_B_ETC___d2536)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h57516,
		 "\"ReqGenSQ.bsv\", line 828, column 17\n",
		 "startPSN, endPSN, nextPSN assertion @ mkReqGenSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq &&
	  sq_reqGenSQ_workReqPsnQ_D_OUT[4] &&
	  NOT_IF_IF_sq_reqGenSQ_workReqPsnQ_first__498_B_ETC___d2536)
	$display("endPSN=%h should >= startPSN=%h, and endPSN=%h + 1 should == nextPSN=%h",
		 endPktSeqNum__h56057,
		 cntrl_npsnReg,
		 endPktSeqNum__h56057,
		 nextPktSeqNum__h56056);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_reqGenSQ_calcPktSeqNum4NewWorkReq &&
	  sq_reqGenSQ_workReqPsnQ_D_OUT[4] &&
	  NOT_IF_IF_sq_reqGenSQ_workReqPsnQ_first__498_B_ETC___d2536)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4187)
	begin
	  v__h97761 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4187)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h97761,
		 "\"RespHandleSQ.bsv\", line 361, column 33\n",
		 "unreachible case @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4187)
	$display("rdmaRespType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4187)
	$display("RDMA_RESP_UNKNOWN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4187)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4200)
	begin
	  v__h97941 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4200)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h97941,
		 "\"RespHandleSQ.bsv\", line 399, column 33\n",
		 "unreachible case @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4200)
	$display("rdmaRespType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4200)
	$display("RDMA_RESP_UNKNOWN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4200)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4203)
	begin
	  v__h98281 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4203)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h98281,
		 "\"RespHandleSQ.bsv\", line 414, column 13\n",
		 "wrAckType and wcReqType assertion @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4203)
	$display("wrAckType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4208 &&
	  (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b1000 ||
	   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b1010) &&
	  sq_respHandleSQ_preStageRespTypeReg == 2'd0)
	$display("WR_ACK_EXPLICIT_WHOLE_NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4214 &&
	  (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b1000 ||
	   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b1010) &&
	  sq_respHandleSQ_preStageRespTypeReg == 2'd1)
	$display("WR_ACK_EXPLICIT_WHOLE_RETRY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4220 &&
	  (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b1000 ||
	   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b1010) &&
	  sq_respHandleSQ_preStageRespTypeReg == 2'd2)
	$display("WR_ACK_EXPLICIT_WHOLE_ERROR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4208 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] != 4'b1000 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] != 4'b1010 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] != 4'b0100 &&
	  (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b0010 ||
	   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b0001) &&
	  sq_respHandleSQ_preStageRespTypeReg == 2'd0)
	$display("WR_ACK_EXPLICIT_PARTIAL_NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4214 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] != 4'b1000 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] != 4'b1010 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] != 4'b0100 &&
	  (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b0010 ||
	   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b0001) &&
	  sq_respHandleSQ_preStageRespTypeReg == 2'd1)
	$display("WR_ACK_EXPLICIT_PARTIAL_RETRY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4220 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] != 4'b1000 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] != 4'b1010 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] != 4'b0100 &&
	  (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b0010 ||
	   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b0001) &&
	  sq_respHandleSQ_preStageRespTypeReg == 2'd2)
	$display("WR_ACK_EXPLICIT_PARTIAL_ERROR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4203 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] != 4'b1000 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] != 4'b1010 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] != 4'b0100 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] != 4'b0010 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] != 4'b0001)
	$display("WR_ACK_DUPLICATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4267)
	$display("WR_ACK_UNKNOWN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4203)
	$display(", and wcReqType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4203 &&
	  IF_sq_respHandleSQ_preStageRespAndWorkReqRelat_ETC___d4271)
	$display("WC_REQ_TYPE_FULL_ACK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4208 &&
	  IF_sq_respHandleSQ_preStageRespAndWorkReqRelat_ETC___d4275 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] != 4'b1000 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] != 4'b1010 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] != 4'b0100 &&
	  (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b0010 ||
	   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b0001) &&
	  sq_respHandleSQ_preStageRespTypeReg == 2'd0)
	$display("WC_REQ_TYPE_PARTIAL_ACK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4203 &&
	  IF_sq_respHandleSQ_preStageRespAndWorkReqRelat_ETC___d4275 &&
	  (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b1000 ||
	   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b1010 ||
	   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b0100 ||
	   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	   4'b0010 &&
	   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	   4'b0001 ||
	   sq_respHandleSQ_preStageRespTypeReg != 2'd0) &&
	  CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q35)
	$display("WC_REQ_TYPE_NO_WC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4203 &&
	  IF_sq_respHandleSQ_preStageRespAndWorkReqRelat_ETC___d4275 &&
	  (sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b1000 ||
	   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b1010 ||
	   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] ==
	   4'b0100 ||
	   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	   4'b0010 &&
	   sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] !=
	   4'b0001 ||
	   sq_respHandleSQ_preStageRespTypeReg != 2'd0) &&
	  CASE_sq_respHandleSQ_preStageRespAndWorkReqRel_ETC__q36)
	$display("WC_REQ_TYPE_UNKNOWN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4203)
	$display(" should not be unknown");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg_170_BIT_ETC___d4203)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg[1] &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] == 4'b0100 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[4])
	begin
	  v__h98457 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg[1] &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] == 4'b0100 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[4])
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h98457,
		 "\"RespHandleSQ.bsv\", line 423, column 13\n",
		 "deqPktMetaData and deqPendingWorkReq assertion @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg[1] &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] == 4'b0100 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[4])
	$display("deqPktMetaData=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg[1] &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] == 4'b0100 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[4])
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg[1] &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] == 4'b0100 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[4])
	$display(", and deqPendingWorkReq=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg[1] &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] == 4'b0100 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[4])
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg[1] &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] == 4'b0100 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[4])
	$display(" should have at least one be true");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg[1] &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[3:0] == 4'b0100 &&
	  sq_respHandleSQ_preStageRespAndWorkReqRelationReg[4])
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg[1])
	$display("Error: \"RespHandleSQ.bsv\", line 310, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_preProcRespInfo and\n  RL_sq_respHandleSQ_preBuildRespInfo called conflicting methods read and\n  write of module instance sq_respHandleSQ_preStageRespAndWorkReqRelationReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo)
	$display("Error: \"RespHandleSQ.bsv\", line 310, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_preProcRespInfo and\n  RL_sq_respHandleSQ_preBuildRespInfo called conflicting methods read and\n  write of module instance sq_respHandleSQ_preStagePktMetaDataReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  sq_respHandleSQ_preStagePktMetaDataReg[1])
	$display("Error: \"RespHandleSQ.bsv\", line 310, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_preProcRespInfo and\n  RL_sq_respHandleSQ_preBuildRespInfo called conflicting methods read and\n  write of module instance sq_respHandleSQ_preStageRespTypeReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  !sq_respHandleSQ_recvErrRespReg)
	$display("Error: \"RespHandleSQ.bsv\", line 310, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_preProcRespInfo and\n  RL_sq_respHandleSQ_preBuildRespInfo called conflicting methods read and\n  write of module instance sq_respHandleSQ_preStageStateReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd0 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd3 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd1 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd4 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd2 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd5 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd6 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd7 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd8 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd11 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd9 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd10 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd12 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd13)
	begin
	  v__h101559 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd0 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd3 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd1 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd4 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd2 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd5 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd6 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd7 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd8 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd11 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd9 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd10 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd12 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd13)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h101559,
		 "\"RespHandleSQ.bsv\", line 616, column 21\n",
		 "unreachible case @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd0 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd3 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd1 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd4 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd2 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd5 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd6 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd7 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd8 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd11 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd9 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd10 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd12 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd13)
	$display("wrAckType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd0 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd3 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd1 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd4 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd2 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd5 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd6 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd7 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd8 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd11 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd9 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd10 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd12 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd13)
	$display("WR_ACK_UNKNOWN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd0 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd3 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd1 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd4 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd2 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd5 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd6 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd7 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd8 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd11 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd9 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd10 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd12 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] != 4'd13)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_retryFlushReg_616_AND_NOT_sq_r_ETC___d4697)
	begin
	  v__h101795 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_retryFlushReg_616_AND_NOT_sq_r_ETC___d4697)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h101795,
		 "\"RespHandleSQ.bsv\", line 625, column 17\n",
		 "respAction retry flush assertion @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_retryFlushReg_616_AND_NOT_sq_r_ETC___d4697)
	$display("respAction=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_respHandleSQ_recvErrRespReg &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd6)
	$display("SQ_ACT_COALESCE_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_respHandleSQ_recvErrRespReg &&
	  (sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd2 ||
	   sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd5))
	$display("SQ_ACT_ERROR_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_retryFlushReg_616_AND_NOT_sq_r_ETC___d4716)
	$display("SQ_ACT_EXPLICIT_NORMAL_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_respHandleSQ_recvErrRespReg &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd8)
	$display("SQ_ACT_DUPLICATE_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_respHandleSQ_recvErrRespReg &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd10 &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[142])
	$display("SQ_ACT_ILLEGAL_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_respHandleSQ_recvErrRespReg &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd12)
	$display("SQ_ACT_FLUSH_WR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_respHandleSQ_recvErrRespReg &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd13)
	$display("SQ_ACT_TIMEOUT_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_respHandleSQ_recvErrRespReg &&
	  (sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd1 ||
	   sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd4))
	$display("SQ_ACT_EXPLICIT_RETRY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_respHandleSQ_recvErrRespReg &&
	  sq_respHandleSQ_incomingRespQ_D_OUT[3:0] == 4'd7)
	$display("SQ_ACT_IMPLICIT_RETRY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_retryFlushReg_616_AND_NOT_sq_r_ETC___d4746)
	$display("SQ_ACT_UNKNOWN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_retryFlushReg_616_AND_NOT_sq_r_ETC___d4697)
	$display(" should be SQ_ACT_DISCARD_RESP when inRetryState=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_retryFlushReg_616_AND_NOT_sq_r_ETC___d4697)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_retryFlushReg_616_AND_NOT_sq_r_ETC___d4697)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  NOT_sq_respHandleSQ_retryFlushReg_616_617_OR_s_ETC___d4756)
	begin
	  v__h101959 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  NOT_sq_respHandleSQ_retryFlushReg_616_617_OR_s_ETC___d4756)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h101959,
		 "\"RespHandleSQ.bsv\", line 647, column 17\n",
		 "respAction assertion @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  NOT_sq_respHandleSQ_retryFlushReg_616_617_OR_s_ETC___d4756)
	$display("respAction=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  NOT_sq_respHandleSQ_retryFlushReg_616_617_OR_s_ETC___d4756)
	$display("SQ_ACT_UNKNOWN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  NOT_sq_respHandleSQ_retryFlushReg_616_617_OR_s_ETC___d4756)
	$display(" should not be unknown");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  NOT_sq_respHandleSQ_retryFlushReg_616_617_OR_s_ETC___d4756)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd3 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd9 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd10 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd2 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd1 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd5 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd4 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd6 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd7 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd8)
	begin
	  v__h103981 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd3 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd9 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd10 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd2 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd1 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd5 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd4 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd6 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd7 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd8)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h103981,
		 "\"RespHandleSQ.bsv\", line 728, column 21\n",
		 "unreachible case @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd3 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd9 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd10 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd2 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd1 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd5 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd4 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd6 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd7 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd8)
	$display("respAction=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd0)
	$display("SQ_ACT_BAD_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd11)
	$display("SQ_ACT_LOCAL_ACC_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd12)
	$display("SQ_ACT_LOCAL_LEN_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd3 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd9 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd10 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd2 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd1 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd5 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd4 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd6 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd7 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd8 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd0 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd11 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd12)
	$display("SQ_ACT_UNKNOWN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd3 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd9 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd10 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd2 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd1 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd5 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd4 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd6 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd7 &&
	  sq_respHandleSQ_pendingRespQ_D_OUT[9:6] != 4'd8)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  ((sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd3) ?
	     (IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4844 ?
		4'd0 :
		sq_respHandleSQ_pendingRespQ_D_OUT[9:6]) :
	     sq_respHandleSQ_pendingRespQ_D_OUT[9:6]) ==
	  4'd13)
	begin
	  v__h104178 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  ((sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd3) ?
	     (IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4844 ?
		4'd0 :
		sq_respHandleSQ_pendingRespQ_D_OUT[9:6]) :
	     sq_respHandleSQ_pendingRespQ_D_OUT[9:6]) ==
	  4'd13)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h104178,
		 "\"RespHandleSQ.bsv\", line 736, column 13\n",
		 "respAction assertion @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  ((sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd3) ?
	     (IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4844 ?
		4'd0 :
		sq_respHandleSQ_pendingRespQ_D_OUT[9:6]) :
	     sq_respHandleSQ_pendingRespQ_D_OUT[9:6]) ==
	  4'd13)
	$display("respAction=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  ((sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd3) ?
	     (IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4844 ?
		4'd0 :
		sq_respHandleSQ_pendingRespQ_D_OUT[9:6]) :
	     sq_respHandleSQ_pendingRespQ_D_OUT[9:6]) ==
	  4'd13)
	$display("SQ_ACT_UNKNOWN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  ((sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd3) ?
	     (IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4844 ?
		4'd0 :
		sq_respHandleSQ_pendingRespQ_D_OUT[9:6]) :
	     sq_respHandleSQ_pendingRespQ_D_OUT[9:6]) ==
	  4'd13)
	$display(" should not be unknown");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  ((sq_respHandleSQ_pendingRespQ_D_OUT[9:6] == 4'd3) ?
	     (IF_sq_respHandleSQ_pendingRespQ_first__787_BIT_ETC___d4844 ?
		4'd0 :
		sq_respHandleSQ_pendingRespQ_D_OUT[9:6]) :
	     sq_respHandleSQ_pendingRespQ_D_OUT[9:6]) ==
	  4'd13)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd13 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd15 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd16 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd17 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd18)
	begin
	  v__h106970 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd13 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd15 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd16 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd17 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd18)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h106970,
		 "\"RespHandleSQ.bsv\", line 822, column 21\n",
		 "rdmaRespHasAETH assertion @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd13 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd15 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd16 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd17 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd18)
	$display("rdmaRespHasAETH=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd13 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd15 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd16 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd17 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd18)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd13 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd15 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd16 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd17 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd18)
	$display(" should be true");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd13 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd15 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd16 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd17 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[138:134] != 5'd18)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd3 ||
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd1 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd2 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd3 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd4))
	begin
	  v__h107194 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd3 ||
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd1 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd2 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd3 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd4))
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h107194,
		 "\"RespHandleSQ.bsv\", line 831, column 21\n",
		 "isValid(wcStatus) assertion @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd3 ||
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd1 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd2 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd3 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd4))
	$display("wcStatus=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd3 ||
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd1 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd2 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd3 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd4))
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd3 ||
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd1 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd2 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd3 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd4))
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd3 ||
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd1 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd2 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd3 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd4))
	$display(" should be valid after call genErrWorkCompStatusFromAethSQ(aeth=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd3 ||
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd1 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd2 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd3 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd4))
	$display("AETH { ", "rsvd: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd3 ||
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd1 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd2 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd3 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd4))
	$display("'h%h", 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd3 ||
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd1 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd2 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd3 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd4))
	$display(", ", "code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] == 2'd0)
	$display("AETH_CODE_ACK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] == 2'd1)
	$display("AETH_CODE_RNR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] == 2'd2)
	$display("AETH_CODE_RSVD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd3 ||
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd1 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd2 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd3 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd4) &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd0 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd1 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd2)
	$display("AETH_CODE_NAK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd3 ||
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd1 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd2 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd3 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd4))
	$display(", ", "value: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd3 ||
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd1 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd2 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd3 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd4))
	$display("'h%h", sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd3 ||
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd1 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd2 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd3 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd4))
	$display(", ", "msn: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd3 ||
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd1 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd2 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd3 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd4))
	$display("'h%h",
		 sq_respHandleSQ_pendingRetryCheckQ_D_OUT[37:14],
		 " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd3 ||
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd1 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd2 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd3 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd4))
	$display(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd2 &&
	  (sq_respHandleSQ_pendingRetryCheckQ_D_OUT[44:43] != 2'd3 ||
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd1 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd2 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd3 &&
	   sq_respHandleSQ_pendingRetryCheckQ_D_OUT[42:38] != 5'd4))
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd0 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd2 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd3 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd1 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd5 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd6 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd4 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd7 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd9 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd10 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd8)
	begin
	  v__h107798 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd0 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd2 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd3 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd1 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd5 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd6 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd4 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd7 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd9 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd10 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd8)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h107798,
		 "\"RespHandleSQ.bsv\", line 906, column 21\n",
		 "unreachible case @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd0 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd2 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd3 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd1 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd5 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd6 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd4 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd7 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd9 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd10 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd8)
	$display("respAction=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd11)
	$display("SQ_ACT_LOCAL_ACC_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] == 4'd12)
	$display("SQ_ACT_LOCAL_LEN_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd0 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd2 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd3 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd1 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd5 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd6 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd4 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd7 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd9 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd10 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd8 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd11 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd12)
	$display("SQ_ACT_UNKNOWN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkRetryErr &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd0 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd2 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd3 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd1 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd5 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd6 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd4 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd7 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd9 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd10 &&
	  sq_respHandleSQ_pendingRetryCheckQ_D_OUT[6:3] != 4'd8)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd0)
	begin
	  v__h109873 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd0)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h109873,
		 "\"RespHandleSQ.bsv\", line 939, column 21\n",
		 "wcs assertion @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd0)
	$display("wcStatus=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd0)
	$display("tagged Valid ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd1)
	$display("IBV_WC_LOC_LEN_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd2)
	$display("IBV_WC_LOC_QP_OP_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd3)
	$display("IBV_WC_LOC_EEC_OP_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd4)
	$display("IBV_WC_LOC_PROT_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd5)
	$display("IBV_WC_WR_FLUSH_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd6)
	$display("IBV_WC_MW_BIND_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd7)
	$display("IBV_WC_BAD_RESP_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd8)
	$display("IBV_WC_LOC_ACCESS_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd9)
	$display("IBV_WC_REM_INV_REQ_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd10)
	$display("IBV_WC_REM_ACCESS_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd11)
	$display("IBV_WC_REM_OP_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd12)
	$display("IBV_WC_RETRY_EXC_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd13)
	$display("IBV_WC_RNR_RETRY_EXC_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd14)
	$display("IBV_WC_LOC_RDD_VIOL_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd15)
	$display("IBV_WC_REM_INV_RD_REQ_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd16)
	$display("IBV_WC_REM_ABORT_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd17)
	$display("IBV_WC_INV_EECN_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd18)
	$display("IBV_WC_INV_EEC_STATE_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd19)
	$display("IBV_WC_FATAL_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd20)
	$display("IBV_WC_RESP_TIMEOUT_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd21)
	$display("IBV_WC_GENERAL_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] == 5'd22)
	$display("IBV_WC_TM_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd0 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd1 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd2 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd4 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd5 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd6 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd7 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd8 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd9 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd10 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd11 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd12 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd13 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd14 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd15 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd16 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd17 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd18 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd19 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd20 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd21 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd22)
	$display("IBV_WC_TM_RNDV_INCOMPLETE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd0)
	$display(" should be valid and IBV_WC_SUCCESS");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkPerm4NormalReadAtomicResp &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[12:9] == 4'd3 &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[8] &&
	  sq_respHandleSQ_pendingPermCheckQ_D_OUT[7:3] != 5'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76])
	begin
	  v__h117067 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76])
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h117067,
		 "\"RespHandleSQ.bsv\", line 1343, column 13\n",
		 "hasLocalErr -> genWorkComp assertion @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76])
	$display("genWorkComp=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76])
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76])
	$display(" should be true when hasLocalErr=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76])
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76])
	$display(", respAction=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd0)
	$display("SQ_ACT_BAD_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd1)
	$display("SQ_ACT_COALESCE_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd2)
	$display("SQ_ACT_ERROR_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd3)
	$display("SQ_ACT_EXPLICIT_NORMAL_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd4)
	$display("SQ_ACT_DISCARD_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd5)
	$display("SQ_ACT_DUPLICATE_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd6)
	$display("SQ_ACT_ILLEGAL_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd7)
	$display("SQ_ACT_FLUSH_WR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd8)
	$display("SQ_ACT_TIMEOUT_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd9)
	$display("SQ_ACT_EXPLICIT_RETRY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd10)
	$display("SQ_ACT_IMPLICIT_RETRY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd11)
	$display("SQ_ACT_LOCAL_ACC_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd12)
	$display("SQ_ACT_LOCAL_LEN_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd0 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd1 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd2 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd3 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd4 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd5 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd6 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd7 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd8 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd9 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd10 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd11 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd12)
	$display("SQ_ACT_UNKNOWN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[78] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76])
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71])
	begin
	  v__h117291 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71])
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h117291,
		 "\"RespHandleSQ.bsv\", line 1352, column 13\n",
		 "genWorkComp -> isValid(wcStatus) assertion @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71])
	$display("wcStatus=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71])
	$display(" should be valid when genWorkComp=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71])
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71])
	$display(", respAction=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd0)
	$display("SQ_ACT_BAD_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd1)
	$display("SQ_ACT_COALESCE_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd2)
	$display("SQ_ACT_ERROR_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd3)
	$display("SQ_ACT_EXPLICIT_NORMAL_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd4)
	$display("SQ_ACT_DISCARD_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd5)
	$display("SQ_ACT_DUPLICATE_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd6)
	$display("SQ_ACT_ILLEGAL_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd7)
	$display("SQ_ACT_FLUSH_WR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd8)
	$display("SQ_ACT_TIMEOUT_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd9)
	$display("SQ_ACT_EXPLICIT_RETRY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd10)
	$display("SQ_ACT_IMPLICIT_RETRY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd11)
	$display("SQ_ACT_LOCAL_ACC_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] == 4'd12)
	$display("SQ_ACT_LOCAL_LEN_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd0 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd1 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd2 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd3 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd4 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd5 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd6 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd7 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd8 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd9 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd10 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd11 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[75:72] != 4'd12)
	$display("SQ_ACT_UNKNOWN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[71])
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd0 &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76])
	begin
	  v__h117643 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd0 &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76])
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h117643,
		 "\"RespHandleSQ.bsv\", line 1380, column 17\n",
		 "genWorkComp assertion @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd0 &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76])
	$display("genWorkComp=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd0 &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76])
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd0 &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76])
	$display(" should be true when wcStatus=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd1)
	$display("IBV_WC_LOC_LEN_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd2)
	$display("IBV_WC_LOC_QP_OP_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd3)
	$display("IBV_WC_LOC_EEC_OP_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd4)
	$display("IBV_WC_LOC_PROT_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd5)
	$display("IBV_WC_WR_FLUSH_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd6)
	$display("IBV_WC_MW_BIND_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd7)
	$display("IBV_WC_BAD_RESP_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd8)
	$display("IBV_WC_LOC_ACCESS_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd9)
	$display("IBV_WC_REM_INV_REQ_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd10)
	$display("IBV_WC_REM_ACCESS_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd11)
	$display("IBV_WC_REM_OP_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd12)
	$display("IBV_WC_RETRY_EXC_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd13)
	$display("IBV_WC_RNR_RETRY_EXC_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd14)
	$display("IBV_WC_LOC_RDD_VIOL_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd15)
	$display("IBV_WC_REM_INV_RD_REQ_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd16)
	$display("IBV_WC_REM_ABORT_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd17)
	$display("IBV_WC_INV_EECN_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd18)
	$display("IBV_WC_INV_EEC_STATE_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd19)
	$display("IBV_WC_FATAL_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd20)
	$display("IBV_WC_RESP_TIMEOUT_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd21)
	$display("IBV_WC_GENERAL_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] == 5'd22)
	$display("IBV_WC_TM_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd0 &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd1 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd2 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd3 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd4 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd5 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd6 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd7 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd8 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd9 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd10 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd11 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd12 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd13 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd14 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd15 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd16 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd17 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd18 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd19 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd20 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd21 &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd22)
	$display("IBV_WC_TM_RNDV_INCOMPLETE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_issueDmaReq &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[71] &&
	  sq_respHandleSQ_pendingDmaReqQ_D_OUT[70:66] != 5'd0 &&
	  !sq_respHandleSQ_pendingDmaReqQ_D_OUT[76])
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp &&
	  WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  respPktPipe_metaDataQ_EMPTY_N &&
	  sq_respHandleSQ_incomingRespQ_FULL_N &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  _write_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_recvErrRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 1452, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_discardGhostResp and\n  RL_sq_respHandleSQ_handleRespByType called conflicting methods read and\n  write of module instance sq_respHandleSQ_recvErrRespReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp &&
	  WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  respPktPipe_metaDataQ_EMPTY_N &&
	  sq_respHandleSQ_incomingRespQ_FULL_N &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvErrRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 1452, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_discardGhostResp and\n  RL_sq_respHandleSQ_recvRespHeader called conflicting methods read and write\n  of module instance sq_respHandleSQ_recvErrRespReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp &&
	  WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_respHandleSQ_recvErrRespReg &&
	  respPktPipe_metaDataQ_EMPTY_N &&
	  sq_respHandleSQ_incomingRespQ_FULL_N &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvRetryRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 1452, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_discardGhostResp and\n  RL_sq_respHandleSQ_recvRespHeader called conflicting methods read and write\n  of module instance sq_respHandleSQ_retryFlushReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkTimeOutErr &&
	  WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_retryFlushReg &&
	  sq_retryHandler_timeOutNotificationQ_EMPTY_N &&
	  !sq_respHandleSQ_errOccurredReg &&
	  _write_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_recvErrRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 1498, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_checkTimeOutErr and\n  RL_sq_respHandleSQ_handleRespByType called conflicting methods read and\n  write of module instance sq_respHandleSQ_recvErrRespReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkTimeOutErr &&
	  WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_retryFlushReg &&
	  sq_retryHandler_timeOutNotificationQ_EMPTY_N &&
	  !sq_respHandleSQ_errOccurredReg &&
	  _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvErrRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 1498, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_checkTimeOutErr and\n  RL_sq_respHandleSQ_recvRespHeader called conflicting methods read and write\n  of module instance sq_respHandleSQ_recvErrRespReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_checkTimeOutErr &&
	  WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_errOccurredReg &&
	  sq_retryHandler_timeOutNotificationQ_EMPTY_N &&
	  !sq_respHandleSQ_recvErrRespReg &&
	  _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvRetryRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 1498, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_checkTimeOutErr and\n  RL_sq_respHandleSQ_recvRespHeader called conflicting methods read and write\n  of module instance sq_respHandleSQ_retryFlushReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp &&
	  WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp)
	$display("Error: \"RespHandleSQ.bsv\", line 1587, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_errFlushIncomingResp and\n  RL_sq_respHandleSQ_discardGhostResp called conflicting methods first and deq\n  of module instance respPktPipe_metaDataQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp &&
	  WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp)
	$display("Error: \"RespHandleSQ.bsv\", line 1587, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_errFlushIncomingResp and\n  RL_sq_respHandleSQ_discardGhostResp called conflicting methods deq and deq\n  of module instance respPktPipe_metaDataQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp &&
	  WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp)
	$display("Error: \"RespHandleSQ.bsv\", line 1587, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_errFlushIncomingResp and\n  RL_sq_respHandleSQ_discardGhostResp called conflicting methods enq and enq\n  of module instance sq_respHandleSQ_incomingRespQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp &&
	  WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_errOccurredReg &&
	  sq_respHandleSQ_incomingRespQ_FULL_N &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  respPktPipe_metaDataQ_EMPTY_N &&
	  _write_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_recvErrRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 1587, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_errFlushIncomingResp and\n  RL_sq_respHandleSQ_handleRespByType called conflicting methods read and\n  write of module instance sq_respHandleSQ_recvErrRespReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp &&
	  WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_errOccurredReg &&
	  sq_respHandleSQ_incomingRespQ_FULL_N &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  respPktPipe_metaDataQ_EMPTY_N &&
	  _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvErrRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 1587, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_errFlushIncomingResp and\n  RL_sq_respHandleSQ_recvRespHeader called conflicting methods read and write\n  of module instance sq_respHandleSQ_recvErrRespReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	  WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp &&
	  respPktPipe_metaDataQ_EMPTY_N)
	$display("Error: \"RespHandleSQ.bsv\", line 1661, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload and\n  RL_sq_respHandleSQ_errFlushIncomingResp called conflicting methods first and\n  deq of module instance respPktPipe_metaDataQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	  WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp &&
	  respPktPipe_metaDataQ_EMPTY_N)
	$display("Error: \"RespHandleSQ.bsv\", line 1661, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload and\n  RL_sq_respHandleSQ_errFlushIncomingResp called conflicting methods deq and\n  deq of module instance respPktPipe_metaDataQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	  WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp)
	$display("Error: \"RespHandleSQ.bsv\", line 1661, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload and\n  RL_sq_respHandleSQ_errFlushIncomingResp called conflicting methods notEmpty\n  and deq of module instance respPktPipe_metaDataQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	  WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp &&
	  respPktPipe_metaDataQ_EMPTY_N)
	$display("Error: \"RespHandleSQ.bsv\", line 1661, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload and\n  RL_sq_respHandleSQ_errFlushIncomingResp called conflicting methods enq and\n  enq of module instance sq_respHandleSQ_incomingRespQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	  WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp &&
	  respPktPipe_metaDataQ_EMPTY_N)
	$display("Error: \"RespHandleSQ.bsv\", line 1661, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload and\n  RL_sq_respHandleSQ_discardGhostResp called conflicting methods first and deq\n  of module instance respPktPipe_metaDataQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	  WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp &&
	  respPktPipe_metaDataQ_EMPTY_N)
	$display("Error: \"RespHandleSQ.bsv\", line 1661, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload and\n  RL_sq_respHandleSQ_discardGhostResp called conflicting methods deq and deq\n  of module instance respPktPipe_metaDataQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	  WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp)
	$display("Error: \"RespHandleSQ.bsv\", line 1661, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload and\n  RL_sq_respHandleSQ_discardGhostResp called conflicting methods notEmpty and\n  deq of module instance respPktPipe_metaDataQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	  WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp &&
	  respPktPipe_metaDataQ_EMPTY_N)
	$display("Error: \"RespHandleSQ.bsv\", line 1661, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload and\n  RL_sq_respHandleSQ_discardGhostResp called conflicting methods enq and enq\n  of module instance sq_respHandleSQ_incomingRespQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	  WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_errOccurredReg &&
	  sq_respHandleSQ_retryFlushReg &&
	  (!respPktPipe_metaDataQ_EMPTY_N ||
	   sq_respHandleSQ_incomingRespQ_FULL_N) &&
	  _write_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_recvErrRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 1661, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload and\n  RL_sq_respHandleSQ_handleRespByType called conflicting methods read and\n  write of module instance sq_respHandleSQ_recvErrRespReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	  WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_errOccurredReg &&
	  sq_respHandleSQ_retryFlushReg &&
	  (!respPktPipe_metaDataQ_EMPTY_N ||
	   sq_respHandleSQ_incomingRespQ_FULL_N) &&
	  _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvErrRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 1661, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload and\n  RL_sq_respHandleSQ_recvRespHeader called conflicting methods read and write\n  of module instance sq_respHandleSQ_recvErrRespReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	  WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_errOccurredReg &&
	  (!respPktPipe_metaDataQ_EMPTY_N ||
	   sq_respHandleSQ_incomingRespQ_FULL_N) &&
	  !sq_respHandleSQ_recvErrRespReg &&
	  _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvRetryRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 1661, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload and\n  RL_sq_respHandleSQ_recvRespHeader called conflicting methods read and write\n  of module instance sq_respHandleSQ_retryFlushReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  sq_pendingWorkReqBuf_emptyReg)
	begin
	  v__h122840 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h122840,
		 "\"RespHandleSQ.bsv\", line 1636, column 13\n",
		 "pendingWR notEmpty assertion @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("pendingWorkReqPipeIn.notEmpty=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display(" should be true, when cntrlStatus.comm.isRTS=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display(", inRetryState=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display(", retryFlushReg=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display(", errOccurredReg=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  sq_pendingWorkReqBuf_emptyReg)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  cntrl_stateReg == 4'd3 &&
	  sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  _write_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_recvErrRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 1633, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_retryFlushDone and\n  RL_sq_respHandleSQ_handleRespByType called conflicting methods read and\n  write of module instance sq_respHandleSQ_recvErrRespReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  cntrl_stateReg == 4'd3 &&
	  sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvErrRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 1633, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_retryFlushDone and\n  RL_sq_respHandleSQ_recvRespHeader called conflicting methods read and write\n  of module instance sq_respHandleSQ_recvErrRespReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_recvErrRespReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvRetryRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 1633, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_retryFlushDone and\n  RL_sq_respHandleSQ_recvRespHeader called conflicting methods read and write\n  of module instance sq_respHandleSQ_retryFlushReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_startPreRetry &&
	  sq_retryHandler_retryReasonReg == 3'd0)
	begin
	  v__h36446 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_startPreRetry &&
	  sq_retryHandler_retryReasonReg == 3'd0)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h36446,
		 "\"RetryHandleSQ.bsv\", line 557, column 13\n",
		 "retryReasonReg assertion @ mkRetryHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_startPreRetry &&
	  sq_retryHandler_retryReasonReg == 3'd0)
	$display("retryReasonReg=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_startPreRetry &&
	  sq_retryHandler_retryReasonReg == 3'd0)
	$display("RETRY_REASON_NOT_RETRY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_startPreRetry &&
	  sq_retryHandler_retryReasonReg == 3'd0)
	$display(" should not be RETRY_REASON_NOT_RETRY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_startPreRetry &&
	  sq_retryHandler_retryReasonReg == 3'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_startPreRetry &&
	  sq_pendingWorkReqBuf_scanStateReg != 2'd0 &&
	  sq_pendingWorkReqBuf_emptyReg)
	begin
	  v__h36711 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_startPreRetry &&
	  sq_pendingWorkReqBuf_scanStateReg != 2'd0 &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h36711,
		 "\"SpecialFIFOF.bsv\", line 482, column 17\n",
		 "isEmpty assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_startPreRetry &&
	  sq_pendingWorkReqBuf_scanStateReg != 2'd0 &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("cannot restart scan when isEmpty=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_startPreRetry &&
	  sq_pendingWorkReqBuf_scanStateReg != 2'd0 &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_startPreRetry &&
	  sq_pendingWorkReqBuf_scanStateReg != 2'd0 &&
	  sq_pendingWorkReqBuf_emptyReg)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_checkPartialRetry &&
	  sq_retryHandler_retryReasonReg != 3'd4 &&
	  sq_retryHandler_retryWorkReqIdReg !=
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1463)
	begin
	  v__h37491 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_checkPartialRetry &&
	  sq_retryHandler_retryReasonReg != 3'd4 &&
	  sq_retryHandler_retryWorkReqIdReg !=
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1463)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h37491,
		 "\"RetryHandleSQ.bsv\", line 646, column 17\n",
		 "retryWorkReqIdReg assertion @ mkRetryHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_checkPartialRetry &&
	  sq_retryHandler_retryReasonReg != 3'd4 &&
	  sq_retryHandler_retryWorkReqIdReg !=
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1463)
	$display("retryWorkReqIdReg=%h should == firstRetryWR.wr.id=%h",
		 sq_retryHandler_retryWorkReqIdReg,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1463);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_checkPartialRetry &&
	  sq_retryHandler_retryReasonReg != 3'd4 &&
	  sq_retryHandler_retryWorkReqIdReg !=
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1463)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_checkPartialRetry &&
	  NOT_IF_sq_retryHandler_retryReasonReg_431_EQ_4_ETC___d1516)
	begin
	  v__h38910 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_checkPartialRetry &&
	  NOT_IF_sq_retryHandler_retryReasonReg_431_EQ_4_ETC___d1516)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h38910,
		 "\"RetryHandleSQ.bsv\", line 659, column 13\n",
		 "retryStartPSN assertion @ mkRetryHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_checkPartialRetry &&
	  NOT_IF_sq_retryHandler_retryReasonReg_431_EQ_4_ETC___d1516)
	$display("retryStartPSN=%h should between startPSN=%h and endPSN=%h inclusively",
		 v__h37423,
		 value__h99939,
		 value__h99966);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_checkPartialRetry &&
	  NOT_IF_sq_retryHandler_retryReasonReg_431_EQ_4_ETC___d1516)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_retryCntrlStateReg_port1__read == 2'd1)
	begin
	  v__h35350 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_retryCntrlStateReg_port1__read == 2'd1)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h35350,
		 "\"RetryHandleSQ.bsv\", line 425, column 13\n",
		 "hasRetryErr assertion @ mkRetryHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_retryCntrlStateReg_port1__read == 2'd1)
	$display("hasRetryErr=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_retryCntrlStateReg_port1__read == 2'd1)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_retryCntrlStateReg_port1__read == 2'd1)
	$display(" should be false and retryCntrlStateReg[1]=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_retryCntrlStateReg_port1__read == 2'd1)
	$display("RETRY_CNTRL_ST_RETRY_LIMIT_EXC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_retryCntrlStateReg_port1__read == 2'd1)
	$display(" should != RETRY_CNTRL_ST_RETRY_LIMIT_EXC",
		 " when updateRetryCntQ.notEmpty=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_retryCntrlStateReg_port1__read == 2'd1 &&
	  sq_retryHandler_updateRetryCntQ_EMPTY_N)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_retryCntrlStateReg_port1__read == 2'd1 &&
	  !sq_retryHandler_updateRetryCntQ_EMPTY_N)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_retryCntrlStateReg_port1__read == 2'd1)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd2 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd3 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd4 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd1)
	begin
	  v__h35692 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd2 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd3 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd4 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd1)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h35692,
		 "\"RetryHandleSQ.bsv\", line 168, column 25\n",
		 "unreachible case in decRetryCntByReason() @ mkRetryHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd2 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd3 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd4 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd1)
	$display("retryReason=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd2 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd3 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd4 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd1 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] == 3'd0)
	$display("RETRY_REASON_NOT_RETRY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd2 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd3 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd4 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd1 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd0)
	$display("RETRY_REASON_TIMEOUT");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd2 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd3 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd4 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd1)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_pendingWorkReqBuf_emptyReg)
	begin
	  v__h35995 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h35995,
		 "\"RetryHandleSQ.bsv\", line 455, column 17\n",
		 "pendingWorkReqNotEmpty assertion @ mkRetryHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("pendingWorkReqNotEmpty=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display(" should be true when maybeRetryReason=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("tagged Valid ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] == 3'd0)
	$display("RETRY_REASON_NOT_RETRY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] == 3'd1)
	$display("RETRY_REASON_RNR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] == 3'd2)
	$display("RETRY_REASON_SEQ_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] == 3'd3)
	$display("RETRY_REASON_IMPLICIT");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd0 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd1 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd2 &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[2:0] != 3'd3)
	$display("RETRY_REASON_TIMEOUT");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryCntUpdate &&
	  sq_retryHandler_updateRetryCntQ_D_OUT[3] &&
	  sq_pendingWorkReqBuf_emptyReg)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	  sq_retryHandler_retryActionQ_D_OUT[97] &&
	  sq_pendingWorkReqBuf_emptyReg)
	begin
	  v__h34459 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	  sq_retryHandler_retryActionQ_D_OUT[97] &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h34459,
		 "\"RetryHandleSQ.bsv\", line 380, column 17\n",
		 "pendingWorkReqNotEmpty assertion @ mkRetryHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	  sq_retryHandler_retryActionQ_D_OUT[97] &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("pendingWorkReqNotEmpty=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	  sq_retryHandler_retryActionQ_D_OUT[97] &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	  sq_retryHandler_retryActionQ_D_OUT[97] &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display(" should be true when retryReqOrResetRetryCnt=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	  sq_retryHandler_retryActionQ_D_OUT[97] &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	  sq_retryHandler_retryActionQ_D_OUT[97] &&
	  sq_pendingWorkReqBuf_emptyReg)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	  sq_retryHandler_retryActionQ_D_OUT[97] &&
	  sq_retryHandler_retryActionQ_D_OUT[8:6] == 3'd1 &&
	  !sq_retryHandler_retryActionQ_D_OUT[5])
	begin
	  v__h34954 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	  sq_retryHandler_retryActionQ_D_OUT[97] &&
	  sq_retryHandler_retryActionQ_D_OUT[8:6] == 3'd1 &&
	  !sq_retryHandler_retryActionQ_D_OUT[5])
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h34954,
		 "\"RetryHandleSQ.bsv\", line 396, column 25\n",
		 "retryRnrTimer assertion @ mkRetryHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	  sq_retryHandler_retryActionQ_D_OUT[97] &&
	  sq_retryHandler_retryActionQ_D_OUT[8:6] == 3'd1 &&
	  !sq_retryHandler_retryActionQ_D_OUT[5])
	$display("retryRnrTimer=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	  sq_retryHandler_retryActionQ_D_OUT[97] &&
	  sq_retryHandler_retryActionQ_D_OUT[8:6] == 3'd1 &&
	  !sq_retryHandler_retryActionQ_D_OUT[5])
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	  sq_retryHandler_retryActionQ_D_OUT[97] &&
	  sq_retryHandler_retryActionQ_D_OUT[8:6] == 3'd1 &&
	  !sq_retryHandler_retryActionQ_D_OUT[5])
	$display(" should be valid when retryReason=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	  sq_retryHandler_retryActionQ_D_OUT[97] &&
	  sq_retryHandler_retryActionQ_D_OUT[8:6] == 3'd1 &&
	  !sq_retryHandler_retryActionQ_D_OUT[5] &&
	  sq_retryHandler_retryActionQ_D_OUT[8:6] == 3'd0)
	$display("RETRY_REASON_NOT_RETRY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	  sq_retryHandler_retryActionQ_D_OUT[97] &&
	  sq_retryHandler_retryActionQ_D_OUT[8:6] == 3'd1 &&
	  !sq_retryHandler_retryActionQ_D_OUT[5])
	$display("RETRY_REASON_RNR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	  sq_retryHandler_retryActionQ_D_OUT[97] &&
	  sq_retryHandler_retryActionQ_D_OUT[8:6] == 3'd1 &&
	  !sq_retryHandler_retryActionQ_D_OUT[5] &&
	  sq_retryHandler_retryActionQ_D_OUT[8:6] == 3'd2)
	$display("RETRY_REASON_SEQ_ERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	  sq_retryHandler_retryActionQ_D_OUT[97] &&
	  sq_retryHandler_retryActionQ_D_OUT[8:6] == 3'd1 &&
	  !sq_retryHandler_retryActionQ_D_OUT[5] &&
	  sq_retryHandler_retryActionQ_D_OUT[8:6] == 3'd3)
	$display("RETRY_REASON_IMPLICIT");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_retryHandler_handleRetryAction &&
	  sq_retryHandler_retryActionQ_D_OUT[97] &&
	  sq_retryHandler_retryActionQ_D_OUT[8:6] == 3'd1 &&
	  !sq_retryHandler_retryActionQ_D_OUT[5])
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  (sq_pendingWorkReqBuf_scanStartReg_port1__read ||
	   sq_pendingWorkReqBuf_preScanRestartReg_port1__read))
	begin
	  v__h98868 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  (sq_pendingWorkReqBuf_scanStartReg_port1__read ||
	   sq_pendingWorkReqBuf_preScanRestartReg_port1__read))
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h98868,
		 "\"SpecialFIFOF.bsv\", line 434, column 17\n",
		 "dequeue assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  (sq_pendingWorkReqBuf_scanStartReg_port1__read ||
	   sq_pendingWorkReqBuf_preScanRestartReg_port1__read))
	$display("cannot dequeue when scanStartReg=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_pendingWorkReqBuf_scanStartReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read &&
	  !sq_pendingWorkReqBuf_scanStartReg_port1__read)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  (sq_pendingWorkReqBuf_scanStartReg_port1__read ||
	   sq_pendingWorkReqBuf_preScanRestartReg_port1__read))
	$display(" or preScanRestartReg=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_pendingWorkReqBuf_scanStartReg_port1__read &&
	  !sq_pendingWorkReqBuf_preScanRestartReg_port1__read)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  (sq_pendingWorkReqBuf_scanStartReg_port1__read ||
	   sq_pendingWorkReqBuf_preScanRestartReg_port1__read))
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	begin
	  v__h99106 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h99106,
		 "\"RespHandleSQ.bsv\", line 521, column 17\n",
		 "deqPendingWorkReq assertion @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display("deqPendingWorkReq=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(" should be true when rdmaRespType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  sq_respHandleSQ_preStageWorkReqAckTypeReg != 4'd8 &&
	  !sq_respHandleSQ_recvRetryRespReg &&
	  sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	  sq_respHandleSQ_preStageReqPktInfoReg[5] &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display("RDMA_RESP_NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  sq_respHandleSQ_preStageWorkReqAckTypeReg != 4'd8 &&
	  !sq_respHandleSQ_recvRetryRespReg &&
	  sq_respHandleSQ_preStageRespTypeReg == 2'd2 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display("RDMA_RESP_ERROR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", recvRetryRespReg=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", recvErrRespReg=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", and bth.psn=%h",
		 sq_respHandleSQ_preStageReqPktInfoReg[62:39],
		 ", bth.opcode=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd0)
	$display("SEND_FIRST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd1)
	$display("SEND_MIDDLE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd2)
	$display("SEND_LAST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd3)
	$display("SEND_LAST_WITH_IMMEDIATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd4)
	$display("SEND_ONLY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd5)
	$display("SEND_ONLY_WITH_IMMEDIATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd6)
	$display("RDMA_WRITE_FIRST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd7)
	$display("RDMA_WRITE_MIDDLE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd8)
	$display("RDMA_WRITE_LAST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd9)
	$display("RDMA_WRITE_LAST_WITH_IMMEDIATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd10)
	$display("RDMA_WRITE_ONLY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd11)
	$display("RDMA_WRITE_ONLY_WITH_IMMEDIATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd12)
	$display("RDMA_READ_REQUEST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd13)
	$display("RDMA_READ_RESPONSE_FIRST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd14)
	$display("RDMA_READ_RESPONSE_MIDDLE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd15)
	$display("RDMA_READ_RESPONSE_LAST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd16)
	$display("RDMA_READ_RESPONSE_ONLY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd17)
	$display("ACKNOWLEDGE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd18)
	$display("ATOMIC_ACKNOWLEDGE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd19)
	$display("COMPARE_SWAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd20)
	$display("FETCH_ADD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd21)
	$display("RESYNC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[131:127] == 5'd22)
	$display("SEND_LAST_WITH_INVALIDATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4479)
	$display("SEND_ONLY_WITH_INVALIDATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(" is the last or only response, AETH=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display("AETH { ", "rsvd: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display("'h%h", 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", ", "code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[37:36] == 2'd0)
	$display("AETH_CODE_ACK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[37:36] == 2'd1)
	$display("AETH_CODE_RNR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[37:36] == 2'd2)
	$display("AETH_CODE_RSVD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_respHandleSQ_preStageReqPktInfoReg[37:36] != 2'd0 &&
	  sq_respHandleSQ_preStageReqPktInfoReg[37:36] != 2'd1 &&
	  sq_respHandleSQ_preStageReqPktInfoReg[37:36] != 2'd2)
	$display("AETH_CODE_NAK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", ", "value: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display("'h%h", sq_respHandleSQ_preStageReqPktInfoReg[35:31]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", ", "msn: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display("'h%h", sq_respHandleSQ_preStageReqPktInfoReg[30:7], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", pending WR=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display("PendingWorkReq { wr=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display("WorkReq { ID=%h",
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1463,
		 ", opcode=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753)
	$display("IBV_WR_RDMA_WRITE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761)
	$display("IBV_WR_RDMA_WRITE_WITH_IMM");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3770)
	$display("IBV_WR_SEND");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3783)
	$display("IBV_WR_SEND_WITH_IMM");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3794)
	$display("IBV_WR_RDMA_READ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3806)
	$display("IBV_WR_ATOMIC_CMP_AND_SWP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3822)
	$display("IBV_WR_ATOMIC_FETCH_AND_ADD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3836)
	$display("IBV_WR_LOCAL_INV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3851)
	$display("IBV_WR_BIND_MW");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3870)
	$display("IBV_WR_SEND_WITH_INV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3887)
	$display("IBV_WR_TSO");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3761 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3905)
	$display("IBV_WR_DRIVER1");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3927)
	$display("IBV_WR_RDMA_READ_RESP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3947)
	$display("IBV_WR_FLUSH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d3753 &&
	  NOT_SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3962)
	$display("IBV_WR_ATOMIC_WRITE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", flags=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display("FlagsType { flags: ", enumBits__h93928, " = ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  enumBits__h93928[0])
	$display("IBV_SEND_FENCE", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !enumBits__h93928[0])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  enumBits__h93928[1])
	$display("IBV_SEND_SIGNALED", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !enumBits__h93928[1])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  enumBits__h93928[2])
	$display("IBV_SEND_SOLICITED", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !enumBits__h93928[2])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  enumBits__h93928[3])
	$display("IBV_SEND_INLINE", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !enumBits__h93928[3])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  enumBits__h93928[4])
	$display("IBV_SEND_IP_CSUM", " | ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !enumBits__h93928[4])
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  enumBits__h93928 == 5'd0)
	$display("IBV_SEND_NO_FLAGS", " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  enumBits__h93928 != 5'd0)
	$display("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", raddr=%h, rkey=%h, len=%0d, laddr=%h, lkey=%h, sqpn=%h",
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1525,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1561,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1562,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1592,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1618,
		 SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BITS_ETC___d1619,
		 ", solicited=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3994)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d3994)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", comp=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4003)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4003)
	$display("tagged Valid ", "'h%h", value__h99740);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", swap=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4012)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4012)
	$display("tagged Valid ", "'h%h", value__h99767);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", immDt=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4021)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4021)
	$display("tagged Valid ", "'h%h", value__h99797);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", rkey2Inv=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4030)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4030)
	$display("tagged Valid ", "'h%h", value__h99824);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", srqn=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4039)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4039)
	$display("tagged Valid ", "'h%h", value__h99854);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", dqpn=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4048)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4048)
	$display("tagged Valid ", "'h%h", value__h99881);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", qkey=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4057)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4057)
	$display("tagged Valid ", "'h%h", value__h99908);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", startPSN=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1473)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1473)
	$display("tagged Valid ", "'h%h", value__h99939);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", endPSN=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1491)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d1491)
	$display("tagged Valid ", "'h%h", value__h99966);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", pktNum=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1649)
	$display("tagged Valid %0d",
		 SEL_ARR_IF_sq_pendingWorkReqBuf_dataVec_0_59_B_ETC___d1650);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_sq_pendingWorkReqBuf_dataVec_0_59_BIT__ETC___d1649)
	$display("tagged Invalid PktNum");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(", isOnlyReqPkt=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074)
	$display("tagged Valid ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074 &&
	  SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4083)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4074 &&
	  !SEL_ARR_NOT_sq_pendingWorkReqBuf_dataVec_0_59__ETC___d4083)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$display(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  NOT_sq_respHandleSQ_preStageWorkReqAckTypeReg__ETC___d4352 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	  sq_respHandleSQ_preStageDeqPktMetaDataReg &&
	  respPktPipe_metaDataQ_EMPTY_N)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload called conflicting\n  methods deq and deq of module instance respPktPipe_metaDataQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	  respPktPipe_metaDataQ_EMPTY_N)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload called conflicting\n  methods enq and enq of module instance sq_respHandleSQ_incomingRespQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_respHandleSQ_recvErrRespReg &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  (!sq_respHandleSQ_preStageDeqPendingWorkReqReg ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	  (!sq_respHandleSQ_preStageDeqPktMetaDataReg ||
	   respPktPipe_metaDataQ_EMPTY_N) &&
	  sq_respHandleSQ_incomingRespQ_FULL_N)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload called conflicting\n  methods read and write of module instance sq_respHandleSQ_preStageStateReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  sq_respHandleSQ_preStageWorkReqAckTypeReg != 4'd8 &&
	  (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	   sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	   sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	   __duses999) &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  sq_retryHandler_retryHandleStateReg == 3'd7)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_retryFlushDone called conflicting methods read and write\n  of module instance sq_respHandleSQ_recvRetryRespReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_retryFlushDone &&
	  cntrl_stateReg == 4'd3 &&
	  sq_respHandleSQ_preStageStateReg == 2'd2 &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_respHandleSQ_recvErrRespReg &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  (!sq_respHandleSQ_preStageDeqPendingWorkReqReg ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	  (!sq_respHandleSQ_preStageDeqPktMetaDataReg ||
	   respPktPipe_metaDataQ_EMPTY_N) &&
	  sq_respHandleSQ_incomingRespQ_FULL_N &&
	  sq_retryHandler_retryHandleStateReg == 3'd7)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_retryFlushDone called conflicting methods read and write\n  of module instance sq_respHandleSQ_retryFlushReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp &&
	  sq_respHandleSQ_preStageDeqPktMetaDataReg)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_errFlushIncomingResp called conflicting methods deq and\n  deq of module instance respPktPipe_metaDataQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_errFlushIncomingResp called conflicting methods enq and\n  enq of module instance sq_respHandleSQ_incomingRespQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp &&
	  sq_respHandleSQ_preStageDeqPktMetaDataReg)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_discardGhostResp called conflicting methods deq and deq\n  of module instance respPktPipe_metaDataQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_discardGhostResp called conflicting methods enq and enq\n  of module instance sq_respHandleSQ_incomingRespQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  cntrl_stateReg == 4'd3 &&
	  sq_respHandleSQ_preStageStateReg == 2'd2 &&
	  !sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  (!sq_respHandleSQ_preStageDeqPendingWorkReqReg ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	  (!sq_respHandleSQ_preStageDeqPktMetaDataReg ||
	   respPktPipe_metaDataQ_EMPTY_N) &&
	  sq_respHandleSQ_incomingRespQ_FULL_N &&
	  _write_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_recvErrRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_handleRespByType called conflicting methods read and\n  write of module instance sq_respHandleSQ_recvErrRespReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  cntrl_stateReg == 4'd3 &&
	  sq_respHandleSQ_preStageStateReg == 2'd2 &&
	  !sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  (!sq_respHandleSQ_preStageDeqPendingWorkReqReg ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	  (!sq_respHandleSQ_preStageDeqPktMetaDataReg ||
	   respPktPipe_metaDataQ_EMPTY_N) &&
	  sq_respHandleSQ_incomingRespQ_FULL_N &&
	  _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvErrRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_recvRespHeader called conflicting methods read and write\n  of module instance sq_respHandleSQ_recvErrRespReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  sq_respHandleSQ_preStageWorkReqAckTypeReg != 4'd8 &&
	  (sq_respHandleSQ_preStageRespTypeReg == 2'd0 &&
	   sq_respHandleSQ_preStageReqPktInfoReg[5] ||
	   sq_respHandleSQ_preStageRespTypeReg == 2'd2 ||
	   __duses999) &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvRetryRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_recvRespHeader called conflicting methods read and write\n  of module instance sq_respHandleSQ_recvRetryRespReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  cntrl_stateReg == 4'd3 &&
	  sq_respHandleSQ_preStageStateReg == 2'd2 &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_respHandleSQ_recvErrRespReg &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  (!sq_respHandleSQ_preStageDeqPendingWorkReqReg ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	  (!sq_respHandleSQ_preStageDeqPktMetaDataReg ||
	   respPktPipe_metaDataQ_EMPTY_N) &&
	  sq_respHandleSQ_incomingRespQ_FULL_N &&
	  _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvRetryRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_recvRespHeader called conflicting methods read and write\n  of module instance sq_respHandleSQ_retryFlushReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_preProcRespInfo called conflicting methods read and write\n  of module instance sq_respHandleSQ_preStageDeqPktMetaDataReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_preProcRespInfo called conflicting methods read and write\n  of module instance sq_respHandleSQ_preStageDeqPendingWorkReqReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_preProcRespInfo called conflicting methods read and write\n  of module instance sq_respHandleSQ_preStageWorkReqAckTypeReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_preProcRespInfo called conflicting methods read and write\n  of module instance sq_respHandleSQ_preStageWorkCompReqTypeReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_preProcRespInfo called conflicting methods read and write\n  of module instance sq_respHandleSQ_retryResetReqReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_preProcRespInfo &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_respHandleSQ_recvErrRespReg &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  (!sq_respHandleSQ_preStageDeqPendingWorkReqReg ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	  (!sq_respHandleSQ_preStageDeqPktMetaDataReg ||
	   respPktPipe_metaDataQ_EMPTY_N) &&
	  sq_respHandleSQ_incomingRespQ_FULL_N)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_preProcRespInfo called conflicting methods read and write\n  of module instance sq_respHandleSQ_preStageStateReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_preBuildRespInfo called conflicting methods read and\n  write of module instance sq_respHandleSQ_preStagePktMetaDataReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_preBuildRespInfo called conflicting methods read and\n  write of module instance sq_respHandleSQ_preStageReqPktInfoReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  sq_respHandleSQ_preStageWorkReqAckTypeReg != 4'd8 &&
	  !sq_respHandleSQ_preStageDeqPendingWorkReqReg &&
	  !sq_respHandleSQ_recvRetryRespReg)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_preBuildRespInfo called conflicting methods read and\n  write of module instance sq_respHandleSQ_preStageRespTypeReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_preBuildRespInfo &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_retryFlushReg &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_respHandleSQ_recvErrRespReg &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  (!sq_respHandleSQ_preStageDeqPendingWorkReqReg ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	  (!sq_respHandleSQ_preStageDeqPktMetaDataReg ||
	   respPktPipe_metaDataQ_EMPTY_N) &&
	  sq_respHandleSQ_incomingRespQ_FULL_N)
	$display("Error: \"RespHandleSQ.bsv\", line 484, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq and\n  RL_sq_respHandleSQ_preBuildRespInfo called conflicting methods read and\n  write of module instance sq_respHandleSQ_preStageStateReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq &&
	  (sq_pendingWorkReqBuf_scanStartReg_port1__read ||
	   sq_pendingWorkReqBuf_preScanRestartReg_port1__read))
	begin
	  v__h120515 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq &&
	  (sq_pendingWorkReqBuf_scanStartReg_port1__read ||
	   sq_pendingWorkReqBuf_preScanRestartReg_port1__read))
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h120515,
		 "\"SpecialFIFOF.bsv\", line 434, column 17\n",
		 "dequeue assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq &&
	  (sq_pendingWorkReqBuf_scanStartReg_port1__read ||
	   sq_pendingWorkReqBuf_preScanRestartReg_port1__read))
	$display("cannot dequeue when scanStartReg=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq &&
	  sq_pendingWorkReqBuf_scanStartReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read &&
	  !sq_pendingWorkReqBuf_scanStartReg_port1__read)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq &&
	  (sq_pendingWorkReqBuf_scanStartReg_port1__read ||
	   sq_pendingWorkReqBuf_preScanRestartReg_port1__read))
	$display(" or preScanRestartReg=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq &&
	  sq_pendingWorkReqBuf_scanStartReg_port1__read &&
	  !sq_pendingWorkReqBuf_preScanRestartReg_port1__read)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq &&
	  (sq_pendingWorkReqBuf_scanStartReg_port1__read ||
	   sq_pendingWorkReqBuf_preScanRestartReg_port1__read))
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload &&
	  respPktPipe_metaDataQ_EMPTY_N)
	$display("Error: \"RespHandleSQ.bsv\", line 1534, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_errFlushWorkReq and\n  RL_sq_respHandleSQ_retryFlushPktMetaDataAndPayload called conflicting\n  methods enq and enq of module instance sq_respHandleSQ_incomingRespQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_errFlushIncomingResp)
	$display("Error: \"RespHandleSQ.bsv\", line 1534, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_errFlushWorkReq and\n  RL_sq_respHandleSQ_errFlushIncomingResp called conflicting methods enq and\n  enq of module instance sq_respHandleSQ_incomingRespQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_checkTimeOutErr &&
	  sq_retryHandler_timeOutNotificationQ_D_OUT)
	$display("Error: \"RespHandleSQ.bsv\", line 1534, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_errFlushWorkReq and\n  RL_sq_respHandleSQ_checkTimeOutErr called conflicting methods port0__read\n  and port0__write of module instance sq_respHandleSQ_hasTimeOutErrReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_discardGhostResp)
	$display("Error: \"RespHandleSQ.bsv\", line 1534, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_errFlushWorkReq and\n  RL_sq_respHandleSQ_discardGhostResp called conflicting methods enq and enq\n  of module instance sq_respHandleSQ_incomingRespQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_handleRespByType &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  (sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	  sq_respHandleSQ_incomingRespQ_FULL_N &&
	  _write_RL_sq_respHandleSQ_handleRespByType_EN_sq_respHandleSQ_recvErrRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 1534, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_errFlushWorkReq and\n  RL_sq_respHandleSQ_handleRespByType called conflicting methods read and\n  write of module instance sq_respHandleSQ_recvErrRespReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_recvRespHeader &&
	  cntrl_stateReg == 4'd3 &&
	  !sq_respHandleSQ_errOccurredReg &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  (sq_pendingWorkReqBuf_scanStateReg == 2'd0 ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd2) &&
	  sq_respHandleSQ_incomingRespQ_FULL_N &&
	  _write_RL_sq_respHandleSQ_recvRespHeader_EN_sq_respHandleSQ_recvErrRespReg_wget)
	$display("Error: \"RespHandleSQ.bsv\", line 1534, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_errFlushWorkReq and\n  RL_sq_respHandleSQ_recvRespHeader called conflicting methods read and write\n  of module instance sq_respHandleSQ_recvErrRespReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_errFlushWorkReq &&
	  WILL_FIRE_RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq)
	$display("Error: \"RespHandleSQ.bsv\", line 1534, column 10: (R0002)\n  Conflict-free rules RL_sq_respHandleSQ_errFlushWorkReq and\n  RL_sq_respHandleSQ_deqPktMetaDataOrWorkReq called conflicting methods enq\n  and enq of module instance sq_respHandleSQ_incomingRespQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	begin
	  v__h29295 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h29295,
		 "\"SpecialFIFOF.bsv\", line 301, column 13\n",
		 "scanStartReg and popReg assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("scanStartReg=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display(", popReg=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display(" cannot both be true");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	begin
	  v__h29442 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h29442,
		 "\"SpecialFIFOF.bsv\", line 310, column 13\n",
		 "preScanRestartReg and popReg assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("preScanRestartReg=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display(", popReg=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display(" cannot both be true");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  (sq_pendingWorkReqBuf_scanStateReg == 2'd2 ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd1) &&
	  sq_pendingWorkReqBuf_itemCnt_Q_OUT == 3'd0)
	begin
	  v__h29608 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  (sq_pendingWorkReqBuf_scanStateReg == 2'd2 ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd1) &&
	  sq_pendingWorkReqBuf_itemCnt_Q_OUT == 3'd0)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h29608,
		 "\"SpecialFIFOF.bsv\", line 321, column 17\n",
		 "notEmpty assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd1 &&
	  sq_pendingWorkReqBuf_itemCnt_Q_OUT == 3'd0)
	$display("itemCnt=%0d",
		 sq_pendingWorkReqBuf_itemCnt_Q_OUT,
		 " cannot be zero when scanStateReg=",
		 "SCAN_Q_PRE_SCAN_MODE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_itemCnt_Q_OUT == 3'd0)
	$display("itemCnt=%0d",
		 sq_pendingWorkReqBuf_itemCnt_Q_OUT,
		 " cannot be zero when scanStateReg=",
		 "SCAN_Q_SCAN_MODE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  (sq_pendingWorkReqBuf_scanStateReg == 2'd2 ||
	   sq_pendingWorkReqBuf_scanStateReg == 2'd1) &&
	  sq_pendingWorkReqBuf_itemCnt_Q_OUT == 3'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  sq_pendingWorkReqBuf_itemCnt_Q_OUT != 3'd0)
	begin
	  v__h29763 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  sq_pendingWorkReqBuf_itemCnt_Q_OUT != 3'd0)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h29763,
		 "\"SpecialFIFOF.bsv\", line 333, column 17\n",
		 "isEmpty assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  sq_pendingWorkReqBuf_itemCnt_Q_OUT != 3'd0)
	$display("itemCnt=%0d should be zero when isEmpty=",
		 sq_pendingWorkReqBuf_itemCnt_Q_OUT,
		 "True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  sq_pendingWorkReqBuf_itemCnt_Q_OUT != 3'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  sq_pendingWorkReqBuf_fullReg &&
	  sq_pendingWorkReqBuf_itemCnt_Q_OUT != 3'd4)
	begin
	  v__h29891 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  sq_pendingWorkReqBuf_fullReg &&
	  sq_pendingWorkReqBuf_itemCnt_Q_OUT != 3'd4)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h29891,
		 "\"SpecialFIFOF.bsv\", line 343, column 17\n",
		 "isFull assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  sq_pendingWorkReqBuf_fullReg &&
	  sq_pendingWorkReqBuf_itemCnt_Q_OUT != 3'd4)
	$display("itemCnt=%0d should == qSz=%0d when isFull=",
		 sq_pendingWorkReqBuf_itemCnt_Q_OUT,
		 $signed(32'd4),
		 "True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  sq_pendingWorkReqBuf_fullReg &&
	  sq_pendingWorkReqBuf_itemCnt_Q_OUT != 3'd4)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_popReg_port1__read &&
	  sq_pendingWorkReqBuf_deqPtrReg_90_EQ_sq_pendin_ETC___d1031)
	begin
	  v__h30076 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_popReg_port1__read &&
	  sq_pendingWorkReqBuf_deqPtrReg_90_EQ_sq_pendin_ETC___d1031)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h30076,
		 "\"SpecialFIFOF.bsv\", line 357, column 21\n",
		 "dequeue beyond scan assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_popReg_port1__read &&
	  sq_pendingWorkReqBuf_deqPtrReg_90_EQ_sq_pendin_ETC___d1031 &&
	  sq_pendingWorkReqBuf_pushReg_port1__read[679] &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  sq_pendingWorkReqBuf_fullReg)
	$display("deqPtrReg=%0d should != scanPtrReg=%0d + 1",
		 sq_pendingWorkReqBuf_deqPtrReg,
		 sq_pendingWorkReqBuf_scanPtrReg,
		 " when enqPtrReg=%0d",
		 sq_pendingWorkReqBuf_enqPtrReg,
		 ", scanStateReg=",
		 "SCAN_Q_SCAN_MODE",
		 ", popReg=",
		 "True",
		 ", hasPush=",
		 "True",
		 ", scanCnt=%0d",
		 sq_pendingWorkReqBuf_scanCnt_Q_OUT,
		 ", isEmpty=",
		 "True",
		 ", isFull=",
		 "True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_popReg_port1__read &&
	  sq_pendingWorkReqBuf_deqPtrReg_90_EQ_sq_pendin_ETC___d1031 &&
	  sq_pendingWorkReqBuf_pushReg_port1__read[679] &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  !sq_pendingWorkReqBuf_fullReg)
	$display("deqPtrReg=%0d should != scanPtrReg=%0d + 1",
		 sq_pendingWorkReqBuf_deqPtrReg,
		 sq_pendingWorkReqBuf_scanPtrReg,
		 " when enqPtrReg=%0d",
		 sq_pendingWorkReqBuf_enqPtrReg,
		 ", scanStateReg=",
		 "SCAN_Q_SCAN_MODE",
		 ", popReg=",
		 "True",
		 ", hasPush=",
		 "True",
		 ", scanCnt=%0d",
		 sq_pendingWorkReqBuf_scanCnt_Q_OUT,
		 ", isEmpty=",
		 "True",
		 ", isFull=",
		 "False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_popReg_port1__read &&
	  sq_pendingWorkReqBuf_deqPtrReg_90_EQ_sq_pendin_ETC___d1031 &&
	  sq_pendingWorkReqBuf_pushReg_port1__read[679] &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  sq_pendingWorkReqBuf_fullReg)
	$display("deqPtrReg=%0d should != scanPtrReg=%0d + 1",
		 sq_pendingWorkReqBuf_deqPtrReg,
		 sq_pendingWorkReqBuf_scanPtrReg,
		 " when enqPtrReg=%0d",
		 sq_pendingWorkReqBuf_enqPtrReg,
		 ", scanStateReg=",
		 "SCAN_Q_SCAN_MODE",
		 ", popReg=",
		 "True",
		 ", hasPush=",
		 "True",
		 ", scanCnt=%0d",
		 sq_pendingWorkReqBuf_scanCnt_Q_OUT,
		 ", isEmpty=",
		 "False",
		 ", isFull=",
		 "True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_popReg_port1__read &&
	  sq_pendingWorkReqBuf_deqPtrReg_90_EQ_sq_pendin_ETC___d1031 &&
	  sq_pendingWorkReqBuf_pushReg_port1__read[679] &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  !sq_pendingWorkReqBuf_fullReg)
	$display("deqPtrReg=%0d should != scanPtrReg=%0d + 1",
		 sq_pendingWorkReqBuf_deqPtrReg,
		 sq_pendingWorkReqBuf_scanPtrReg,
		 " when enqPtrReg=%0d",
		 sq_pendingWorkReqBuf_enqPtrReg,
		 ", scanStateReg=",
		 "SCAN_Q_SCAN_MODE",
		 ", popReg=",
		 "True",
		 ", hasPush=",
		 "True",
		 ", scanCnt=%0d",
		 sq_pendingWorkReqBuf_scanCnt_Q_OUT,
		 ", isEmpty=",
		 "False",
		 ", isFull=",
		 "False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_popReg_port1__read &&
	  sq_pendingWorkReqBuf_deqPtrReg_90_EQ_sq_pendin_ETC___d1031 &&
	  !sq_pendingWorkReqBuf_pushReg_port1__read[679] &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  sq_pendingWorkReqBuf_fullReg)
	$display("deqPtrReg=%0d should != scanPtrReg=%0d + 1",
		 sq_pendingWorkReqBuf_deqPtrReg,
		 sq_pendingWorkReqBuf_scanPtrReg,
		 " when enqPtrReg=%0d",
		 sq_pendingWorkReqBuf_enqPtrReg,
		 ", scanStateReg=",
		 "SCAN_Q_SCAN_MODE",
		 ", popReg=",
		 "True",
		 ", hasPush=",
		 "False",
		 ", scanCnt=%0d",
		 sq_pendingWorkReqBuf_scanCnt_Q_OUT,
		 ", isEmpty=",
		 "True",
		 ", isFull=",
		 "True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_popReg_port1__read &&
	  sq_pendingWorkReqBuf_deqPtrReg_90_EQ_sq_pendin_ETC___d1031 &&
	  !sq_pendingWorkReqBuf_pushReg_port1__read[679] &&
	  sq_pendingWorkReqBuf_emptyReg &&
	  !sq_pendingWorkReqBuf_fullReg)
	$display("deqPtrReg=%0d should != scanPtrReg=%0d + 1",
		 sq_pendingWorkReqBuf_deqPtrReg,
		 sq_pendingWorkReqBuf_scanPtrReg,
		 " when enqPtrReg=%0d",
		 sq_pendingWorkReqBuf_enqPtrReg,
		 ", scanStateReg=",
		 "SCAN_Q_SCAN_MODE",
		 ", popReg=",
		 "True",
		 ", hasPush=",
		 "False",
		 ", scanCnt=%0d",
		 sq_pendingWorkReqBuf_scanCnt_Q_OUT,
		 ", isEmpty=",
		 "True",
		 ", isFull=",
		 "False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_popReg_port1__read &&
	  sq_pendingWorkReqBuf_deqPtrReg_90_EQ_sq_pendin_ETC___d1031 &&
	  !sq_pendingWorkReqBuf_pushReg_port1__read[679] &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  sq_pendingWorkReqBuf_fullReg)
	$display("deqPtrReg=%0d should != scanPtrReg=%0d + 1",
		 sq_pendingWorkReqBuf_deqPtrReg,
		 sq_pendingWorkReqBuf_scanPtrReg,
		 " when enqPtrReg=%0d",
		 sq_pendingWorkReqBuf_enqPtrReg,
		 ", scanStateReg=",
		 "SCAN_Q_SCAN_MODE",
		 ", popReg=",
		 "True",
		 ", hasPush=",
		 "False",
		 ", scanCnt=%0d",
		 sq_pendingWorkReqBuf_scanCnt_Q_OUT,
		 ", isEmpty=",
		 "False",
		 ", isFull=",
		 "True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_popReg_port1__read &&
	  sq_pendingWorkReqBuf_deqPtrReg_90_EQ_sq_pendin_ETC___d1031 &&
	  !sq_pendingWorkReqBuf_pushReg_port1__read[679] &&
	  !sq_pendingWorkReqBuf_emptyReg &&
	  !sq_pendingWorkReqBuf_fullReg)
	$display("deqPtrReg=%0d should != scanPtrReg=%0d + 1",
		 sq_pendingWorkReqBuf_deqPtrReg,
		 sq_pendingWorkReqBuf_scanPtrReg,
		 " when enqPtrReg=%0d",
		 sq_pendingWorkReqBuf_enqPtrReg,
		 ", scanStateReg=",
		 "SCAN_Q_SCAN_MODE",
		 ", popReg=",
		 "True",
		 ", hasPush=",
		 "False",
		 ", scanCnt=%0d",
		 sq_pendingWorkReqBuf_scanCnt_Q_OUT,
		 ", isEmpty=",
		 "False",
		 ", isFull=",
		 "False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_popReg_port1__read &&
	  sq_pendingWorkReqBuf_deqPtrReg_90_EQ_sq_pendin_ETC___d1031)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_scanStopReg_port1__read &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read)
	begin
	  v__h30289 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_scanStopReg_port1__read &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h30289,
		 "\"SpecialFIFOF.bsv\", line 375, column 17\n",
		 "scanStopReg and preScanRestartReg assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_scanStopReg_port1__read &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read)
	$display("scanStopReg=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_scanStopReg_port1__read &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_scanStopReg_port1__read &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read)
	$display(", preScanRestartReg=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_scanStopReg_port1__read &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_scanStopReg_port1__read &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read)
	$display(" cannot both be true");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd2 &&
	  sq_pendingWorkReqBuf_scanStopReg_port1__read &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd1 &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	begin
	  v__h30463 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd1 &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h30463,
		 "\"SpecialFIFOF.bsv\", line 396, column 17\n",
		 "no pop when inPreScanMode assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd1 &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("popReg[1]=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd1 &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd1 &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display(" should be false when inPreScanMode=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd1 &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  sq_pendingWorkReqBuf_scanStateReg == 2'd1 &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  (sq_pendingWorkReqBuf_itemCnt_Q_OUT > 3'd4 ||
	   sq_pendingWorkReqBuf_itemCnt_Q_OUT <
	   sq_pendingWorkReqBuf_scanCnt_Q_OUT))
	begin
	  v__h30613 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  (sq_pendingWorkReqBuf_itemCnt_Q_OUT > 3'd4 ||
	   sq_pendingWorkReqBuf_itemCnt_Q_OUT <
	   sq_pendingWorkReqBuf_scanCnt_Q_OUT))
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h30613,
		 "\"SpecialFIFOF.bsv\", line 406, column 13\n",
		 "itemCnt >= scanCnt assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  (sq_pendingWorkReqBuf_itemCnt_Q_OUT > 3'd4 ||
	   sq_pendingWorkReqBuf_itemCnt_Q_OUT <
	   sq_pendingWorkReqBuf_scanCnt_Q_OUT))
	$display("valueOf(qSz)=%0d should >= itemCnt=%0d",
		 $signed(32'd4),
		 sq_pendingWorkReqBuf_itemCnt_Q_OUT,
		 " and itemCnt=%0d should >= scanCnt=%0d",
		 sq_pendingWorkReqBuf_itemCnt_Q_OUT,
		 sq_pendingWorkReqBuf_scanCnt_Q_OUT);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_check &&
	  (sq_pendingWorkReqBuf_itemCnt_Q_OUT > 3'd4 ||
	   sq_pendingWorkReqBuf_itemCnt_Q_OUT <
	   sq_pendingWorkReqBuf_scanCnt_Q_OUT))
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode &&
	  sq_pendingWorkReqBuf_preScanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_emptyReg)
	begin
	  v__h24390 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode &&
	  sq_pendingWorkReqBuf_preScanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h24390,
		 "\"SpecialFIFOF.bsv\", line 175, column 17\n",
		 "isEmpty assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode &&
	  sq_pendingWorkReqBuf_preScanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("cannot start preScan when isEmpty=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode &&
	  sq_pendingWorkReqBuf_preScanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode &&
	  sq_pendingWorkReqBuf_preScanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_emptyReg)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode &&
	  sq_pendingWorkReqBuf_preScanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	begin
	  v__h24503 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode &&
	  sq_pendingWorkReqBuf_preScanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h24503,
		 "\"SpecialFIFOF.bsv\", line 180, column 17\n",
		 "no pop when startPreScan assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode &&
	  sq_pendingWorkReqBuf_preScanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("popReg[1]=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode &&
	  sq_pendingWorkReqBuf_preScanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode &&
	  sq_pendingWorkReqBuf_preScanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display(" should be false when preScanStartReg[1]=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode &&
	  sq_pendingWorkReqBuf_preScanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_fifoMode &&
	  sq_pendingWorkReqBuf_preScanStartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode &&
	  sq_pendingWorkReqBuf_emptyReg)
	begin
	  v__h24769 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h24769,
		 "\"SpecialFIFOF.bsv\", line 202, column 13\n",
		 "isEmpty assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("isEmpty=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display(" should be false when inPreScanMode");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode &&
	  sq_pendingWorkReqBuf_emptyReg)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	begin
	  v__h24880 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h24880,
		 "\"SpecialFIFOF.bsv\", line 210, column 13\n",
		 "no pop when inPreScanMode assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("popReg[1]=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display(" should be false when preScanStartReg[1]=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode &&
	  sq_pendingWorkReqBuf_popReg_port1__read &&
	  sq_pendingWorkReqBuf_preScanStartReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode &&
	  sq_pendingWorkReqBuf_popReg_port1__read &&
	  !sq_pendingWorkReqBuf_preScanStartReg_port1__read)
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_preScanMode &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange &&
	  sq_pendingWorkReqBuf_emptyReg)
	begin
	  v__h25249 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h25249,
		 "\"SpecialFIFOF.bsv\", line 234, column 13\n",
		 "isEmpty assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("cannot scan next when isEmpty=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange &&
	  sq_pendingWorkReqBuf_emptyReg)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange &&
	  sq_pendingWorkReqBuf_emptyReg)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange &&
	  !sq_pendingWorkReqBuf_scanStopReg_port1__read &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	begin
	  v__h25475 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange &&
	  !sq_pendingWorkReqBuf_scanStopReg_port1__read &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h25475,
		 "\"SpecialFIFOF.bsv\", line 249, column 17\n",
		 "no pop when preScanRestart assertion @ mkScanFIFOF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange &&
	  !sq_pendingWorkReqBuf_scanStopReg_port1__read &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("popReg[1]=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange &&
	  !sq_pendingWorkReqBuf_scanStopReg_port1__read &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange &&
	  !sq_pendingWorkReqBuf_scanStopReg_port1__read &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display(" should be false when preScanRestartReg[1]=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange &&
	  !sq_pendingWorkReqBuf_scanStopReg_port1__read &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_pendingWorkReqBuf_scanModeStateChange &&
	  !sq_pendingWorkReqBuf_scanStopReg_port1__read &&
	  sq_pendingWorkReqBuf_preScanRestartReg_port1__read &&
	  sq_pendingWorkReqBuf_popReg_port1__read)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_decrPendingNewWorkReqCnt &&
	  sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg == 8'd0)
	begin
	  v__h43204 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_decrPendingNewWorkReqCnt &&
	  sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg == 8'd0)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h43204,
		 "\"QueuePair.bsv\", line 123, column 13\n",
		 "decrPendingNewWorkReqCnt assertion @ mkNewPendingWorkReqPipeOut");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_decrPendingNewWorkReqCnt &&
	  sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg == 8'd0)
	$display("pendingNewWorkReqCnt should larger than zero when decrOne");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_newPendingWorkReqPiptOut_decrPendingNewWorkReqCnt &&
	  sq_newPendingWorkReqPiptOut_pendingNewWorkReqCnt_cntReg == 8'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_genWorkCompSQ &&
	  sq_respHandleSQ_pendingWorkCompQ_D_OUT[635] &&
	  !sq_respHandleSQ_pendingWorkCompQ_D_OUT[633])
	begin
	  v__h118758 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_genWorkCompSQ &&
	  sq_respHandleSQ_pendingWorkCompQ_D_OUT[635] &&
	  !sq_respHandleSQ_pendingWorkCompQ_D_OUT[633])
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h118758,
		 "\"RespHandleSQ.bsv\", line 1421, column 13\n",
		 "hasLocalErr -> genWorkComp assertion @ mkRespHandleSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_genWorkCompSQ &&
	  sq_respHandleSQ_pendingWorkCompQ_D_OUT[635] &&
	  !sq_respHandleSQ_pendingWorkCompQ_D_OUT[633])
	$display("genWorkComp=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_genWorkCompSQ &&
	  sq_respHandleSQ_pendingWorkCompQ_D_OUT[635] &&
	  !sq_respHandleSQ_pendingWorkCompQ_D_OUT[633])
	$display("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_genWorkCompSQ &&
	  sq_respHandleSQ_pendingWorkCompQ_D_OUT[635] &&
	  !sq_respHandleSQ_pendingWorkCompQ_D_OUT[633])
	$display(" should be true when hasLocalErr=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_genWorkCompSQ &&
	  sq_respHandleSQ_pendingWorkCompQ_D_OUT[635] &&
	  !sq_respHandleSQ_pendingWorkCompQ_D_OUT[633])
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_respHandleSQ_genWorkCompSQ &&
	  sq_respHandleSQ_pendingWorkCompQ_D_OUT[635] &&
	  !sq_respHandleSQ_pendingWorkCompQ_D_OUT[633])
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	begin
	  v__h126312 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h126312,
		 "\"WorkCompGen.bsv\", line 180, column 13\n",
		 "maybeWorkComp assertion @ mkWorkCompGenSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("maybeWorkComp=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("tagged Invalid ", "");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$display(" should be valid");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_genPendingWorkCompSQ &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd0 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd1 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd2 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd3 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd4 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd5 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd6 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd7 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd8 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd9 &&
	  sq_workCompGenSQ_pendingWorkCompQ4SQ_D_OUT[568:565] != 4'd10)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onCreate && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	begin
	  v__h3196 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onCreate && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h3196,
		 "\"Controller.bsv\", line 452, column 21\n",
		 "no QP destroy on create @ mkCntrlQP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onCreate && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$display("request QPN=%h", cntrl_reqQ_D_OUT[266:243], ", qpReqType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onCreate && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$display("REQ_QP_DESTROY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onCreate && cntrl_reqQ_D_OUT[300:299] == 2'd1)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onCreate && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	begin
	  v__h3517 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onCreate && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h3517,
		 "\"Controller.bsv\", line 476, column 21\n",
		 "unreachible case @ mkCntrlQP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onCreate && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$display("request QPN=%h", cntrl_reqQ_D_OUT[266:243], ", qpReqType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onCreate && cntrl_reqQ_D_OUT[300:299] == 2'd0)
	$display("REQ_QP_CREATE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cntrl_onCreate && cntrl_reqQ_D_OUT[300:299] != 2'd1 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd2 &&
	  cntrl_reqQ_D_OUT[300:299] != 2'd3)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ &&
	  WILL_FIRE_RL_sq_workCompGenSQ_genWorkCompSQ &&
	  cntrl_stateReg != 4'd6 &&
	  sq_workCompGenSQ_dmaWaitingQ_EMPTY_N &&
	  sq_workCompGenSQ_genWorkCompQ_FULL_N &&
	  !sq_workCompGenSQ_genWorkCompQ_D_OUT[1])
	$display("Error: \"WorkCompGen.bsv\", line 288, column 10: (R0002)\n  Conflict-free rules RL_sq_workCompGenSQ_noDmaWaitSQ and\n  RL_sq_workCompGenSQ_genWorkCompSQ called conflicting methods read and write\n  of module instance sq_workCompGenSQ_workCompGenStateReg.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ &&
	  WILL_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ)
	$display("Error: \"WorkCompGen.bsv\", line 288, column 10: (R0002)\n  Conflict-free rules RL_sq_workCompGenSQ_noDmaWaitSQ and\n  RL_sq_workCompGenSQ_waitDmaDoneSQ called conflicting methods first and deq\n  of module instance sq_workCompGenSQ_dmaWaitingQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ &&
	  WILL_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ)
	$display("Error: \"WorkCompGen.bsv\", line 288, column 10: (R0002)\n  Conflict-free rules RL_sq_workCompGenSQ_noDmaWaitSQ and\n  RL_sq_workCompGenSQ_waitDmaDoneSQ called conflicting methods deq and deq of\n  module instance sq_workCompGenSQ_dmaWaitingQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_noDmaWaitSQ &&
	  WILL_FIRE_RL_sq_workCompGenSQ_waitDmaDoneSQ)
	$display("Error: \"WorkCompGen.bsv\", line 288, column 10: (R0002)\n  Conflict-free rules RL_sq_workCompGenSQ_noDmaWaitSQ and\n  RL_sq_workCompGenSQ_waitDmaDoneSQ called conflicting methods enq and enq of\n  module instance sq_workCompGenSQ_genWorkCompQ.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ &&
	  sq_workCompGenSQ_genWorkCompQ_D_OUT[254:253] != 2'd0)
	begin
	  v__h129863 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ &&
	  sq_workCompGenSQ_genWorkCompQ_D_OUT[254:253] != 2'd0)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h129863,
		 "\"WorkCompGen.bsv\", line 307, column 13\n",
		 "wcGenReqSQ.wcReqType assertion @ mkWorkCompGenSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ &&
	  sq_workCompGenSQ_genWorkCompQ_D_OUT[254:253] != 2'd0)
	$display("wcGenReqSQ.wcReqType=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ &&
	  sq_workCompGenSQ_genWorkCompQ_D_OUT[254:253] == 2'd1)
	$display("WC_REQ_TYPE_PARTIAL_ACK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ &&
	  sq_workCompGenSQ_genWorkCompQ_D_OUT[254:253] == 2'd2)
	$display("WC_REQ_TYPE_NO_WC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ &&
	  sq_workCompGenSQ_genWorkCompQ_D_OUT[254:253] != 2'd0 &&
	  sq_workCompGenSQ_genWorkCompQ_D_OUT[254:253] != 2'd1 &&
	  sq_workCompGenSQ_genWorkCompQ_D_OUT[254:253] != 2'd2)
	$display("WC_REQ_TYPE_UNKNOWN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ &&
	  sq_workCompGenSQ_genWorkCompQ_D_OUT[254:253] != 2'd0)
	$display(" should == WC_REQ_TYPE_FULL_ACK, when error flush");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ &&
	  sq_workCompGenSQ_genWorkCompQ_D_OUT[254:253] != 2'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ &&
	  sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg &&
	  sq_workCompGenSQ_genWorkCompQ_D_OUT[856:793] !=
	  sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg)
	begin
	  v__h130013 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ &&
	  sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg &&
	  sq_workCompGenSQ_genWorkCompQ_D_OUT[856:793] !=
	  sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg)
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h130013,
		 "\"WorkCompGen.bsv\", line 322, column 17\n",
		 "wcGenReqSQ.wr.id assertion @ mkWorkCompGenSQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ &&
	  sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg &&
	  sq_workCompGenSQ_genWorkCompQ_D_OUT[856:793] !=
	  sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg)
	$display("wcGenReqSQ.wr.id=%h should == firstErrPartialAckWorkReqIdReg=%h",
		 sq_workCompGenSQ_genWorkCompQ_D_OUT[856:793],
		 sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg,
		 ", when error flush and isFirstErrPartialAckWorkReqReg=");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ &&
	  sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg &&
	  sq_workCompGenSQ_genWorkCompQ_D_OUT[856:793] !=
	  sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg)
	$display("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_sq_workCompGenSQ_errFlushSQ &&
	  sq_workCompGenSQ_isFirstErrPartialAckWorkReqReg &&
	  sq_workCompGenSQ_genWorkCompQ_D_OUT[856:793] !=
	  sq_workCompGenSQ_firstErrPartialAckWorkReqIdReg)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (cntrl_setStateErrReg_port1__read &&
	  (cntrl_stateReg == 4'd7 || cntrl_stateReg == 4'd0))
	begin
	  v__h7672 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (cntrl_setStateErrReg_port1__read &&
	  (cntrl_stateReg == 4'd7 || cntrl_stateReg == 4'd0))
	$display("ImmAssert failed in %m @time=%0t: %s-- %s: ",
		 v__h7672,
		 "\"Controller.bsv\", line 872, column 17\n",
		 "set state error assertion @ mkCntrlQP");
    if (RST_N != `BSV_RESET_VALUE)
      if (cntrl_setStateErrReg_port1__read &&
	  (cntrl_stateReg == 4'd7 || cntrl_stateReg == 4'd0))
	$display("stateReg=");
    if (RST_N != `BSV_RESET_VALUE)
      if (cntrl_setStateErrReg_port1__read && cntrl_stateReg == 4'd0)
	$display("IBV_QPS_RESET");
    if (RST_N != `BSV_RESET_VALUE)
      if (cntrl_setStateErrReg_port1__read && cntrl_stateReg == 4'd7)
	$display("IBV_QPS_UNKNOWN");
    if (RST_N != `BSV_RESET_VALUE)
      if (cntrl_setStateErrReg_port1__read &&
	  (cntrl_stateReg == 4'd7 || cntrl_stateReg == 4'd0))
	$display(" should not be IBV_QPS_UNKNOWN or IBV_QPS_RESET");
    if (RST_N != `BSV_RESET_VALUE)
      if (cntrl_setStateErrReg_port1__read &&
	  (cntrl_stateReg == 4'd7 || cntrl_stateReg == 4'd0))
	$finish(32'd1);
  end
  // synopsys translate_on
endmodule  // mkQP

